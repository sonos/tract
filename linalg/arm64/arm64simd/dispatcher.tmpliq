// vim: ft=arm

.non_linear:
    ldr         x1, [x0, #24]
    sub         x1, x1, 40

.non_linear_loop:
    add         x1, x1, 40
    ldr         x2, [x1]

    mov         x4, #13

    cmp         x2, #12
    csel        x2, x4, x2, gt
    cmp         x2, #0
    csel        x2, x4, x2, lt

    adr         x3, jmp_table
    add         x3, x3, x2, LSL#2
    br          x3

jmp_table:
    b   .done
    b   .min
    b   .max
    b   .add_unicast
    b   .per_row_mul
    b   .per_row_add
    b   .per_col_mul
    b   .per_col_add
    b   .add_row_col_product
    b   .scalar_mul
    b   .scalar_add
    b   .q_scale
    b   .store

.unsupported:
    mov         x0, #1
    b           .return

.done:
    mov         x0, 0
    b           .return

