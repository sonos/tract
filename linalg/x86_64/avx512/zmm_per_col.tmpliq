{% comment %}
Generate the code for a per-col instruction.
---
Arguments:
    mr - kernel size in number of elements
    nr - kernel size in number of elements
    op - the avx512 instruction
    flipped - boolean to flip the order
    label - the asm label to clear
{% endcomment %}

{{L}}{{label}}:
    mov             rax, [rdi + 8]

{% assign mr_over_16 = mr | divided_by:16 %}
{% assign mr_over_16_min_1 = mr | divided_by:16 | minus:1 %}

{% assign from = 0 %}
{% assign to = mr_over_16 | times:nr | minus:1 %}

{% assign tmp = to | plus:1 %}
{% assign cols = to | plus:1 | minus:from | divided_by:mr_over_16 %}

{% assign cols_min_1 = to | plus:1 | minus:from | divided_by:mr_over_16 | minus:1 %}
// {{to|minus:from|plus:1}} cols:{{cols}}

{% for right in (0..cols_min_1) %}
    vbroadcastss    zmm{{tmp}}, dword ptr [rax]
    add             rax, 4

    {% for down in (0..mr_over_16_min_1) %}
        {% assign acc = mr_over_16 | times:right | plus:from | plus:down %}
        {% if flipped %}
            {{op}} zmm{{acc}}, zmm{{acc}}, zmm{{tmp}}
        {% else %}
            {{op}} zmm{{acc}}, zmm{{tmp}}, zmm{{acc}}
        {% endif %}
    {% endfor %}
{% endfor %}

    jmp {{L}}non_linear_loop
