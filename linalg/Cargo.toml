[package]
name = "tract-linalg"
version = "0.21.6-pre"
license = "MIT OR Apache-2.0"
authors = ["Mathieu Poumeyrol <kali@zoy.org>"]
description = "Tiny, no-nonsense, self contained, TensorFlow and ONNX inference"
repository = "https://github.com/snipsco/tract"
keywords = ["TensorFlow", "NeuralNetworks"]
categories = ["science"]
autobenches = false
edition = "2021"

[badges]
maintenance = { status = "actively-developed" }

[dependencies]
byteorder.workspace = true
derive-new.workspace = true
downcast-rs.workspace = true
dyn-clone.workspace = true
dyn-hash.workspace = true
lazy_static.workspace = true
log.workspace = true
num-traits.workspace = true
paste.workspace = true
rayon.workspace = true
scan_fmt.workspace = true
tract-data = { version = "=0.21.6-pre", path = "../data" }

[build-dependencies]
cc.workspace = true
half.workspace = true
liquid.workspace = true
liquid-core.workspace = true
smallvec.workspace = true
unicode-normalization.workspace = true
time.workspace = true
walkdir.workspace = true

[dev-dependencies]
env_logger.workspace = true
nu-ansi-term.workspace = true
core_affinity.workspace = true

[target.'cfg(not(target_family = "wasm"))'.dev-dependencies]
criterion.workspace = true
proptest.workspace = true

[target.'cfg(target_family = "wasm")'.dev-dependencies]
# Wasm doesn't support the `rayon` feature of criterion
criterion = { version = "0.4", default-features = false, features = ["plotters", "cargo_bench_support"] }
# Wasm doesn't support the `fork` feature of proptest.
proptest = { version = "1.0.0", default-features = false, features = ["std", "bit-set"] }

[features]
# This feature is meant to accomodate very restrictive / legacy toolchains that do
# have support for fp16 instructions, breaking tract compilation.
# It is not meant to be used in other situations, where run-time detection is
# preferred.
no_fp16 = []
apple-amx-ios = []
default = []
complex = [ "tract-data/complex" ]

[[bench]]
bench = false
name = "arm64"
harness = false

[[bench]]
name = "mat_vec"
harness = false

[[bench]]
name = "mm_for_wavenet_hw"
harness = false

[[bench]]
name = "mm_for_inception"
harness = false

[[bench]]
name = "mm_for_asr_am"
harness = false

[[bench]]
name = "sigmoid"
harness = false

[[bench]]
name = "softmax"
harness = false

[[bench]]
bench = false
name = "arm64simd"
harness = false

[[bench]]
bench = false
name = "arm32neon"
harness = false

[[bench]]
name = "virtual_im2col"
harness = false

[[bench]]
bench = false
name = "x86_64"
harness = false

[[bench]]
bench = false
name = "intel"
harness = false

[[bench]]
bench = false
name = "leaky_relu"
harness = false
