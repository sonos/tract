// vim: ft=arm

.non_linear:

    ldr     r1, [r0, #12]

.non_linear_loop_entry:
    sub     r1, #20

.non_linear_loop:
    add     r1, #20
    ldm     r1, { r2, r3, r4, r5, r6 }
    cmp     r2, #12
    movgt   r2, #13
    cmp     r2, #0
    movlt   r2, #13

    adr     r7, .jmp_table
    ldr     pc, [r7, r2, lsl #2]

.jmp_table:
    .word     .done
    .word     .min
    .word     .max
    .word     .add_unicast
    .word     .per_row_mul
    .word     .per_row_add
    .word     .per_col_mul
    .word     .per_col_add
    .word     .add_row_col_product
    .word     .scalar_mul
    .word     .scalar_add
    .word     .q_scale
    .word     .store

    add     r0, r2, #4000
    b           .return

.unsupported:
    mov         r0,     #1
    b           .return

.done:
    mov         r0,     #0
    b           .return

