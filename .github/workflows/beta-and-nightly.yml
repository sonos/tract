name: Beta and nightly Rust

on:
  pull_request:
  schedule:
    - cron:  '0 5 * * *'

env:
  CARGO_INCREMENTAL: false

jobs:
  linux:
    strategy:
      matrix:
        rust: [ beta, nightly ]
      fail-fast: false

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

    - uses: actions/cache@v3
      with:
        path: |
          ~/.rustup
          ~/.cargo/registry
          ~/.cargo/git
          target
          .cached
          #          ~/.cache/sccache
        key: ${{ runner.os }}-main-${{matrix.rust}}-${{steps.date.outputs.date}}-d

          #     - name: "Setup sccache"
          #       run: .travis/setup-sccache.sh

    - name: Rustup update
      run: rustup update
    - name: Native script
      env:
        RUST_VERSION: ${{matrix.rust}}
      run: .travis/regular-tests.sh

        #     - name: Stop sccache server
        #       run: sccache --stop-server || true

  warnings:
    strategy:
      matrix:
        rust: [ 1.75.0, beta ]
      fail-fast: false

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Rustup update
      run: rustup update
    - name: LLVM setup
      run: sudo apt-get install -y llvm
    - name: cargo check, -D warnings
      env:
        RUSTFLAGS: "-D warnings"
        RUST_VERSION: ${{matrix.rust}}
      run: |
          rustc --version
          cargo check --exclude tract-metal --exclude test-metal --workspace

  cargo-clippy:
    strategy:
      fail-fast: false
      matrix:
        rust: [ stable, beta, nightly ]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Rustup update, install clippy
      run: |
        ROOT=. .travis/ci-system-setup.sh
        rustup +${{matrix.rust}} component add clippy
      env:
        RUST_VERSION: ${{matrix.rust}}
    - name: Run cargo-clippy
      run: cargo clippy --exclude tract-metal --exclude test-metal --workspace
      env:
        RUSTFLAGS: "-D warnings --force-warn unknown_lints"
        RUST_VERSION: ${{matrix.rust}}

  cargo-deny:
    strategy:
      fail-fast: false

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Rustup update
      run: rustup update
    - name: Install cargo-deny
      run: |
        curl -L https://github.com/EmbarkStudios/cargo-deny/releases/download/0.14.24/cargo-deny-0.14.24-x86_64-unknown-linux-musl.tar.gz \
            | tar -zx --strip-components=1 "cargo-deny-0.14.24-x86_64-unknown-linux-musl/cargo-deny"
    - name: Run cargo-deny
      run: .travis/cargo-deny-check.sh
