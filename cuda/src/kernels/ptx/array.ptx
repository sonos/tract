//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-35583870
// Cuda compilation tools, release 12.8, V12.8.93
// Based on NVVM 7.0.1
//

.version 8.7
.target sm_87
.address_size 64

	// .globl	copy_unicast_bool

.visible .entry copy_unicast_bool(
	.param .u64 copy_unicast_bool_param_0,
	.param .u64 copy_unicast_bool_param_1,
	.param .u32 copy_unicast_bool_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [copy_unicast_bool_param_0];
	ld.param.u64 	%rd2, [copy_unicast_bool_param_1];
	ld.param.u32 	%r2, [copy_unicast_bool_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u8 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u8 	[%rd7], %rs1;

$L__BB0_2:
	ret;

}
	// .globl	copy_nd1_bool
.visible .entry copy_nd1_bool(
	.param .u64 copy_nd1_bool_param_0,
	.param .u64 copy_nd1_bool_param_1,
	.param .u32 copy_nd1_bool_param_2,
	.param .u32 copy_nd1_bool_param_3,
	.param .u32 copy_nd1_bool_param_4
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<38>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd31, [copy_nd1_bool_param_0];
	ld.param.u64 	%rd32, [copy_nd1_bool_param_1];
	ld.param.u32 	%r11, [copy_nd1_bool_param_2];
	ld.param.u32 	%r12, [copy_nd1_bool_param_3];
	ld.param.u32 	%r13, [copy_nd1_bool_param_4];
	cvta.to.global.u64 	%rd1, %rd32;
	cvta.to.global.u64 	%rd49, %rd31;
	mov.u32 	%r36, %tid.x;
	setp.ge.s32 	%p1, %r36, %r12;
	@%p1 bra 	$L__BB1_7;

	not.b32 	%r14, %r36;
	add.s32 	%r2, %r14, %r12;
	shr.u32 	%r15, %r2, 10;
	add.s32 	%r16, %r15, 1;
	and.b32  	%r35, %r16, 3;
	setp.eq.s32 	%p2, %r35, 0;
	@%p2 bra 	$L__BB1_4;

	mul.lo.s32 	%r17, %r36, %r13;
	cvt.s64.s32 	%rd33, %r17;
	add.s64 	%rd44, %rd1, %rd33;
	shl.b32 	%r18, %r13, 10;
	cvt.s64.s32 	%rd4, %r18;
	mul.lo.s32 	%r19, %r36, %r11;
	cvt.s64.s32 	%rd34, %r19;
	add.s64 	%rd43, %rd49, %rd34;
	shl.b32 	%r20, %r11, 10;
	cvt.s64.s32 	%rd6, %r20;

$L__BB1_3:
	.pragma "nounroll";
	ld.global.u8 	%rs1, [%rd43];
	st.global.u8 	[%rd44], %rs1;
	add.s32 	%r36, %r36, 1024;
	add.s64 	%rd44, %rd44, %rd4;
	add.s64 	%rd43, %rd43, %rd6;
	add.s32 	%r35, %r35, -1;
	setp.ne.s32 	%p3, %r35, 0;
	@%p3 bra 	$L__BB1_3;

$L__BB1_4:
	setp.lt.u32 	%p4, %r2, 3072;
	@%p4 bra 	$L__BB1_7;

	add.s32 	%r21, %r36, 1024;
	mul.lo.s32 	%r22, %r11, %r21;
	cvt.s64.s32 	%rd11, %r22;
	shl.b32 	%r23, %r11, 12;
	cvt.s64.s32 	%rd12, %r23;
	add.s32 	%r24, %r36, 2048;
	mul.lo.s32 	%r25, %r11, %r24;
	cvt.s64.s32 	%rd13, %r25;
	add.s32 	%r26, %r36, 3072;
	mul.lo.s32 	%r27, %r11, %r26;
	cvt.s64.s32 	%rd14, %r27;
	mul.lo.s32 	%r28, %r36, %r11;
	cvt.s64.s32 	%rd15, %r28;
	mul.lo.s32 	%r29, %r13, %r21;
	cvt.s64.s32 	%rd35, %r29;
	add.s64 	%rd48, %rd1, %rd35;
	shl.b32 	%r30, %r13, 12;
	cvt.s64.s32 	%rd17, %r30;
	mul.lo.s32 	%r31, %r13, %r24;
	cvt.s64.s32 	%rd36, %r31;
	add.s64 	%rd47, %rd1, %rd36;
	mul.lo.s32 	%r32, %r13, %r26;
	cvt.s64.s32 	%rd37, %r32;
	add.s64 	%rd46, %rd1, %rd37;
	mul.lo.s32 	%r33, %r36, %r13;
	cvt.s64.s32 	%rd38, %r33;
	add.s64 	%rd45, %rd1, %rd38;

$L__BB1_6:
	add.s64 	%rd39, %rd49, %rd15;
	ld.global.u8 	%rs2, [%rd39];
	st.global.u8 	[%rd45], %rs2;
	add.s64 	%rd40, %rd49, %rd11;
	ld.global.u8 	%rs3, [%rd40];
	st.global.u8 	[%rd48], %rs3;
	add.s64 	%rd41, %rd49, %rd13;
	ld.global.u8 	%rs4, [%rd41];
	st.global.u8 	[%rd47], %rs4;
	add.s64 	%rd42, %rd49, %rd14;
	ld.global.u8 	%rs5, [%rd42];
	st.global.u8 	[%rd46], %rs5;
	add.s64 	%rd49, %rd49, %rd12;
	add.s64 	%rd48, %rd48, %rd17;
	add.s64 	%rd47, %rd47, %rd17;
	add.s64 	%rd46, %rd46, %rd17;
	add.s64 	%rd45, %rd45, %rd17;
	add.s32 	%r36, %r36, 4096;
	setp.lt.s32 	%p5, %r36, %r12;
	@%p5 bra 	$L__BB1_6;

$L__BB1_7:
	ret;

}
	// .globl	copy_nd2_bool
.visible .entry copy_nd2_bool(
	.param .u64 copy_nd2_bool_param_0,
	.param .u64 copy_nd2_bool_param_1,
	.param .u32 copy_nd2_bool_param_2,
	.param .u32 copy_nd2_bool_param_3,
	.param .u32 copy_nd2_bool_param_4,
	.param .u32 copy_nd2_bool_param_5,
	.param .u32 copy_nd2_bool_param_6,
	.param .u32 copy_nd2_bool_param_7
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<43>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd31, [copy_nd2_bool_param_0];
	ld.param.u64 	%rd32, [copy_nd2_bool_param_1];
	ld.param.u32 	%r16, [copy_nd2_bool_param_2];
	ld.param.u32 	%r13, [copy_nd2_bool_param_3];
	ld.param.u32 	%r14, [copy_nd2_bool_param_5];
	ld.param.u32 	%r17, [copy_nd2_bool_param_6];
	ld.param.u32 	%r15, [copy_nd2_bool_param_7];
	cvta.to.global.u64 	%rd1, %rd32;
	cvta.to.global.u64 	%rd49, %rd31;
	mov.u32 	%r18, %ctaid.x;
	mul.lo.s32 	%r1, %r18, %r16;
	mul.lo.s32 	%r2, %r18, %r17;
	mov.u32 	%r41, %tid.x;
	setp.ge.s32 	%p1, %r41, %r14;
	@%p1 bra 	$L__BB2_7;

	not.b32 	%r19, %r41;
	add.s32 	%r4, %r19, %r14;
	shr.u32 	%r20, %r4, 10;
	add.s32 	%r21, %r20, 1;
	and.b32  	%r40, %r21, 3;
	setp.eq.s32 	%p2, %r40, 0;
	@%p2 bra 	$L__BB2_4;

	mad.lo.s32 	%r22, %r41, %r15, %r2;
	cvt.s64.s32 	%rd33, %r22;
	add.s64 	%rd44, %rd1, %rd33;
	shl.b32 	%r23, %r15, 10;
	cvt.s64.s32 	%rd4, %r23;
	mad.lo.s32 	%r24, %r41, %r13, %r1;
	cvt.s64.s32 	%rd34, %r24;
	add.s64 	%rd43, %rd49, %rd34;
	shl.b32 	%r25, %r13, 10;
	cvt.s64.s32 	%rd6, %r25;

$L__BB2_3:
	.pragma "nounroll";
	ld.global.u8 	%rs1, [%rd43];
	st.global.u8 	[%rd44], %rs1;
	add.s32 	%r41, %r41, 1024;
	add.s64 	%rd44, %rd44, %rd4;
	add.s64 	%rd43, %rd43, %rd6;
	add.s32 	%r40, %r40, -1;
	setp.ne.s32 	%p3, %r40, 0;
	@%p3 bra 	$L__BB2_3;

$L__BB2_4:
	setp.lt.u32 	%p4, %r4, 3072;
	@%p4 bra 	$L__BB2_7;

	add.s32 	%r26, %r41, 1024;
	mad.lo.s32 	%r27, %r13, %r26, %r1;
	cvt.s64.s32 	%rd11, %r27;
	shl.b32 	%r28, %r13, 12;
	cvt.s64.s32 	%rd12, %r28;
	add.s32 	%r29, %r41, 2048;
	mad.lo.s32 	%r30, %r13, %r29, %r1;
	cvt.s64.s32 	%rd13, %r30;
	add.s32 	%r31, %r41, 3072;
	mad.lo.s32 	%r32, %r13, %r31, %r1;
	cvt.s64.s32 	%rd14, %r32;
	mad.lo.s32 	%r33, %r41, %r13, %r1;
	cvt.s64.s32 	%rd15, %r33;
	mad.lo.s32 	%r34, %r15, %r26, %r2;
	cvt.s64.s32 	%rd35, %r34;
	add.s64 	%rd48, %rd1, %rd35;
	shl.b32 	%r35, %r15, 12;
	cvt.s64.s32 	%rd17, %r35;
	mad.lo.s32 	%r36, %r15, %r29, %r2;
	cvt.s64.s32 	%rd36, %r36;
	add.s64 	%rd47, %rd1, %rd36;
	mad.lo.s32 	%r37, %r15, %r31, %r2;
	cvt.s64.s32 	%rd37, %r37;
	add.s64 	%rd46, %rd1, %rd37;
	mad.lo.s32 	%r38, %r41, %r15, %r2;
	cvt.s64.s32 	%rd38, %r38;
	add.s64 	%rd45, %rd1, %rd38;

$L__BB2_6:
	add.s64 	%rd39, %rd49, %rd15;
	ld.global.u8 	%rs2, [%rd39];
	st.global.u8 	[%rd45], %rs2;
	add.s64 	%rd40, %rd49, %rd11;
	ld.global.u8 	%rs3, [%rd40];
	st.global.u8 	[%rd48], %rs3;
	add.s64 	%rd41, %rd49, %rd13;
	ld.global.u8 	%rs4, [%rd41];
	st.global.u8 	[%rd47], %rs4;
	add.s64 	%rd42, %rd49, %rd14;
	ld.global.u8 	%rs5, [%rd42];
	st.global.u8 	[%rd46], %rs5;
	add.s64 	%rd49, %rd49, %rd12;
	add.s64 	%rd48, %rd48, %rd17;
	add.s64 	%rd47, %rd47, %rd17;
	add.s64 	%rd46, %rd46, %rd17;
	add.s64 	%rd45, %rd45, %rd17;
	add.s32 	%r41, %r41, 4096;
	setp.lt.s32 	%p5, %r41, %r14;
	@%p5 bra 	$L__BB2_6;

$L__BB2_7:
	ret;

}
	// .globl	copy_nd3_bool
.visible .entry copy_nd3_bool(
	.param .u64 copy_nd3_bool_param_0,
	.param .u64 copy_nd3_bool_param_1,
	.param .u32 copy_nd3_bool_param_2,
	.param .u32 copy_nd3_bool_param_3,
	.param .u32 copy_nd3_bool_param_4,
	.param .u32 copy_nd3_bool_param_5,
	.param .u32 copy_nd3_bool_param_6,
	.param .u32 copy_nd3_bool_param_7,
	.param .u32 copy_nd3_bool_param_8,
	.param .u32 copy_nd3_bool_param_9,
	.param .u32 copy_nd3_bool_param_10
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<54>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd31, [copy_nd3_bool_param_0];
	ld.param.u64 	%rd32, [copy_nd3_bool_param_1];
	ld.param.u32 	%r18, [copy_nd3_bool_param_2];
	ld.param.u32 	%r19, [copy_nd3_bool_param_3];
	ld.param.u32 	%r15, [copy_nd3_bool_param_4];
	ld.param.u32 	%r16, [copy_nd3_bool_param_7];
	ld.param.u32 	%r20, [copy_nd3_bool_param_8];
	ld.param.u32 	%r21, [copy_nd3_bool_param_9];
	ld.param.u32 	%r17, [copy_nd3_bool_param_10];
	cvta.to.global.u64 	%rd1, %rd32;
	cvta.to.global.u64 	%rd49, %rd31;
	mov.u32 	%r22, %ctaid.x;
	mul.lo.s32 	%r1, %r22, %r19;
	mov.u32 	%r23, %ctaid.y;
	mul.lo.s32 	%r2, %r23, %r18;
	mul.lo.s32 	%r3, %r22, %r21;
	mul.lo.s32 	%r4, %r23, %r20;
	mov.u32 	%r52, %tid.x;
	setp.ge.s32 	%p1, %r52, %r16;
	@%p1 bra 	$L__BB3_7;

	not.b32 	%r24, %r52;
	add.s32 	%r6, %r24, %r16;
	shr.u32 	%r25, %r6, 10;
	add.s32 	%r26, %r25, 1;
	and.b32  	%r51, %r26, 3;
	setp.eq.s32 	%p2, %r51, 0;
	@%p2 bra 	$L__BB3_4;

	mad.lo.s32 	%r27, %r52, %r17, %r3;
	add.s32 	%r28, %r27, %r4;
	cvt.s64.s32 	%rd33, %r28;
	add.s64 	%rd44, %rd1, %rd33;
	shl.b32 	%r29, %r17, 10;
	cvt.s64.s32 	%rd4, %r29;
	mad.lo.s32 	%r30, %r52, %r15, %r1;
	add.s32 	%r31, %r30, %r2;
	cvt.s64.s32 	%rd34, %r31;
	add.s64 	%rd43, %rd49, %rd34;
	shl.b32 	%r32, %r15, 10;
	cvt.s64.s32 	%rd6, %r32;

$L__BB3_3:
	.pragma "nounroll";
	ld.global.u8 	%rs1, [%rd43];
	st.global.u8 	[%rd44], %rs1;
	add.s32 	%r52, %r52, 1024;
	add.s64 	%rd44, %rd44, %rd4;
	add.s64 	%rd43, %rd43, %rd6;
	add.s32 	%r51, %r51, -1;
	setp.ne.s32 	%p3, %r51, 0;
	@%p3 bra 	$L__BB3_3;

$L__BB3_4:
	setp.lt.u32 	%p4, %r6, 3072;
	@%p4 bra 	$L__BB3_7;

	add.s32 	%r33, %r1, %r2;
	add.s32 	%r34, %r52, 1024;
	mad.lo.s32 	%r35, %r15, %r34, %r33;
	cvt.s64.s32 	%rd11, %r35;
	shl.b32 	%r36, %r15, 12;
	cvt.s64.s32 	%rd12, %r36;
	add.s32 	%r37, %r52, 2048;
	mad.lo.s32 	%r38, %r15, %r37, %r33;
	cvt.s64.s32 	%rd13, %r38;
	add.s32 	%r39, %r52, 3072;
	mad.lo.s32 	%r40, %r15, %r39, %r33;
	cvt.s64.s32 	%rd14, %r40;
	mad.lo.s32 	%r41, %r52, %r15, %r1;
	add.s32 	%r42, %r41, %r2;
	cvt.s64.s32 	%rd15, %r42;
	add.s32 	%r43, %r3, %r4;
	mad.lo.s32 	%r44, %r17, %r34, %r43;
	cvt.s64.s32 	%rd35, %r44;
	add.s64 	%rd48, %rd1, %rd35;
	shl.b32 	%r45, %r17, 12;
	cvt.s64.s32 	%rd17, %r45;
	mad.lo.s32 	%r46, %r17, %r37, %r43;
	cvt.s64.s32 	%rd36, %r46;
	add.s64 	%rd47, %rd1, %rd36;
	mad.lo.s32 	%r47, %r17, %r39, %r43;
	cvt.s64.s32 	%rd37, %r47;
	add.s64 	%rd46, %rd1, %rd37;
	mad.lo.s32 	%r48, %r52, %r17, %r3;
	add.s32 	%r49, %r48, %r4;
	cvt.s64.s32 	%rd38, %r49;
	add.s64 	%rd45, %rd1, %rd38;

$L__BB3_6:
	add.s64 	%rd39, %rd49, %rd15;
	ld.global.u8 	%rs2, [%rd39];
	st.global.u8 	[%rd45], %rs2;
	add.s64 	%rd40, %rd49, %rd11;
	ld.global.u8 	%rs3, [%rd40];
	st.global.u8 	[%rd48], %rs3;
	add.s64 	%rd41, %rd49, %rd13;
	ld.global.u8 	%rs4, [%rd41];
	st.global.u8 	[%rd47], %rs4;
	add.s64 	%rd42, %rd49, %rd14;
	ld.global.u8 	%rs5, [%rd42];
	st.global.u8 	[%rd46], %rs5;
	add.s64 	%rd49, %rd49, %rd12;
	add.s64 	%rd48, %rd48, %rd17;
	add.s64 	%rd47, %rd47, %rd17;
	add.s64 	%rd46, %rd46, %rd17;
	add.s64 	%rd45, %rd45, %rd17;
	add.s32 	%r52, %r52, 4096;
	setp.lt.s32 	%p5, %r52, %r16;
	@%p5 bra 	$L__BB3_6;

$L__BB3_7:
	ret;

}
	// .globl	copy_nd4_bool
.visible .entry copy_nd4_bool(
	.param .u64 copy_nd4_bool_param_0,
	.param .u64 copy_nd4_bool_param_1,
	.param .u32 copy_nd4_bool_param_2,
	.param .u32 copy_nd4_bool_param_3,
	.param .u32 copy_nd4_bool_param_4,
	.param .u32 copy_nd4_bool_param_5,
	.param .u32 copy_nd4_bool_param_6,
	.param .u32 copy_nd4_bool_param_7,
	.param .u32 copy_nd4_bool_param_8,
	.param .u32 copy_nd4_bool_param_9,
	.param .u32 copy_nd4_bool_param_10,
	.param .u32 copy_nd4_bool_param_11,
	.param .u32 copy_nd4_bool_param_12,
	.param .u32 copy_nd4_bool_param_13
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<65>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd31, [copy_nd4_bool_param_0];
	ld.param.u64 	%rd32, [copy_nd4_bool_param_1];
	ld.param.u32 	%r20, [copy_nd4_bool_param_2];
	ld.param.u32 	%r21, [copy_nd4_bool_param_3];
	ld.param.u32 	%r22, [copy_nd4_bool_param_4];
	ld.param.u32 	%r17, [copy_nd4_bool_param_5];
	ld.param.u32 	%r18, [copy_nd4_bool_param_9];
	ld.param.u32 	%r23, [copy_nd4_bool_param_10];
	ld.param.u32 	%r24, [copy_nd4_bool_param_11];
	ld.param.u32 	%r25, [copy_nd4_bool_param_12];
	ld.param.u32 	%r19, [copy_nd4_bool_param_13];
	cvta.to.global.u64 	%rd1, %rd32;
	cvta.to.global.u64 	%rd49, %rd31;
	mov.u32 	%r26, %ctaid.x;
	mul.lo.s32 	%r1, %r26, %r22;
	mov.u32 	%r27, %ctaid.y;
	mul.lo.s32 	%r2, %r27, %r21;
	mov.u32 	%r28, %ctaid.z;
	mul.lo.s32 	%r3, %r28, %r20;
	mul.lo.s32 	%r4, %r26, %r25;
	mul.lo.s32 	%r5, %r27, %r24;
	mul.lo.s32 	%r6, %r28, %r23;
	mov.u32 	%r63, %tid.x;
	setp.ge.s32 	%p1, %r63, %r18;
	@%p1 bra 	$L__BB4_7;

	not.b32 	%r29, %r63;
	add.s32 	%r8, %r29, %r18;
	shr.u32 	%r30, %r8, 10;
	add.s32 	%r31, %r30, 1;
	and.b32  	%r62, %r31, 3;
	setp.eq.s32 	%p2, %r62, 0;
	@%p2 bra 	$L__BB4_4;

	mad.lo.s32 	%r32, %r63, %r19, %r4;
	add.s32 	%r33, %r32, %r5;
	add.s32 	%r34, %r33, %r6;
	cvt.s64.s32 	%rd33, %r34;
	add.s64 	%rd44, %rd1, %rd33;
	shl.b32 	%r35, %r19, 10;
	cvt.s64.s32 	%rd4, %r35;
	mad.lo.s32 	%r36, %r63, %r17, %r1;
	add.s32 	%r37, %r36, %r2;
	add.s32 	%r38, %r37, %r3;
	cvt.s64.s32 	%rd34, %r38;
	add.s64 	%rd43, %rd49, %rd34;
	shl.b32 	%r39, %r17, 10;
	cvt.s64.s32 	%rd6, %r39;

$L__BB4_3:
	.pragma "nounroll";
	ld.global.u8 	%rs1, [%rd43];
	st.global.u8 	[%rd44], %rs1;
	add.s32 	%r63, %r63, 1024;
	add.s64 	%rd44, %rd44, %rd4;
	add.s64 	%rd43, %rd43, %rd6;
	add.s32 	%r62, %r62, -1;
	setp.ne.s32 	%p3, %r62, 0;
	@%p3 bra 	$L__BB4_3;

$L__BB4_4:
	setp.lt.u32 	%p4, %r8, 3072;
	@%p4 bra 	$L__BB4_7;

	add.s32 	%r40, %r1, %r2;
	add.s32 	%r41, %r40, %r3;
	add.s32 	%r42, %r63, 1024;
	mad.lo.s32 	%r43, %r17, %r42, %r41;
	cvt.s64.s32 	%rd11, %r43;
	shl.b32 	%r44, %r17, 12;
	cvt.s64.s32 	%rd12, %r44;
	add.s32 	%r45, %r63, 2048;
	mad.lo.s32 	%r46, %r17, %r45, %r41;
	cvt.s64.s32 	%rd13, %r46;
	add.s32 	%r47, %r63, 3072;
	mad.lo.s32 	%r48, %r17, %r47, %r41;
	cvt.s64.s32 	%rd14, %r48;
	mad.lo.s32 	%r49, %r63, %r17, %r1;
	add.s32 	%r50, %r49, %r2;
	add.s32 	%r51, %r50, %r3;
	cvt.s64.s32 	%rd15, %r51;
	add.s32 	%r52, %r4, %r5;
	add.s32 	%r53, %r52, %r6;
	mad.lo.s32 	%r54, %r19, %r42, %r53;
	cvt.s64.s32 	%rd35, %r54;
	add.s64 	%rd48, %rd1, %rd35;
	shl.b32 	%r55, %r19, 12;
	cvt.s64.s32 	%rd17, %r55;
	mad.lo.s32 	%r56, %r19, %r45, %r53;
	cvt.s64.s32 	%rd36, %r56;
	add.s64 	%rd47, %rd1, %rd36;
	mad.lo.s32 	%r57, %r19, %r47, %r53;
	cvt.s64.s32 	%rd37, %r57;
	add.s64 	%rd46, %rd1, %rd37;
	mad.lo.s32 	%r58, %r63, %r19, %r4;
	add.s32 	%r59, %r58, %r5;
	add.s32 	%r60, %r59, %r6;
	cvt.s64.s32 	%rd38, %r60;
	add.s64 	%rd45, %rd1, %rd38;

$L__BB4_6:
	add.s64 	%rd39, %rd49, %rd15;
	ld.global.u8 	%rs2, [%rd39];
	st.global.u8 	[%rd45], %rs2;
	add.s64 	%rd40, %rd49, %rd11;
	ld.global.u8 	%rs3, [%rd40];
	st.global.u8 	[%rd48], %rs3;
	add.s64 	%rd41, %rd49, %rd13;
	ld.global.u8 	%rs4, [%rd41];
	st.global.u8 	[%rd47], %rs4;
	add.s64 	%rd42, %rd49, %rd14;
	ld.global.u8 	%rs5, [%rd42];
	st.global.u8 	[%rd46], %rs5;
	add.s64 	%rd49, %rd49, %rd12;
	add.s64 	%rd48, %rd48, %rd17;
	add.s64 	%rd47, %rd47, %rd17;
	add.s64 	%rd46, %rd46, %rd17;
	add.s64 	%rd45, %rd45, %rd17;
	add.s32 	%r63, %r63, 4096;
	setp.lt.s32 	%p5, %r63, %r18;
	@%p5 bra 	$L__BB4_6;

$L__BB4_7:
	ret;

}
	// .globl	copy_nd5_bool
.visible .entry copy_nd5_bool(
	.param .u64 copy_nd5_bool_param_0,
	.param .u64 copy_nd5_bool_param_1,
	.param .u32 copy_nd5_bool_param_2,
	.param .u32 copy_nd5_bool_param_3,
	.param .u32 copy_nd5_bool_param_4,
	.param .u32 copy_nd5_bool_param_5,
	.param .u32 copy_nd5_bool_param_6,
	.param .u32 copy_nd5_bool_param_7,
	.param .u32 copy_nd5_bool_param_8,
	.param .u32 copy_nd5_bool_param_9,
	.param .u32 copy_nd5_bool_param_10,
	.param .u32 copy_nd5_bool_param_11,
	.param .u32 copy_nd5_bool_param_12,
	.param .u32 copy_nd5_bool_param_13,
	.param .u32 copy_nd5_bool_param_14,
	.param .u32 copy_nd5_bool_param_15,
	.param .u32 copy_nd5_bool_param_16
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<81>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd31, [copy_nd5_bool_param_0];
	ld.param.u64 	%rd32, [copy_nd5_bool_param_1];
	ld.param.u32 	%r17, [copy_nd5_bool_param_2];
	ld.param.u32 	%r18, [copy_nd5_bool_param_3];
	ld.param.u32 	%r24, [copy_nd5_bool_param_4];
	ld.param.u32 	%r25, [copy_nd5_bool_param_5];
	ld.param.u32 	%r19, [copy_nd5_bool_param_6];
	ld.param.u32 	%r26, [copy_nd5_bool_param_7];
	ld.param.u32 	%r27, [copy_nd5_bool_param_8];
	ld.param.u32 	%r20, [copy_nd5_bool_param_11];
	ld.param.u32 	%r21, [copy_nd5_bool_param_12];
	ld.param.u32 	%r22, [copy_nd5_bool_param_13];
	ld.param.u32 	%r28, [copy_nd5_bool_param_14];
	ld.param.u32 	%r29, [copy_nd5_bool_param_15];
	ld.param.u32 	%r23, [copy_nd5_bool_param_16];
	cvta.to.global.u64 	%rd1, %rd32;
	cvta.to.global.u64 	%rd49, %rd31;
	mov.u32 	%r30, %ctaid.x;
	mul.lo.s32 	%r1, %r30, %r25;
	mov.u32 	%r31, %ctaid.y;
	mul.lo.s32 	%r2, %r31, %r24;
	mul.lo.s32 	%r3, %r30, %r29;
	mul.lo.s32 	%r4, %r31, %r28;
	mov.u32 	%r32, %ctaid.z;
	div.s32 	%r33, %r32, %r27;
	mul.lo.s32 	%r34, %r33, %r27;
	sub.s32 	%r5, %r32, %r34;
	rem.s32 	%r6, %r33, %r26;
	mov.u32 	%r79, %tid.x;
	setp.ge.s32 	%p1, %r79, %r20;
	@%p1 bra 	$L__BB5_7;

	not.b32 	%r35, %r79;
	add.s32 	%r8, %r35, %r20;
	shr.u32 	%r36, %r8, 10;
	add.s32 	%r37, %r36, 1;
	and.b32  	%r78, %r37, 3;
	setp.eq.s32 	%p2, %r78, 0;
	@%p2 bra 	$L__BB5_4;

	mad.lo.s32 	%r38, %r79, %r23, %r3;
	add.s32 	%r39, %r38, %r4;
	mad.lo.s32 	%r40, %r5, %r22, %r39;
	mad.lo.s32 	%r41, %r6, %r21, %r40;
	cvt.s64.s32 	%rd33, %r41;
	add.s64 	%rd44, %rd1, %rd33;
	shl.b32 	%r42, %r23, 10;
	cvt.s64.s32 	%rd4, %r42;
	mad.lo.s32 	%r43, %r79, %r19, %r1;
	add.s32 	%r44, %r43, %r2;
	mad.lo.s32 	%r45, %r5, %r18, %r44;
	mad.lo.s32 	%r46, %r6, %r17, %r45;
	cvt.s64.s32 	%rd34, %r46;
	add.s64 	%rd43, %rd49, %rd34;
	shl.b32 	%r47, %r19, 10;
	cvt.s64.s32 	%rd6, %r47;

$L__BB5_3:
	.pragma "nounroll";
	ld.global.u8 	%rs1, [%rd43];
	st.global.u8 	[%rd44], %rs1;
	add.s32 	%r79, %r79, 1024;
	add.s64 	%rd44, %rd44, %rd4;
	add.s64 	%rd43, %rd43, %rd6;
	add.s32 	%r78, %r78, -1;
	setp.ne.s32 	%p3, %r78, 0;
	@%p3 bra 	$L__BB5_3;

$L__BB5_4:
	setp.lt.u32 	%p4, %r8, 3072;
	@%p4 bra 	$L__BB5_7;

	add.s32 	%r48, %r1, %r2;
	mul.lo.s32 	%r49, %r5, %r18;
	add.s32 	%r50, %r48, %r49;
	mul.lo.s32 	%r51, %r6, %r17;
	add.s32 	%r52, %r50, %r51;
	add.s32 	%r53, %r79, 1024;
	mad.lo.s32 	%r54, %r19, %r53, %r52;
	cvt.s64.s32 	%rd11, %r54;
	shl.b32 	%r55, %r19, 12;
	cvt.s64.s32 	%rd12, %r55;
	add.s32 	%r56, %r79, 2048;
	mad.lo.s32 	%r57, %r19, %r56, %r52;
	cvt.s64.s32 	%rd13, %r57;
	add.s32 	%r58, %r79, 3072;
	mad.lo.s32 	%r59, %r19, %r58, %r52;
	cvt.s64.s32 	%rd14, %r59;
	mad.lo.s32 	%r60, %r79, %r19, %r1;
	add.s32 	%r61, %r60, %r2;
	add.s32 	%r62, %r61, %r49;
	add.s32 	%r63, %r62, %r51;
	cvt.s64.s32 	%rd15, %r63;
	mul.lo.s32 	%r64, %r5, %r22;
	add.s32 	%r65, %r3, %r4;
	add.s32 	%r66, %r65, %r64;
	mul.lo.s32 	%r67, %r6, %r21;
	add.s32 	%r68, %r66, %r67;
	mad.lo.s32 	%r69, %r23, %r53, %r68;
	cvt.s64.s32 	%rd35, %r69;
	add.s64 	%rd48, %rd1, %rd35;
	shl.b32 	%r70, %r23, 12;
	cvt.s64.s32 	%rd17, %r70;
	mad.lo.s32 	%r71, %r23, %r56, %r68;
	cvt.s64.s32 	%rd36, %r71;
	add.s64 	%rd47, %rd1, %rd36;
	mad.lo.s32 	%r72, %r23, %r58, %r68;
	cvt.s64.s32 	%rd37, %r72;
	add.s64 	%rd46, %rd1, %rd37;
	mad.lo.s32 	%r73, %r79, %r23, %r3;
	add.s32 	%r74, %r73, %r4;
	add.s32 	%r75, %r74, %r64;
	add.s32 	%r76, %r75, %r67;
	cvt.s64.s32 	%rd38, %r76;
	add.s64 	%rd45, %rd1, %rd38;

$L__BB5_6:
	add.s64 	%rd39, %rd49, %rd15;
	ld.global.u8 	%rs2, [%rd39];
	st.global.u8 	[%rd45], %rs2;
	add.s64 	%rd40, %rd49, %rd11;
	ld.global.u8 	%rs3, [%rd40];
	st.global.u8 	[%rd48], %rs3;
	add.s64 	%rd41, %rd49, %rd13;
	ld.global.u8 	%rs4, [%rd41];
	st.global.u8 	[%rd47], %rs4;
	add.s64 	%rd42, %rd49, %rd14;
	ld.global.u8 	%rs5, [%rd42];
	st.global.u8 	[%rd46], %rs5;
	add.s64 	%rd49, %rd49, %rd12;
	add.s64 	%rd48, %rd48, %rd17;
	add.s64 	%rd47, %rd47, %rd17;
	add.s64 	%rd46, %rd46, %rd17;
	add.s64 	%rd45, %rd45, %rd17;
	add.s32 	%r79, %r79, 4096;
	setp.lt.s32 	%p5, %r79, %r20;
	@%p5 bra 	$L__BB5_6;

$L__BB5_7:
	ret;

}
	// .globl	copy_nd6_bool
.visible .entry copy_nd6_bool(
	.param .u64 copy_nd6_bool_param_0,
	.param .u64 copy_nd6_bool_param_1,
	.param .u32 copy_nd6_bool_param_2,
	.param .u32 copy_nd6_bool_param_3,
	.param .u32 copy_nd6_bool_param_4,
	.param .u32 copy_nd6_bool_param_5,
	.param .u32 copy_nd6_bool_param_6,
	.param .u32 copy_nd6_bool_param_7,
	.param .u32 copy_nd6_bool_param_8,
	.param .u32 copy_nd6_bool_param_9,
	.param .u32 copy_nd6_bool_param_10,
	.param .u32 copy_nd6_bool_param_11,
	.param .u32 copy_nd6_bool_param_12,
	.param .u32 copy_nd6_bool_param_13,
	.param .u32 copy_nd6_bool_param_14,
	.param .u32 copy_nd6_bool_param_15,
	.param .u32 copy_nd6_bool_param_16,
	.param .u32 copy_nd6_bool_param_17,
	.param .u32 copy_nd6_bool_param_18,
	.param .u32 copy_nd6_bool_param_19
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<95>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd31, [copy_nd6_bool_param_0];
	ld.param.u64 	%rd32, [copy_nd6_bool_param_1];
	ld.param.u32 	%r18, [copy_nd6_bool_param_2];
	ld.param.u32 	%r19, [copy_nd6_bool_param_3];
	ld.param.u32 	%r20, [copy_nd6_bool_param_4];
	ld.param.u32 	%r27, [copy_nd6_bool_param_5];
	ld.param.u32 	%r28, [copy_nd6_bool_param_6];
	ld.param.u32 	%r21, [copy_nd6_bool_param_7];
	ld.param.u32 	%r29, [copy_nd6_bool_param_8];
	ld.param.u32 	%r30, [copy_nd6_bool_param_9];
	ld.param.u32 	%r31, [copy_nd6_bool_param_10];
	ld.param.u32 	%r22, [copy_nd6_bool_param_13];
	ld.param.u32 	%r23, [copy_nd6_bool_param_14];
	ld.param.u32 	%r24, [copy_nd6_bool_param_15];
	ld.param.u32 	%r25, [copy_nd6_bool_param_16];
	ld.param.u32 	%r32, [copy_nd6_bool_param_17];
	ld.param.u32 	%r33, [copy_nd6_bool_param_18];
	ld.param.u32 	%r26, [copy_nd6_bool_param_19];
	cvta.to.global.u64 	%rd1, %rd32;
	cvta.to.global.u64 	%rd49, %rd31;
	mov.u32 	%r34, %ctaid.x;
	mul.lo.s32 	%r1, %r34, %r28;
	mov.u32 	%r35, %ctaid.y;
	mul.lo.s32 	%r2, %r35, %r27;
	mul.lo.s32 	%r3, %r34, %r33;
	mul.lo.s32 	%r4, %r35, %r32;
	mov.u32 	%r36, %ctaid.z;
	div.s32 	%r37, %r36, %r31;
	mul.lo.s32 	%r38, %r37, %r31;
	sub.s32 	%r5, %r36, %r38;
	div.s32 	%r39, %r37, %r30;
	mul.lo.s32 	%r40, %r39, %r30;
	sub.s32 	%r6, %r37, %r40;
	rem.s32 	%r7, %r39, %r29;
	mov.u32 	%r93, %tid.x;
	setp.ge.s32 	%p1, %r93, %r22;
	@%p1 bra 	$L__BB6_7;

	not.b32 	%r41, %r93;
	add.s32 	%r9, %r41, %r22;
	shr.u32 	%r42, %r9, 10;
	add.s32 	%r43, %r42, 1;
	and.b32  	%r92, %r43, 3;
	setp.eq.s32 	%p2, %r92, 0;
	@%p2 bra 	$L__BB6_4;

	mad.lo.s32 	%r44, %r93, %r26, %r3;
	add.s32 	%r45, %r44, %r4;
	mad.lo.s32 	%r46, %r5, %r25, %r45;
	mad.lo.s32 	%r47, %r6, %r24, %r46;
	mad.lo.s32 	%r48, %r7, %r23, %r47;
	cvt.s64.s32 	%rd33, %r48;
	add.s64 	%rd44, %rd1, %rd33;
	shl.b32 	%r49, %r26, 10;
	cvt.s64.s32 	%rd4, %r49;
	mad.lo.s32 	%r50, %r93, %r21, %r1;
	add.s32 	%r51, %r50, %r2;
	mad.lo.s32 	%r52, %r5, %r20, %r51;
	mad.lo.s32 	%r53, %r6, %r19, %r52;
	mad.lo.s32 	%r54, %r7, %r18, %r53;
	cvt.s64.s32 	%rd34, %r54;
	add.s64 	%rd43, %rd49, %rd34;
	shl.b32 	%r55, %r21, 10;
	cvt.s64.s32 	%rd6, %r55;

$L__BB6_3:
	.pragma "nounroll";
	ld.global.u8 	%rs1, [%rd43];
	st.global.u8 	[%rd44], %rs1;
	add.s32 	%r93, %r93, 1024;
	add.s64 	%rd44, %rd44, %rd4;
	add.s64 	%rd43, %rd43, %rd6;
	add.s32 	%r92, %r92, -1;
	setp.ne.s32 	%p3, %r92, 0;
	@%p3 bra 	$L__BB6_3;

$L__BB6_4:
	setp.lt.u32 	%p4, %r9, 3072;
	@%p4 bra 	$L__BB6_7;

	add.s32 	%r56, %r1, %r2;
	mul.lo.s32 	%r57, %r5, %r20;
	add.s32 	%r58, %r56, %r57;
	mul.lo.s32 	%r59, %r6, %r19;
	add.s32 	%r60, %r58, %r59;
	mul.lo.s32 	%r61, %r7, %r18;
	add.s32 	%r62, %r60, %r61;
	add.s32 	%r63, %r93, 1024;
	mad.lo.s32 	%r64, %r21, %r63, %r62;
	cvt.s64.s32 	%rd11, %r64;
	shl.b32 	%r65, %r21, 12;
	cvt.s64.s32 	%rd12, %r65;
	add.s32 	%r66, %r93, 2048;
	mad.lo.s32 	%r67, %r21, %r66, %r62;
	cvt.s64.s32 	%rd13, %r67;
	add.s32 	%r68, %r93, 3072;
	mad.lo.s32 	%r69, %r21, %r68, %r62;
	cvt.s64.s32 	%rd14, %r69;
	mad.lo.s32 	%r70, %r93, %r21, %r1;
	add.s32 	%r71, %r70, %r2;
	add.s32 	%r72, %r71, %r57;
	add.s32 	%r73, %r72, %r59;
	add.s32 	%r74, %r73, %r61;
	cvt.s64.s32 	%rd15, %r74;
	mul.lo.s32 	%r75, %r5, %r25;
	add.s32 	%r76, %r3, %r4;
	add.s32 	%r77, %r76, %r75;
	mul.lo.s32 	%r78, %r6, %r24;
	add.s32 	%r79, %r77, %r78;
	mul.lo.s32 	%r80, %r7, %r23;
	add.s32 	%r81, %r79, %r80;
	mad.lo.s32 	%r82, %r26, %r63, %r81;
	cvt.s64.s32 	%rd35, %r82;
	add.s64 	%rd48, %rd1, %rd35;
	shl.b32 	%r83, %r26, 12;
	cvt.s64.s32 	%rd17, %r83;
	mad.lo.s32 	%r84, %r26, %r66, %r81;
	cvt.s64.s32 	%rd36, %r84;
	add.s64 	%rd47, %rd1, %rd36;
	mad.lo.s32 	%r85, %r26, %r68, %r81;
	cvt.s64.s32 	%rd37, %r85;
	add.s64 	%rd46, %rd1, %rd37;
	mad.lo.s32 	%r86, %r93, %r26, %r3;
	add.s32 	%r87, %r86, %r4;
	add.s32 	%r88, %r87, %r75;
	add.s32 	%r89, %r88, %r78;
	add.s32 	%r90, %r89, %r80;
	cvt.s64.s32 	%rd38, %r90;
	add.s64 	%rd45, %rd1, %rd38;

$L__BB6_6:
	add.s64 	%rd39, %rd49, %rd15;
	ld.global.u8 	%rs2, [%rd39];
	st.global.u8 	[%rd45], %rs2;
	add.s64 	%rd40, %rd49, %rd11;
	ld.global.u8 	%rs3, [%rd40];
	st.global.u8 	[%rd48], %rs3;
	add.s64 	%rd41, %rd49, %rd13;
	ld.global.u8 	%rs4, [%rd41];
	st.global.u8 	[%rd47], %rs4;
	add.s64 	%rd42, %rd49, %rd14;
	ld.global.u8 	%rs5, [%rd42];
	st.global.u8 	[%rd46], %rs5;
	add.s64 	%rd49, %rd49, %rd12;
	add.s64 	%rd48, %rd48, %rd17;
	add.s64 	%rd47, %rd47, %rd17;
	add.s64 	%rd46, %rd46, %rd17;
	add.s64 	%rd45, %rd45, %rd17;
	add.s32 	%r93, %r93, 4096;
	setp.lt.s32 	%p5, %r93, %r22;
	@%p5 bra 	$L__BB6_6;

$L__BB6_7:
	ret;

}
	// .globl	cast_bool_bool
.visible .entry cast_bool_bool(
	.param .u64 cast_bool_bool_param_0,
	.param .u64 cast_bool_bool_param_1,
	.param .u32 cast_bool_bool_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_bool_bool_param_0];
	ld.param.u64 	%rd2, [cast_bool_bool_param_1];
	ld.param.u32 	%r2, [cast_bool_bool_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB7_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u8 	%rs1, [%rd5];
	setp.ne.s16 	%p2, %rs1, 0;
	selp.u16 	%rs2, 1, 0, %p2;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u8 	[%rd7], %rs2;

$L__BB7_2:
	ret;

}
	// .globl	cast_bool_f32
.visible .entry cast_bool_f32(
	.param .u64 cast_bool_f32_param_0,
	.param .u64 cast_bool_f32_param_1,
	.param .u32 cast_bool_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_bool_f32_param_0];
	ld.param.u64 	%rd2, [cast_bool_f32_param_1];
	ld.param.u32 	%r2, [cast_bool_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB8_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.s8 	%rs1, [%rd5];
	cvt.rn.f32.s16 	%f1, %rs1;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB8_2:
	ret;

}
	// .globl	cast_bool_f16
.visible .entry cast_bool_f16(
	.param .u64 cast_bool_f16_param_0,
	.param .u64 cast_bool_f16_param_1,
	.param .u32 cast_bool_f16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_bool_f16_param_0];
	ld.param.u64 	%rd2, [cast_bool_f16_param_1];
	ld.param.u32 	%r2, [cast_bool_f16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB9_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.s8 	%r6, [%rd5];
	// begin inline asm
	cvt.rn.f16.s32 %rs1, %r6;
	// end inline asm
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 2;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u16 	[%rd8], %rs1;

$L__BB9_2:
	ret;

}
	// .globl	cast_bool_u8
.visible .entry cast_bool_u8(
	.param .u64 cast_bool_u8_param_0,
	.param .u64 cast_bool_u8_param_1,
	.param .u32 cast_bool_u8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_bool_u8_param_0];
	ld.param.u64 	%rd2, [cast_bool_u8_param_1];
	ld.param.u32 	%r2, [cast_bool_u8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB10_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u8 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u8 	[%rd7], %rs1;

$L__BB10_2:
	ret;

}
	// .globl	cast_bool_u16
.visible .entry cast_bool_u16(
	.param .u64 cast_bool_u16_param_0,
	.param .u64 cast_bool_u16_param_1,
	.param .u32 cast_bool_u16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_bool_u16_param_0];
	ld.param.u64 	%rd2, [cast_bool_u16_param_1];
	ld.param.u32 	%r2, [cast_bool_u16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB11_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.s8 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 2;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u16 	[%rd8], %rs1;

$L__BB11_2:
	ret;

}
	// .globl	cast_bool_u32
.visible .entry cast_bool_u32(
	.param .u64 cast_bool_u32_param_0,
	.param .u64 cast_bool_u32_param_1,
	.param .u32 cast_bool_u32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_bool_u32_param_0];
	ld.param.u64 	%rd2, [cast_bool_u32_param_1];
	ld.param.u32 	%r2, [cast_bool_u32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB12_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.s8 	%r6, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u32 	[%rd8], %r6;

$L__BB12_2:
	ret;

}
	// .globl	cast_bool_u64
.visible .entry cast_bool_u64(
	.param .u64 cast_bool_u64_param_0,
	.param .u64 cast_bool_u64_param_1,
	.param .u32 cast_bool_u64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_bool_u64_param_0];
	ld.param.u64 	%rd2, [cast_bool_u64_param_1];
	ld.param.u32 	%r2, [cast_bool_u64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB13_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.s8 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u64 	[%rd9], %rd6;

$L__BB13_2:
	ret;

}
	// .globl	cast_bool_i8
.visible .entry cast_bool_i8(
	.param .u64 cast_bool_i8_param_0,
	.param .u64 cast_bool_i8_param_1,
	.param .u32 cast_bool_i8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_bool_i8_param_0];
	ld.param.u64 	%rd2, [cast_bool_i8_param_1];
	ld.param.u32 	%r2, [cast_bool_i8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB14_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u8 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u8 	[%rd7], %rs1;

$L__BB14_2:
	ret;

}
	// .globl	cast_bool_i16
.visible .entry cast_bool_i16(
	.param .u64 cast_bool_i16_param_0,
	.param .u64 cast_bool_i16_param_1,
	.param .u32 cast_bool_i16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_bool_i16_param_0];
	ld.param.u64 	%rd2, [cast_bool_i16_param_1];
	ld.param.u32 	%r2, [cast_bool_i16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB15_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.s8 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 2;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u16 	[%rd8], %rs1;

$L__BB15_2:
	ret;

}
	// .globl	cast_bool_i32
.visible .entry cast_bool_i32(
	.param .u64 cast_bool_i32_param_0,
	.param .u64 cast_bool_i32_param_1,
	.param .u32 cast_bool_i32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_bool_i32_param_0];
	ld.param.u64 	%rd2, [cast_bool_i32_param_1];
	ld.param.u32 	%r2, [cast_bool_i32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB16_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.s8 	%r6, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u32 	[%rd8], %r6;

$L__BB16_2:
	ret;

}
	// .globl	cast_bool_i64
.visible .entry cast_bool_i64(
	.param .u64 cast_bool_i64_param_0,
	.param .u64 cast_bool_i64_param_1,
	.param .u32 cast_bool_i64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_bool_i64_param_0];
	ld.param.u64 	%rd2, [cast_bool_i64_param_1];
	ld.param.u32 	%r2, [cast_bool_i64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB17_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.s8 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u64 	[%rd9], %rd6;

$L__BB17_2:
	ret;

}
	// .globl	copy_unicast_f32
.visible .entry copy_unicast_f32(
	.param .u64 copy_unicast_f32_param_0,
	.param .u64 copy_unicast_f32_param_1,
	.param .u32 copy_unicast_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [copy_unicast_f32_param_0];
	ld.param.u64 	%rd2, [copy_unicast_f32_param_1];
	ld.param.u32 	%r2, [copy_unicast_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB18_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f1;

$L__BB18_2:
	ret;

}
	// .globl	copy_nd1_f32
.visible .entry copy_nd1_f32(
	.param .u64 copy_nd1_f32_param_0,
	.param .u64 copy_nd1_f32_param_1,
	.param .u32 copy_nd1_f32_param_2,
	.param .u32 copy_nd1_f32_param_3,
	.param .u32 copy_nd1_f32_param_4
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<29>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd1_f32_param_0];
	ld.param.u64 	%rd20, [copy_nd1_f32_param_1];
	ld.param.u32 	%r11, [copy_nd1_f32_param_2];
	ld.param.u32 	%r12, [copy_nd1_f32_param_3];
	ld.param.u32 	%r13, [copy_nd1_f32_param_4];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r27, %tid.x;
	setp.ge.s32 	%p1, %r27, %r12;
	@%p1 bra 	$L__BB19_7;

	not.b32 	%r14, %r27;
	add.s32 	%r2, %r14, %r12;
	shr.u32 	%r15, %r2, 10;
	add.s32 	%r16, %r15, 1;
	and.b32  	%r26, %r16, 3;
	setp.eq.s32 	%p2, %r26, 0;
	@%p2 bra 	$L__BB19_4;

	mul.lo.s32 	%r17, %r27, %r13;
	mul.wide.s32 	%rd21, %r17, 4;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r18, %r13, 10;
	mul.wide.s32 	%rd4, %r18, 4;
	mul.lo.s32 	%r19, %r27, %r11;
	mul.wide.s32 	%rd22, %r19, 4;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r20, %r11, 10;
	mul.wide.s32 	%rd6, %r20, 4;

$L__BB19_3:
	.pragma "nounroll";
	ld.global.f32 	%f1, [%rd31];
	st.global.f32 	[%rd32], %f1;
	add.s32 	%r27, %r27, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r26, %r26, -1;
	setp.ne.s32 	%p3, %r26, 0;
	@%p3 bra 	$L__BB19_3;

$L__BB19_4:
	setp.lt.u32 	%p4, %r2, 3072;
	@%p4 bra 	$L__BB19_7;

	mul.lo.s32 	%r21, %r27, %r11;
	mul.lo.s32 	%r22, %r27, %r13;
	mul.wide.s32 	%rd23, %r22, 4;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r21, 4;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r23, %r11, 10;
	mul.wide.s32 	%rd13, %r23, 4;
	shl.b32 	%r24, %r13, 10;
	mul.wide.s32 	%rd14, %r24, 4;

$L__BB19_6:
	ld.global.f32 	%f2, [%rd34];
	st.global.f32 	[%rd33], %f2;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.f32 	%f3, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.f32 	[%rd26], %f3;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.f32 	%f4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.f32 	[%rd28], %f4;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.f32 	%f5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.f32 	[%rd30], %f5;
	add.s32 	%r27, %r27, 4096;
	setp.lt.s32 	%p5, %r27, %r12;
	@%p5 bra 	$L__BB19_6;

$L__BB19_7:
	ret;

}
	// .globl	copy_nd2_f32
.visible .entry copy_nd2_f32(
	.param .u64 copy_nd2_f32_param_0,
	.param .u64 copy_nd2_f32_param_1,
	.param .u32 copy_nd2_f32_param_2,
	.param .u32 copy_nd2_f32_param_3,
	.param .u32 copy_nd2_f32_param_4,
	.param .u32 copy_nd2_f32_param_5,
	.param .u32 copy_nd2_f32_param_6,
	.param .u32 copy_nd2_f32_param_7
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<34>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd2_f32_param_0];
	ld.param.u64 	%rd20, [copy_nd2_f32_param_1];
	ld.param.u32 	%r16, [copy_nd2_f32_param_2];
	ld.param.u32 	%r13, [copy_nd2_f32_param_3];
	ld.param.u32 	%r14, [copy_nd2_f32_param_5];
	ld.param.u32 	%r17, [copy_nd2_f32_param_6];
	ld.param.u32 	%r15, [copy_nd2_f32_param_7];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r18, %ctaid.x;
	mul.lo.s32 	%r1, %r18, %r16;
	mul.lo.s32 	%r2, %r18, %r17;
	mov.u32 	%r32, %tid.x;
	setp.ge.s32 	%p1, %r32, %r14;
	@%p1 bra 	$L__BB20_7;

	not.b32 	%r19, %r32;
	add.s32 	%r4, %r19, %r14;
	shr.u32 	%r20, %r4, 10;
	add.s32 	%r21, %r20, 1;
	and.b32  	%r31, %r21, 3;
	setp.eq.s32 	%p2, %r31, 0;
	@%p2 bra 	$L__BB20_4;

	mad.lo.s32 	%r22, %r32, %r15, %r2;
	mul.wide.s32 	%rd21, %r22, 4;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r23, %r15, 10;
	mul.wide.s32 	%rd4, %r23, 4;
	mad.lo.s32 	%r24, %r32, %r13, %r1;
	mul.wide.s32 	%rd22, %r24, 4;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r25, %r13, 10;
	mul.wide.s32 	%rd6, %r25, 4;

$L__BB20_3:
	.pragma "nounroll";
	ld.global.f32 	%f1, [%rd31];
	st.global.f32 	[%rd32], %f1;
	add.s32 	%r32, %r32, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r31, %r31, -1;
	setp.ne.s32 	%p3, %r31, 0;
	@%p3 bra 	$L__BB20_3;

$L__BB20_4:
	setp.lt.u32 	%p4, %r4, 3072;
	@%p4 bra 	$L__BB20_7;

	mad.lo.s32 	%r26, %r32, %r13, %r1;
	mad.lo.s32 	%r27, %r32, %r15, %r2;
	mul.wide.s32 	%rd23, %r27, 4;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r26, 4;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r28, %r13, 10;
	mul.wide.s32 	%rd13, %r28, 4;
	shl.b32 	%r29, %r15, 10;
	mul.wide.s32 	%rd14, %r29, 4;

$L__BB20_6:
	ld.global.f32 	%f2, [%rd34];
	st.global.f32 	[%rd33], %f2;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.f32 	%f3, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.f32 	[%rd26], %f3;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.f32 	%f4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.f32 	[%rd28], %f4;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.f32 	%f5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.f32 	[%rd30], %f5;
	add.s32 	%r32, %r32, 4096;
	setp.lt.s32 	%p5, %r32, %r14;
	@%p5 bra 	$L__BB20_6;

$L__BB20_7:
	ret;

}
	// .globl	copy_nd3_f32
.visible .entry copy_nd3_f32(
	.param .u64 copy_nd3_f32_param_0,
	.param .u64 copy_nd3_f32_param_1,
	.param .u32 copy_nd3_f32_param_2,
	.param .u32 copy_nd3_f32_param_3,
	.param .u32 copy_nd3_f32_param_4,
	.param .u32 copy_nd3_f32_param_5,
	.param .u32 copy_nd3_f32_param_6,
	.param .u32 copy_nd3_f32_param_7,
	.param .u32 copy_nd3_f32_param_8,
	.param .u32 copy_nd3_f32_param_9,
	.param .u32 copy_nd3_f32_param_10
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<43>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd3_f32_param_0];
	ld.param.u64 	%rd20, [copy_nd3_f32_param_1];
	ld.param.u32 	%r18, [copy_nd3_f32_param_2];
	ld.param.u32 	%r19, [copy_nd3_f32_param_3];
	ld.param.u32 	%r15, [copy_nd3_f32_param_4];
	ld.param.u32 	%r16, [copy_nd3_f32_param_7];
	ld.param.u32 	%r20, [copy_nd3_f32_param_8];
	ld.param.u32 	%r21, [copy_nd3_f32_param_9];
	ld.param.u32 	%r17, [copy_nd3_f32_param_10];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r22, %ctaid.x;
	mul.lo.s32 	%r1, %r22, %r19;
	mov.u32 	%r23, %ctaid.y;
	mul.lo.s32 	%r2, %r23, %r18;
	mul.lo.s32 	%r3, %r22, %r21;
	mul.lo.s32 	%r4, %r23, %r20;
	mov.u32 	%r41, %tid.x;
	setp.ge.s32 	%p1, %r41, %r16;
	@%p1 bra 	$L__BB21_7;

	not.b32 	%r24, %r41;
	add.s32 	%r6, %r24, %r16;
	shr.u32 	%r25, %r6, 10;
	add.s32 	%r26, %r25, 1;
	and.b32  	%r40, %r26, 3;
	setp.eq.s32 	%p2, %r40, 0;
	@%p2 bra 	$L__BB21_4;

	mad.lo.s32 	%r27, %r41, %r17, %r3;
	add.s32 	%r28, %r27, %r4;
	mul.wide.s32 	%rd21, %r28, 4;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r29, %r17, 10;
	mul.wide.s32 	%rd4, %r29, 4;
	mad.lo.s32 	%r30, %r41, %r15, %r1;
	add.s32 	%r31, %r30, %r2;
	mul.wide.s32 	%rd22, %r31, 4;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r32, %r15, 10;
	mul.wide.s32 	%rd6, %r32, 4;

$L__BB21_3:
	.pragma "nounroll";
	ld.global.f32 	%f1, [%rd31];
	st.global.f32 	[%rd32], %f1;
	add.s32 	%r41, %r41, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r40, %r40, -1;
	setp.ne.s32 	%p3, %r40, 0;
	@%p3 bra 	$L__BB21_3;

$L__BB21_4:
	setp.lt.u32 	%p4, %r6, 3072;
	@%p4 bra 	$L__BB21_7;

	mad.lo.s32 	%r33, %r41, %r15, %r1;
	add.s32 	%r34, %r33, %r2;
	mad.lo.s32 	%r35, %r41, %r17, %r3;
	add.s32 	%r36, %r35, %r4;
	mul.wide.s32 	%rd23, %r36, 4;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r34, 4;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r37, %r15, 10;
	mul.wide.s32 	%rd13, %r37, 4;
	shl.b32 	%r38, %r17, 10;
	mul.wide.s32 	%rd14, %r38, 4;

$L__BB21_6:
	ld.global.f32 	%f2, [%rd34];
	st.global.f32 	[%rd33], %f2;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.f32 	%f3, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.f32 	[%rd26], %f3;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.f32 	%f4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.f32 	[%rd28], %f4;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.f32 	%f5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.f32 	[%rd30], %f5;
	add.s32 	%r41, %r41, 4096;
	setp.lt.s32 	%p5, %r41, %r16;
	@%p5 bra 	$L__BB21_6;

$L__BB21_7:
	ret;

}
	// .globl	copy_nd4_f32
.visible .entry copy_nd4_f32(
	.param .u64 copy_nd4_f32_param_0,
	.param .u64 copy_nd4_f32_param_1,
	.param .u32 copy_nd4_f32_param_2,
	.param .u32 copy_nd4_f32_param_3,
	.param .u32 copy_nd4_f32_param_4,
	.param .u32 copy_nd4_f32_param_5,
	.param .u32 copy_nd4_f32_param_6,
	.param .u32 copy_nd4_f32_param_7,
	.param .u32 copy_nd4_f32_param_8,
	.param .u32 copy_nd4_f32_param_9,
	.param .u32 copy_nd4_f32_param_10,
	.param .u32 copy_nd4_f32_param_11,
	.param .u32 copy_nd4_f32_param_12,
	.param .u32 copy_nd4_f32_param_13
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<52>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd4_f32_param_0];
	ld.param.u64 	%rd20, [copy_nd4_f32_param_1];
	ld.param.u32 	%r20, [copy_nd4_f32_param_2];
	ld.param.u32 	%r21, [copy_nd4_f32_param_3];
	ld.param.u32 	%r22, [copy_nd4_f32_param_4];
	ld.param.u32 	%r17, [copy_nd4_f32_param_5];
	ld.param.u32 	%r18, [copy_nd4_f32_param_9];
	ld.param.u32 	%r23, [copy_nd4_f32_param_10];
	ld.param.u32 	%r24, [copy_nd4_f32_param_11];
	ld.param.u32 	%r25, [copy_nd4_f32_param_12];
	ld.param.u32 	%r19, [copy_nd4_f32_param_13];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r26, %ctaid.x;
	mul.lo.s32 	%r1, %r26, %r22;
	mov.u32 	%r27, %ctaid.y;
	mul.lo.s32 	%r2, %r27, %r21;
	mov.u32 	%r28, %ctaid.z;
	mul.lo.s32 	%r3, %r28, %r20;
	mul.lo.s32 	%r4, %r26, %r25;
	mul.lo.s32 	%r5, %r27, %r24;
	mul.lo.s32 	%r6, %r28, %r23;
	mov.u32 	%r50, %tid.x;
	setp.ge.s32 	%p1, %r50, %r18;
	@%p1 bra 	$L__BB22_7;

	not.b32 	%r29, %r50;
	add.s32 	%r8, %r29, %r18;
	shr.u32 	%r30, %r8, 10;
	add.s32 	%r31, %r30, 1;
	and.b32  	%r49, %r31, 3;
	setp.eq.s32 	%p2, %r49, 0;
	@%p2 bra 	$L__BB22_4;

	mad.lo.s32 	%r32, %r50, %r19, %r4;
	add.s32 	%r33, %r32, %r5;
	add.s32 	%r34, %r33, %r6;
	mul.wide.s32 	%rd21, %r34, 4;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r35, %r19, 10;
	mul.wide.s32 	%rd4, %r35, 4;
	mad.lo.s32 	%r36, %r50, %r17, %r1;
	add.s32 	%r37, %r36, %r2;
	add.s32 	%r38, %r37, %r3;
	mul.wide.s32 	%rd22, %r38, 4;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r39, %r17, 10;
	mul.wide.s32 	%rd6, %r39, 4;

$L__BB22_3:
	.pragma "nounroll";
	ld.global.f32 	%f1, [%rd31];
	st.global.f32 	[%rd32], %f1;
	add.s32 	%r50, %r50, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r49, %r49, -1;
	setp.ne.s32 	%p3, %r49, 0;
	@%p3 bra 	$L__BB22_3;

$L__BB22_4:
	setp.lt.u32 	%p4, %r8, 3072;
	@%p4 bra 	$L__BB22_7;

	mad.lo.s32 	%r40, %r50, %r17, %r1;
	add.s32 	%r41, %r40, %r2;
	add.s32 	%r42, %r41, %r3;
	mad.lo.s32 	%r43, %r50, %r19, %r4;
	add.s32 	%r44, %r43, %r5;
	add.s32 	%r45, %r44, %r6;
	mul.wide.s32 	%rd23, %r45, 4;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r42, 4;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r46, %r17, 10;
	mul.wide.s32 	%rd13, %r46, 4;
	shl.b32 	%r47, %r19, 10;
	mul.wide.s32 	%rd14, %r47, 4;

$L__BB22_6:
	ld.global.f32 	%f2, [%rd34];
	st.global.f32 	[%rd33], %f2;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.f32 	%f3, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.f32 	[%rd26], %f3;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.f32 	%f4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.f32 	[%rd28], %f4;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.f32 	%f5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.f32 	[%rd30], %f5;
	add.s32 	%r50, %r50, 4096;
	setp.lt.s32 	%p5, %r50, %r18;
	@%p5 bra 	$L__BB22_6;

$L__BB22_7:
	ret;

}
	// .globl	copy_nd5_f32
.visible .entry copy_nd5_f32(
	.param .u64 copy_nd5_f32_param_0,
	.param .u64 copy_nd5_f32_param_1,
	.param .u32 copy_nd5_f32_param_2,
	.param .u32 copy_nd5_f32_param_3,
	.param .u32 copy_nd5_f32_param_4,
	.param .u32 copy_nd5_f32_param_5,
	.param .u32 copy_nd5_f32_param_6,
	.param .u32 copy_nd5_f32_param_7,
	.param .u32 copy_nd5_f32_param_8,
	.param .u32 copy_nd5_f32_param_9,
	.param .u32 copy_nd5_f32_param_10,
	.param .u32 copy_nd5_f32_param_11,
	.param .u32 copy_nd5_f32_param_12,
	.param .u32 copy_nd5_f32_param_13,
	.param .u32 copy_nd5_f32_param_14,
	.param .u32 copy_nd5_f32_param_15,
	.param .u32 copy_nd5_f32_param_16
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<62>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd5_f32_param_0];
	ld.param.u64 	%rd20, [copy_nd5_f32_param_1];
	ld.param.u32 	%r17, [copy_nd5_f32_param_2];
	ld.param.u32 	%r18, [copy_nd5_f32_param_3];
	ld.param.u32 	%r24, [copy_nd5_f32_param_4];
	ld.param.u32 	%r25, [copy_nd5_f32_param_5];
	ld.param.u32 	%r19, [copy_nd5_f32_param_6];
	ld.param.u32 	%r26, [copy_nd5_f32_param_7];
	ld.param.u32 	%r27, [copy_nd5_f32_param_8];
	ld.param.u32 	%r20, [copy_nd5_f32_param_11];
	ld.param.u32 	%r21, [copy_nd5_f32_param_12];
	ld.param.u32 	%r22, [copy_nd5_f32_param_13];
	ld.param.u32 	%r28, [copy_nd5_f32_param_14];
	ld.param.u32 	%r29, [copy_nd5_f32_param_15];
	ld.param.u32 	%r23, [copy_nd5_f32_param_16];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r30, %ctaid.x;
	mul.lo.s32 	%r1, %r30, %r25;
	mov.u32 	%r31, %ctaid.y;
	mul.lo.s32 	%r2, %r31, %r24;
	mul.lo.s32 	%r3, %r30, %r29;
	mul.lo.s32 	%r4, %r31, %r28;
	mov.u32 	%r32, %ctaid.z;
	div.s32 	%r33, %r32, %r27;
	mul.lo.s32 	%r34, %r33, %r27;
	sub.s32 	%r5, %r32, %r34;
	rem.s32 	%r6, %r33, %r26;
	mov.u32 	%r60, %tid.x;
	setp.ge.s32 	%p1, %r60, %r20;
	@%p1 bra 	$L__BB23_7;

	not.b32 	%r35, %r60;
	add.s32 	%r8, %r35, %r20;
	shr.u32 	%r36, %r8, 10;
	add.s32 	%r37, %r36, 1;
	and.b32  	%r59, %r37, 3;
	setp.eq.s32 	%p2, %r59, 0;
	@%p2 bra 	$L__BB23_4;

	mad.lo.s32 	%r38, %r60, %r23, %r3;
	add.s32 	%r39, %r38, %r4;
	mad.lo.s32 	%r40, %r5, %r22, %r39;
	mad.lo.s32 	%r41, %r6, %r21, %r40;
	mul.wide.s32 	%rd21, %r41, 4;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r42, %r23, 10;
	mul.wide.s32 	%rd4, %r42, 4;
	mad.lo.s32 	%r43, %r60, %r19, %r1;
	add.s32 	%r44, %r43, %r2;
	mad.lo.s32 	%r45, %r5, %r18, %r44;
	mad.lo.s32 	%r46, %r6, %r17, %r45;
	mul.wide.s32 	%rd22, %r46, 4;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r47, %r19, 10;
	mul.wide.s32 	%rd6, %r47, 4;

$L__BB23_3:
	.pragma "nounroll";
	ld.global.f32 	%f1, [%rd31];
	st.global.f32 	[%rd32], %f1;
	add.s32 	%r60, %r60, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r59, %r59, -1;
	setp.ne.s32 	%p3, %r59, 0;
	@%p3 bra 	$L__BB23_3;

$L__BB23_4:
	setp.lt.u32 	%p4, %r8, 3072;
	@%p4 bra 	$L__BB23_7;

	mad.lo.s32 	%r48, %r60, %r19, %r1;
	add.s32 	%r49, %r48, %r2;
	mad.lo.s32 	%r50, %r5, %r18, %r49;
	mad.lo.s32 	%r51, %r6, %r17, %r50;
	mad.lo.s32 	%r52, %r60, %r23, %r3;
	add.s32 	%r53, %r52, %r4;
	mad.lo.s32 	%r54, %r5, %r22, %r53;
	mad.lo.s32 	%r55, %r6, %r21, %r54;
	mul.wide.s32 	%rd23, %r55, 4;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r51, 4;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r56, %r19, 10;
	mul.wide.s32 	%rd13, %r56, 4;
	shl.b32 	%r57, %r23, 10;
	mul.wide.s32 	%rd14, %r57, 4;

$L__BB23_6:
	ld.global.f32 	%f2, [%rd34];
	st.global.f32 	[%rd33], %f2;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.f32 	%f3, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.f32 	[%rd26], %f3;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.f32 	%f4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.f32 	[%rd28], %f4;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.f32 	%f5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.f32 	[%rd30], %f5;
	add.s32 	%r60, %r60, 4096;
	setp.lt.s32 	%p5, %r60, %r20;
	@%p5 bra 	$L__BB23_6;

$L__BB23_7:
	ret;

}
	// .globl	copy_nd6_f32
.visible .entry copy_nd6_f32(
	.param .u64 copy_nd6_f32_param_0,
	.param .u64 copy_nd6_f32_param_1,
	.param .u32 copy_nd6_f32_param_2,
	.param .u32 copy_nd6_f32_param_3,
	.param .u32 copy_nd6_f32_param_4,
	.param .u32 copy_nd6_f32_param_5,
	.param .u32 copy_nd6_f32_param_6,
	.param .u32 copy_nd6_f32_param_7,
	.param .u32 copy_nd6_f32_param_8,
	.param .u32 copy_nd6_f32_param_9,
	.param .u32 copy_nd6_f32_param_10,
	.param .u32 copy_nd6_f32_param_11,
	.param .u32 copy_nd6_f32_param_12,
	.param .u32 copy_nd6_f32_param_13,
	.param .u32 copy_nd6_f32_param_14,
	.param .u32 copy_nd6_f32_param_15,
	.param .u32 copy_nd6_f32_param_16,
	.param .u32 copy_nd6_f32_param_17,
	.param .u32 copy_nd6_f32_param_18,
	.param .u32 copy_nd6_f32_param_19
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<72>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd6_f32_param_0];
	ld.param.u64 	%rd20, [copy_nd6_f32_param_1];
	ld.param.u32 	%r18, [copy_nd6_f32_param_2];
	ld.param.u32 	%r19, [copy_nd6_f32_param_3];
	ld.param.u32 	%r20, [copy_nd6_f32_param_4];
	ld.param.u32 	%r27, [copy_nd6_f32_param_5];
	ld.param.u32 	%r28, [copy_nd6_f32_param_6];
	ld.param.u32 	%r21, [copy_nd6_f32_param_7];
	ld.param.u32 	%r29, [copy_nd6_f32_param_8];
	ld.param.u32 	%r30, [copy_nd6_f32_param_9];
	ld.param.u32 	%r31, [copy_nd6_f32_param_10];
	ld.param.u32 	%r22, [copy_nd6_f32_param_13];
	ld.param.u32 	%r23, [copy_nd6_f32_param_14];
	ld.param.u32 	%r24, [copy_nd6_f32_param_15];
	ld.param.u32 	%r25, [copy_nd6_f32_param_16];
	ld.param.u32 	%r32, [copy_nd6_f32_param_17];
	ld.param.u32 	%r33, [copy_nd6_f32_param_18];
	ld.param.u32 	%r26, [copy_nd6_f32_param_19];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r34, %ctaid.x;
	mul.lo.s32 	%r1, %r34, %r28;
	mov.u32 	%r35, %ctaid.y;
	mul.lo.s32 	%r2, %r35, %r27;
	mul.lo.s32 	%r3, %r34, %r33;
	mul.lo.s32 	%r4, %r35, %r32;
	mov.u32 	%r36, %ctaid.z;
	div.s32 	%r37, %r36, %r31;
	mul.lo.s32 	%r38, %r37, %r31;
	sub.s32 	%r5, %r36, %r38;
	div.s32 	%r39, %r37, %r30;
	mul.lo.s32 	%r40, %r39, %r30;
	sub.s32 	%r6, %r37, %r40;
	rem.s32 	%r7, %r39, %r29;
	mov.u32 	%r70, %tid.x;
	setp.ge.s32 	%p1, %r70, %r22;
	@%p1 bra 	$L__BB24_7;

	not.b32 	%r41, %r70;
	add.s32 	%r9, %r41, %r22;
	shr.u32 	%r42, %r9, 10;
	add.s32 	%r43, %r42, 1;
	and.b32  	%r69, %r43, 3;
	setp.eq.s32 	%p2, %r69, 0;
	@%p2 bra 	$L__BB24_4;

	mad.lo.s32 	%r44, %r70, %r26, %r3;
	add.s32 	%r45, %r44, %r4;
	mad.lo.s32 	%r46, %r5, %r25, %r45;
	mad.lo.s32 	%r47, %r6, %r24, %r46;
	mad.lo.s32 	%r48, %r7, %r23, %r47;
	mul.wide.s32 	%rd21, %r48, 4;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r49, %r26, 10;
	mul.wide.s32 	%rd4, %r49, 4;
	mad.lo.s32 	%r50, %r70, %r21, %r1;
	add.s32 	%r51, %r50, %r2;
	mad.lo.s32 	%r52, %r5, %r20, %r51;
	mad.lo.s32 	%r53, %r6, %r19, %r52;
	mad.lo.s32 	%r54, %r7, %r18, %r53;
	mul.wide.s32 	%rd22, %r54, 4;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r55, %r21, 10;
	mul.wide.s32 	%rd6, %r55, 4;

$L__BB24_3:
	.pragma "nounroll";
	ld.global.f32 	%f1, [%rd31];
	st.global.f32 	[%rd32], %f1;
	add.s32 	%r70, %r70, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r69, %r69, -1;
	setp.ne.s32 	%p3, %r69, 0;
	@%p3 bra 	$L__BB24_3;

$L__BB24_4:
	setp.lt.u32 	%p4, %r9, 3072;
	@%p4 bra 	$L__BB24_7;

	mad.lo.s32 	%r56, %r70, %r21, %r1;
	add.s32 	%r57, %r56, %r2;
	mad.lo.s32 	%r58, %r5, %r20, %r57;
	mad.lo.s32 	%r59, %r6, %r19, %r58;
	mad.lo.s32 	%r60, %r7, %r18, %r59;
	mad.lo.s32 	%r61, %r70, %r26, %r3;
	add.s32 	%r62, %r61, %r4;
	mad.lo.s32 	%r63, %r5, %r25, %r62;
	mad.lo.s32 	%r64, %r6, %r24, %r63;
	mad.lo.s32 	%r65, %r7, %r23, %r64;
	mul.wide.s32 	%rd23, %r65, 4;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r60, 4;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r66, %r21, 10;
	mul.wide.s32 	%rd13, %r66, 4;
	shl.b32 	%r67, %r26, 10;
	mul.wide.s32 	%rd14, %r67, 4;

$L__BB24_6:
	ld.global.f32 	%f2, [%rd34];
	st.global.f32 	[%rd33], %f2;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.f32 	%f3, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.f32 	[%rd26], %f3;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.f32 	%f4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.f32 	[%rd28], %f4;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.f32 	%f5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.f32 	[%rd30], %f5;
	add.s32 	%r70, %r70, 4096;
	setp.lt.s32 	%p5, %r70, %r22;
	@%p5 bra 	$L__BB24_6;

$L__BB24_7:
	ret;

}
	// .globl	cast_f32_bool
.visible .entry cast_f32_bool(
	.param .u64 cast_f32_bool_param_0,
	.param .u64 cast_f32_bool_param_1,
	.param .u32 cast_f32_bool_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_f32_bool_param_0];
	ld.param.u64 	%rd2, [cast_f32_bool_param_1];
	ld.param.u32 	%r2, [cast_f32_bool_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB25_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.f32 	%f1, [%rd6];
	setp.neu.f32 	%p2, %f1, 0f00000000;
	selp.u16 	%rs1, 1, 0, %p2;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u8 	[%rd8], %rs1;

$L__BB25_2:
	ret;

}
	// .globl	cast_f32_f32
.visible .entry cast_f32_f32(
	.param .u64 cast_f32_f32_param_0,
	.param .u64 cast_f32_f32_param_1,
	.param .u32 cast_f32_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_f32_f32_param_0];
	ld.param.u64 	%rd2, [cast_f32_f32_param_1];
	ld.param.u32 	%r2, [cast_f32_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB26_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f1;

$L__BB26_2:
	ret;

}
	// .globl	cast_f32_f16
.visible .entry cast_f32_f16(
	.param .u64 cast_f32_f16_param_0,
	.param .u64 cast_f32_f16_param_1,
	.param .u32 cast_f32_f16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_f32_f16_param_0];
	ld.param.u64 	%rd2, [cast_f32_f16_param_1];
	ld.param.u32 	%r2, [cast_f32_f16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB27_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1, %f1;}

	// end inline asm
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 2;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u16 	[%rd8], %rs1;

$L__BB27_2:
	ret;

}
	// .globl	cast_f32_u8
.visible .entry cast_f32_u8(
	.param .u64 cast_f32_u8_param_0,
	.param .u64 cast_f32_u8_param_1,
	.param .u32 cast_f32_u8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_f32_u8_param_0];
	ld.param.u64 	%rd2, [cast_f32_u8_param_1];
	ld.param.u32 	%r2, [cast_f32_u8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB28_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.f32 	%f1, [%rd6];
	cvt.rzi.u32.f32 	%r6, %f1;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u8 	[%rd8], %r6;

$L__BB28_2:
	ret;

}
	// .globl	cast_f32_u16
.visible .entry cast_f32_u16(
	.param .u64 cast_f32_u16_param_0,
	.param .u64 cast_f32_u16_param_1,
	.param .u32 cast_f32_u16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_f32_u16_param_0];
	ld.param.u64 	%rd2, [cast_f32_u16_param_1];
	ld.param.u32 	%r2, [cast_f32_u16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB29_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvt.rzi.u32.f32 	%r6, %f1;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 2;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u16 	[%rd8], %r6;

$L__BB29_2:
	ret;

}
	// .globl	cast_f32_u32
.visible .entry cast_f32_u32(
	.param .u64 cast_f32_u32_param_0,
	.param .u64 cast_f32_u32_param_1,
	.param .u32 cast_f32_u32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_f32_u32_param_0];
	ld.param.u64 	%rd2, [cast_f32_u32_param_1];
	ld.param.u32 	%r2, [cast_f32_u32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB30_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvt.rzi.u32.f32 	%r6, %f1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u32 	[%rd7], %r6;

$L__BB30_2:
	ret;

}
	// .globl	cast_f32_u64
.visible .entry cast_f32_u64(
	.param .u64 cast_f32_u64_param_0,
	.param .u64 cast_f32_u64_param_1,
	.param .u32 cast_f32_u64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_f32_u64_param_0];
	ld.param.u64 	%rd2, [cast_f32_u64_param_1];
	ld.param.u32 	%r2, [cast_f32_u64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB31_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvt.rzi.u64.f32 	%rd6, %f1;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u64 	[%rd9], %rd6;

$L__BB31_2:
	ret;

}
	// .globl	cast_f32_i8
.visible .entry cast_f32_i8(
	.param .u64 cast_f32_i8_param_0,
	.param .u64 cast_f32_i8_param_1,
	.param .u32 cast_f32_i8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_f32_i8_param_0];
	ld.param.u64 	%rd2, [cast_f32_i8_param_1];
	ld.param.u32 	%r2, [cast_f32_i8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB32_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.f32 	%f1, [%rd6];
	cvt.rzi.s32.f32 	%r6, %f1;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u8 	[%rd8], %r6;

$L__BB32_2:
	ret;

}
	// .globl	cast_f32_i16
.visible .entry cast_f32_i16(
	.param .u64 cast_f32_i16_param_0,
	.param .u64 cast_f32_i16_param_1,
	.param .u32 cast_f32_i16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_f32_i16_param_0];
	ld.param.u64 	%rd2, [cast_f32_i16_param_1];
	ld.param.u32 	%r2, [cast_f32_i16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB33_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvt.rzi.s32.f32 	%r6, %f1;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 2;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u16 	[%rd8], %r6;

$L__BB33_2:
	ret;

}
	// .globl	cast_f32_i32
.visible .entry cast_f32_i32(
	.param .u64 cast_f32_i32_param_0,
	.param .u64 cast_f32_i32_param_1,
	.param .u32 cast_f32_i32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_f32_i32_param_0];
	ld.param.u64 	%rd2, [cast_f32_i32_param_1];
	ld.param.u32 	%r2, [cast_f32_i32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB34_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvt.rzi.s32.f32 	%r6, %f1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u32 	[%rd7], %r6;

$L__BB34_2:
	ret;

}
	// .globl	cast_f32_i64
.visible .entry cast_f32_i64(
	.param .u64 cast_f32_i64_param_0,
	.param .u64 cast_f32_i64_param_1,
	.param .u32 cast_f32_i64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_f32_i64_param_0];
	ld.param.u64 	%rd2, [cast_f32_i64_param_1];
	ld.param.u32 	%r2, [cast_f32_i64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB35_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvt.rzi.s64.f32 	%rd6, %f1;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u64 	[%rd9], %rd6;

$L__BB35_2:
	ret;

}
	// .globl	rotate_half_nd2_f32
.visible .entry rotate_half_nd2_f32(
	.param .u64 rotate_half_nd2_f32_param_0,
	.param .u64 rotate_half_nd2_f32_param_1,
	.param .u32 rotate_half_nd2_f32_param_2,
	.param .u32 rotate_half_nd2_f32_param_3,
	.param .u32 rotate_half_nd2_f32_param_4,
	.param .u32 rotate_half_nd2_f32_param_5
)
{
	.reg .f32 	%f<4>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [rotate_half_nd2_f32_param_0];
	ld.param.u64 	%rd2, [rotate_half_nd2_f32_param_1];
	ld.param.u32 	%r1, [rotate_half_nd2_f32_param_4];
	ld.param.u32 	%r2, [rotate_half_nd2_f32_param_5];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ctaid.y;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %tid.y;
	mad.lo.s32 	%r10, %r7, %r8, %r9;
	ld.param.u32 	%r11, [rotate_half_nd2_f32_param_3];
	shr.u32 	%r12, %r11, 31;
	add.s32 	%r13, %r11, %r12;
	shr.s32 	%r14, %r13, 1;
	add.s32 	%r15, %r14, %r6;
	mul.lo.s32 	%r16, %r10, %r1;
	mad.lo.s32 	%r17, %r15, %r2, %r16;
	mad.lo.s32 	%r18, %r6, %r2, %r16;
	mul.wide.s32 	%rd5, %r17, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	neg.f32 	%f2, %f1;
	mul.wide.s32 	%rd7, %r18, 4;
	add.s64 	%rd8, %rd3, %rd7;
	st.global.f32 	[%rd8], %f2;
	add.s64 	%rd9, %rd4, %rd7;
	ld.global.f32 	%f3, [%rd9];
	add.s64 	%rd10, %rd3, %rd5;
	st.global.f32 	[%rd10], %f3;
	ret;

}
	// .globl	copy_unicast_f16
.visible .entry copy_unicast_f16(
	.param .u64 copy_unicast_f16_param_0,
	.param .u64 copy_unicast_f16_param_1,
	.param .u32 copy_unicast_f16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [copy_unicast_f16_param_0];
	ld.param.u64 	%rd2, [copy_unicast_f16_param_1];
	ld.param.u32 	%r2, [copy_unicast_f16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB37_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u16 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u16 	[%rd7], %rs1;

$L__BB37_2:
	ret;

}
	// .globl	copy_nd1_f16
.visible .entry copy_nd1_f16(
	.param .u64 copy_nd1_f16_param_0,
	.param .u64 copy_nd1_f16_param_1,
	.param .u32 copy_nd1_f16_param_2,
	.param .u32 copy_nd1_f16_param_3,
	.param .u32 copy_nd1_f16_param_4
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<29>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd1_f16_param_0];
	ld.param.u64 	%rd20, [copy_nd1_f16_param_1];
	ld.param.u32 	%r11, [copy_nd1_f16_param_2];
	ld.param.u32 	%r12, [copy_nd1_f16_param_3];
	ld.param.u32 	%r13, [copy_nd1_f16_param_4];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r27, %tid.x;
	setp.ge.s32 	%p1, %r27, %r12;
	@%p1 bra 	$L__BB38_7;

	not.b32 	%r14, %r27;
	add.s32 	%r2, %r14, %r12;
	shr.u32 	%r15, %r2, 10;
	add.s32 	%r16, %r15, 1;
	and.b32  	%r26, %r16, 3;
	setp.eq.s32 	%p2, %r26, 0;
	@%p2 bra 	$L__BB38_4;

	mul.lo.s32 	%r17, %r27, %r11;
	mul.wide.s32 	%rd21, %r17, 2;
	add.s64 	%rd32, %rd2, %rd21;
	shl.b32 	%r18, %r11, 10;
	mul.wide.s32 	%rd4, %r18, 2;
	mul.lo.s32 	%r19, %r27, %r13;
	mul.wide.s32 	%rd22, %r19, 2;
	add.s64 	%rd31, %rd1, %rd22;
	shl.b32 	%r20, %r13, 10;
	mul.wide.s32 	%rd6, %r20, 2;

$L__BB38_3:
	.pragma "nounroll";
	ld.global.u16 	%rs1, [%rd32];
	st.global.u16 	[%rd31], %rs1;
	add.s32 	%r27, %r27, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r26, %r26, -1;
	setp.ne.s32 	%p3, %r26, 0;
	@%p3 bra 	$L__BB38_3;

$L__BB38_4:
	setp.lt.u32 	%p4, %r2, 3072;
	@%p4 bra 	$L__BB38_7;

	mul.lo.s32 	%r21, %r27, %r13;
	mul.lo.s32 	%r22, %r27, %r11;
	mul.wide.s32 	%rd23, %r22, 2;
	add.s64 	%rd33, %rd2, %rd23;
	shl.b32 	%r23, %r11, 10;
	mul.wide.s32 	%rd12, %r23, 2;
	mul.wide.s32 	%rd24, %r21, 2;
	add.s64 	%rd34, %rd1, %rd24;
	shl.b32 	%r24, %r13, 10;
	mul.wide.s32 	%rd14, %r24, 2;

$L__BB38_6:
	ld.global.u16 	%rs2, [%rd33];
	st.global.u16 	[%rd34], %rs2;
	add.s64 	%rd25, %rd33, %rd12;
	ld.global.u16 	%rs3, [%rd25];
	add.s64 	%rd26, %rd34, %rd14;
	st.global.u16 	[%rd26], %rs3;
	add.s64 	%rd27, %rd25, %rd12;
	ld.global.u16 	%rs4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u16 	[%rd28], %rs4;
	add.s64 	%rd29, %rd27, %rd12;
	add.s64 	%rd33, %rd29, %rd12;
	ld.global.u16 	%rs5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd34, %rd30, %rd14;
	st.global.u16 	[%rd30], %rs5;
	add.s32 	%r27, %r27, 4096;
	setp.lt.s32 	%p5, %r27, %r12;
	@%p5 bra 	$L__BB38_6;

$L__BB38_7:
	ret;

}
	// .globl	copy_nd2_f16
.visible .entry copy_nd2_f16(
	.param .u64 copy_nd2_f16_param_0,
	.param .u64 copy_nd2_f16_param_1,
	.param .u32 copy_nd2_f16_param_2,
	.param .u32 copy_nd2_f16_param_3,
	.param .u32 copy_nd2_f16_param_4,
	.param .u32 copy_nd2_f16_param_5,
	.param .u32 copy_nd2_f16_param_6,
	.param .u32 copy_nd2_f16_param_7
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<34>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd2_f16_param_0];
	ld.param.u64 	%rd20, [copy_nd2_f16_param_1];
	ld.param.u32 	%r16, [copy_nd2_f16_param_2];
	ld.param.u32 	%r13, [copy_nd2_f16_param_3];
	ld.param.u32 	%r14, [copy_nd2_f16_param_5];
	ld.param.u32 	%r17, [copy_nd2_f16_param_6];
	ld.param.u32 	%r15, [copy_nd2_f16_param_7];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r18, %ctaid.x;
	mul.lo.s32 	%r1, %r18, %r16;
	mul.lo.s32 	%r2, %r18, %r17;
	mov.u32 	%r32, %tid.x;
	setp.ge.s32 	%p1, %r32, %r14;
	@%p1 bra 	$L__BB39_7;

	not.b32 	%r19, %r32;
	add.s32 	%r4, %r19, %r14;
	shr.u32 	%r20, %r4, 10;
	add.s32 	%r21, %r20, 1;
	and.b32  	%r31, %r21, 3;
	setp.eq.s32 	%p2, %r31, 0;
	@%p2 bra 	$L__BB39_4;

	mad.lo.s32 	%r22, %r32, %r13, %r1;
	mul.wide.s32 	%rd21, %r22, 2;
	add.s64 	%rd32, %rd2, %rd21;
	shl.b32 	%r23, %r13, 10;
	mul.wide.s32 	%rd4, %r23, 2;
	mad.lo.s32 	%r24, %r32, %r15, %r2;
	mul.wide.s32 	%rd22, %r24, 2;
	add.s64 	%rd31, %rd1, %rd22;
	shl.b32 	%r25, %r15, 10;
	mul.wide.s32 	%rd6, %r25, 2;

$L__BB39_3:
	.pragma "nounroll";
	ld.global.u16 	%rs1, [%rd32];
	st.global.u16 	[%rd31], %rs1;
	add.s32 	%r32, %r32, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r31, %r31, -1;
	setp.ne.s32 	%p3, %r31, 0;
	@%p3 bra 	$L__BB39_3;

$L__BB39_4:
	setp.lt.u32 	%p4, %r4, 3072;
	@%p4 bra 	$L__BB39_7;

	mad.lo.s32 	%r26, %r32, %r15, %r2;
	mad.lo.s32 	%r27, %r32, %r13, %r1;
	mul.wide.s32 	%rd23, %r27, 2;
	add.s64 	%rd33, %rd2, %rd23;
	shl.b32 	%r28, %r13, 10;
	mul.wide.s32 	%rd12, %r28, 2;
	mul.wide.s32 	%rd24, %r26, 2;
	add.s64 	%rd34, %rd1, %rd24;
	shl.b32 	%r29, %r15, 10;
	mul.wide.s32 	%rd14, %r29, 2;

$L__BB39_6:
	ld.global.u16 	%rs2, [%rd33];
	st.global.u16 	[%rd34], %rs2;
	add.s64 	%rd25, %rd33, %rd12;
	ld.global.u16 	%rs3, [%rd25];
	add.s64 	%rd26, %rd34, %rd14;
	st.global.u16 	[%rd26], %rs3;
	add.s64 	%rd27, %rd25, %rd12;
	ld.global.u16 	%rs4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u16 	[%rd28], %rs4;
	add.s64 	%rd29, %rd27, %rd12;
	add.s64 	%rd33, %rd29, %rd12;
	ld.global.u16 	%rs5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd34, %rd30, %rd14;
	st.global.u16 	[%rd30], %rs5;
	add.s32 	%r32, %r32, 4096;
	setp.lt.s32 	%p5, %r32, %r14;
	@%p5 bra 	$L__BB39_6;

$L__BB39_7:
	ret;

}
	// .globl	copy_nd3_f16
.visible .entry copy_nd3_f16(
	.param .u64 copy_nd3_f16_param_0,
	.param .u64 copy_nd3_f16_param_1,
	.param .u32 copy_nd3_f16_param_2,
	.param .u32 copy_nd3_f16_param_3,
	.param .u32 copy_nd3_f16_param_4,
	.param .u32 copy_nd3_f16_param_5,
	.param .u32 copy_nd3_f16_param_6,
	.param .u32 copy_nd3_f16_param_7,
	.param .u32 copy_nd3_f16_param_8,
	.param .u32 copy_nd3_f16_param_9,
	.param .u32 copy_nd3_f16_param_10
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<43>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd3_f16_param_0];
	ld.param.u64 	%rd20, [copy_nd3_f16_param_1];
	ld.param.u32 	%r18, [copy_nd3_f16_param_2];
	ld.param.u32 	%r19, [copy_nd3_f16_param_3];
	ld.param.u32 	%r15, [copy_nd3_f16_param_4];
	ld.param.u32 	%r16, [copy_nd3_f16_param_7];
	ld.param.u32 	%r20, [copy_nd3_f16_param_8];
	ld.param.u32 	%r21, [copy_nd3_f16_param_9];
	ld.param.u32 	%r17, [copy_nd3_f16_param_10];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r22, %ctaid.x;
	mul.lo.s32 	%r1, %r22, %r19;
	mov.u32 	%r23, %ctaid.y;
	mul.lo.s32 	%r2, %r23, %r18;
	mul.lo.s32 	%r3, %r22, %r21;
	mul.lo.s32 	%r4, %r23, %r20;
	mov.u32 	%r41, %tid.x;
	setp.ge.s32 	%p1, %r41, %r16;
	@%p1 bra 	$L__BB40_7;

	not.b32 	%r24, %r41;
	add.s32 	%r6, %r24, %r16;
	shr.u32 	%r25, %r6, 10;
	add.s32 	%r26, %r25, 1;
	and.b32  	%r40, %r26, 3;
	setp.eq.s32 	%p2, %r40, 0;
	@%p2 bra 	$L__BB40_4;

	mad.lo.s32 	%r27, %r41, %r15, %r1;
	add.s32 	%r28, %r27, %r2;
	mul.wide.s32 	%rd21, %r28, 2;
	add.s64 	%rd32, %rd2, %rd21;
	shl.b32 	%r29, %r15, 10;
	mul.wide.s32 	%rd4, %r29, 2;
	mad.lo.s32 	%r30, %r41, %r17, %r3;
	add.s32 	%r31, %r30, %r4;
	mul.wide.s32 	%rd22, %r31, 2;
	add.s64 	%rd31, %rd1, %rd22;
	shl.b32 	%r32, %r17, 10;
	mul.wide.s32 	%rd6, %r32, 2;

$L__BB40_3:
	.pragma "nounroll";
	ld.global.u16 	%rs1, [%rd32];
	st.global.u16 	[%rd31], %rs1;
	add.s32 	%r41, %r41, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r40, %r40, -1;
	setp.ne.s32 	%p3, %r40, 0;
	@%p3 bra 	$L__BB40_3;

$L__BB40_4:
	setp.lt.u32 	%p4, %r6, 3072;
	@%p4 bra 	$L__BB40_7;

	mad.lo.s32 	%r33, %r41, %r17, %r3;
	add.s32 	%r34, %r33, %r4;
	mad.lo.s32 	%r35, %r41, %r15, %r1;
	add.s32 	%r36, %r35, %r2;
	mul.wide.s32 	%rd23, %r36, 2;
	add.s64 	%rd33, %rd2, %rd23;
	shl.b32 	%r37, %r15, 10;
	mul.wide.s32 	%rd12, %r37, 2;
	mul.wide.s32 	%rd24, %r34, 2;
	add.s64 	%rd34, %rd1, %rd24;
	shl.b32 	%r38, %r17, 10;
	mul.wide.s32 	%rd14, %r38, 2;

$L__BB40_6:
	ld.global.u16 	%rs2, [%rd33];
	st.global.u16 	[%rd34], %rs2;
	add.s64 	%rd25, %rd33, %rd12;
	ld.global.u16 	%rs3, [%rd25];
	add.s64 	%rd26, %rd34, %rd14;
	st.global.u16 	[%rd26], %rs3;
	add.s64 	%rd27, %rd25, %rd12;
	ld.global.u16 	%rs4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u16 	[%rd28], %rs4;
	add.s64 	%rd29, %rd27, %rd12;
	add.s64 	%rd33, %rd29, %rd12;
	ld.global.u16 	%rs5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd34, %rd30, %rd14;
	st.global.u16 	[%rd30], %rs5;
	add.s32 	%r41, %r41, 4096;
	setp.lt.s32 	%p5, %r41, %r16;
	@%p5 bra 	$L__BB40_6;

$L__BB40_7:
	ret;

}
	// .globl	copy_nd4_f16
.visible .entry copy_nd4_f16(
	.param .u64 copy_nd4_f16_param_0,
	.param .u64 copy_nd4_f16_param_1,
	.param .u32 copy_nd4_f16_param_2,
	.param .u32 copy_nd4_f16_param_3,
	.param .u32 copy_nd4_f16_param_4,
	.param .u32 copy_nd4_f16_param_5,
	.param .u32 copy_nd4_f16_param_6,
	.param .u32 copy_nd4_f16_param_7,
	.param .u32 copy_nd4_f16_param_8,
	.param .u32 copy_nd4_f16_param_9,
	.param .u32 copy_nd4_f16_param_10,
	.param .u32 copy_nd4_f16_param_11,
	.param .u32 copy_nd4_f16_param_12,
	.param .u32 copy_nd4_f16_param_13
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<52>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd4_f16_param_0];
	ld.param.u64 	%rd20, [copy_nd4_f16_param_1];
	ld.param.u32 	%r20, [copy_nd4_f16_param_2];
	ld.param.u32 	%r21, [copy_nd4_f16_param_3];
	ld.param.u32 	%r22, [copy_nd4_f16_param_4];
	ld.param.u32 	%r17, [copy_nd4_f16_param_5];
	ld.param.u32 	%r18, [copy_nd4_f16_param_9];
	ld.param.u32 	%r23, [copy_nd4_f16_param_10];
	ld.param.u32 	%r24, [copy_nd4_f16_param_11];
	ld.param.u32 	%r25, [copy_nd4_f16_param_12];
	ld.param.u32 	%r19, [copy_nd4_f16_param_13];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r26, %ctaid.x;
	mul.lo.s32 	%r1, %r26, %r22;
	mov.u32 	%r27, %ctaid.y;
	mul.lo.s32 	%r2, %r27, %r21;
	mov.u32 	%r28, %ctaid.z;
	mul.lo.s32 	%r3, %r28, %r20;
	mul.lo.s32 	%r4, %r26, %r25;
	mul.lo.s32 	%r5, %r27, %r24;
	mul.lo.s32 	%r6, %r28, %r23;
	mov.u32 	%r50, %tid.x;
	setp.ge.s32 	%p1, %r50, %r18;
	@%p1 bra 	$L__BB41_7;

	not.b32 	%r29, %r50;
	add.s32 	%r8, %r29, %r18;
	shr.u32 	%r30, %r8, 10;
	add.s32 	%r31, %r30, 1;
	and.b32  	%r49, %r31, 3;
	setp.eq.s32 	%p2, %r49, 0;
	@%p2 bra 	$L__BB41_4;

	mad.lo.s32 	%r32, %r50, %r17, %r1;
	add.s32 	%r33, %r32, %r2;
	add.s32 	%r34, %r33, %r3;
	mul.wide.s32 	%rd21, %r34, 2;
	add.s64 	%rd32, %rd2, %rd21;
	shl.b32 	%r35, %r17, 10;
	mul.wide.s32 	%rd4, %r35, 2;
	mad.lo.s32 	%r36, %r50, %r19, %r4;
	add.s32 	%r37, %r36, %r5;
	add.s32 	%r38, %r37, %r6;
	mul.wide.s32 	%rd22, %r38, 2;
	add.s64 	%rd31, %rd1, %rd22;
	shl.b32 	%r39, %r19, 10;
	mul.wide.s32 	%rd6, %r39, 2;

$L__BB41_3:
	.pragma "nounroll";
	ld.global.u16 	%rs1, [%rd32];
	st.global.u16 	[%rd31], %rs1;
	add.s32 	%r50, %r50, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r49, %r49, -1;
	setp.ne.s32 	%p3, %r49, 0;
	@%p3 bra 	$L__BB41_3;

$L__BB41_4:
	setp.lt.u32 	%p4, %r8, 3072;
	@%p4 bra 	$L__BB41_7;

	mad.lo.s32 	%r40, %r50, %r19, %r4;
	add.s32 	%r41, %r40, %r5;
	add.s32 	%r42, %r41, %r6;
	mad.lo.s32 	%r43, %r50, %r17, %r1;
	add.s32 	%r44, %r43, %r2;
	add.s32 	%r45, %r44, %r3;
	mul.wide.s32 	%rd23, %r45, 2;
	add.s64 	%rd33, %rd2, %rd23;
	shl.b32 	%r46, %r17, 10;
	mul.wide.s32 	%rd12, %r46, 2;
	mul.wide.s32 	%rd24, %r42, 2;
	add.s64 	%rd34, %rd1, %rd24;
	shl.b32 	%r47, %r19, 10;
	mul.wide.s32 	%rd14, %r47, 2;

$L__BB41_6:
	ld.global.u16 	%rs2, [%rd33];
	st.global.u16 	[%rd34], %rs2;
	add.s64 	%rd25, %rd33, %rd12;
	ld.global.u16 	%rs3, [%rd25];
	add.s64 	%rd26, %rd34, %rd14;
	st.global.u16 	[%rd26], %rs3;
	add.s64 	%rd27, %rd25, %rd12;
	ld.global.u16 	%rs4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u16 	[%rd28], %rs4;
	add.s64 	%rd29, %rd27, %rd12;
	add.s64 	%rd33, %rd29, %rd12;
	ld.global.u16 	%rs5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd34, %rd30, %rd14;
	st.global.u16 	[%rd30], %rs5;
	add.s32 	%r50, %r50, 4096;
	setp.lt.s32 	%p5, %r50, %r18;
	@%p5 bra 	$L__BB41_6;

$L__BB41_7:
	ret;

}
	// .globl	copy_nd5_f16
.visible .entry copy_nd5_f16(
	.param .u64 copy_nd5_f16_param_0,
	.param .u64 copy_nd5_f16_param_1,
	.param .u32 copy_nd5_f16_param_2,
	.param .u32 copy_nd5_f16_param_3,
	.param .u32 copy_nd5_f16_param_4,
	.param .u32 copy_nd5_f16_param_5,
	.param .u32 copy_nd5_f16_param_6,
	.param .u32 copy_nd5_f16_param_7,
	.param .u32 copy_nd5_f16_param_8,
	.param .u32 copy_nd5_f16_param_9,
	.param .u32 copy_nd5_f16_param_10,
	.param .u32 copy_nd5_f16_param_11,
	.param .u32 copy_nd5_f16_param_12,
	.param .u32 copy_nd5_f16_param_13,
	.param .u32 copy_nd5_f16_param_14,
	.param .u32 copy_nd5_f16_param_15,
	.param .u32 copy_nd5_f16_param_16
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<62>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd5_f16_param_0];
	ld.param.u64 	%rd20, [copy_nd5_f16_param_1];
	ld.param.u32 	%r17, [copy_nd5_f16_param_2];
	ld.param.u32 	%r18, [copy_nd5_f16_param_3];
	ld.param.u32 	%r24, [copy_nd5_f16_param_4];
	ld.param.u32 	%r25, [copy_nd5_f16_param_5];
	ld.param.u32 	%r19, [copy_nd5_f16_param_6];
	ld.param.u32 	%r26, [copy_nd5_f16_param_7];
	ld.param.u32 	%r27, [copy_nd5_f16_param_8];
	ld.param.u32 	%r20, [copy_nd5_f16_param_11];
	ld.param.u32 	%r21, [copy_nd5_f16_param_12];
	ld.param.u32 	%r22, [copy_nd5_f16_param_13];
	ld.param.u32 	%r28, [copy_nd5_f16_param_14];
	ld.param.u32 	%r29, [copy_nd5_f16_param_15];
	ld.param.u32 	%r23, [copy_nd5_f16_param_16];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r30, %ctaid.x;
	mul.lo.s32 	%r1, %r30, %r25;
	mov.u32 	%r31, %ctaid.y;
	mul.lo.s32 	%r2, %r31, %r24;
	mul.lo.s32 	%r3, %r30, %r29;
	mul.lo.s32 	%r4, %r31, %r28;
	mov.u32 	%r32, %ctaid.z;
	div.s32 	%r33, %r32, %r27;
	mul.lo.s32 	%r34, %r33, %r27;
	sub.s32 	%r5, %r32, %r34;
	rem.s32 	%r6, %r33, %r26;
	mov.u32 	%r60, %tid.x;
	setp.ge.s32 	%p1, %r60, %r20;
	@%p1 bra 	$L__BB42_7;

	not.b32 	%r35, %r60;
	add.s32 	%r8, %r35, %r20;
	shr.u32 	%r36, %r8, 10;
	add.s32 	%r37, %r36, 1;
	and.b32  	%r59, %r37, 3;
	setp.eq.s32 	%p2, %r59, 0;
	@%p2 bra 	$L__BB42_4;

	mad.lo.s32 	%r38, %r60, %r19, %r1;
	add.s32 	%r39, %r38, %r2;
	mad.lo.s32 	%r40, %r5, %r18, %r39;
	mad.lo.s32 	%r41, %r6, %r17, %r40;
	mul.wide.s32 	%rd21, %r41, 2;
	add.s64 	%rd32, %rd2, %rd21;
	shl.b32 	%r42, %r19, 10;
	mul.wide.s32 	%rd4, %r42, 2;
	mad.lo.s32 	%r43, %r60, %r23, %r3;
	add.s32 	%r44, %r43, %r4;
	mad.lo.s32 	%r45, %r5, %r22, %r44;
	mad.lo.s32 	%r46, %r6, %r21, %r45;
	mul.wide.s32 	%rd22, %r46, 2;
	add.s64 	%rd31, %rd1, %rd22;
	shl.b32 	%r47, %r23, 10;
	mul.wide.s32 	%rd6, %r47, 2;

$L__BB42_3:
	.pragma "nounroll";
	ld.global.u16 	%rs1, [%rd32];
	st.global.u16 	[%rd31], %rs1;
	add.s32 	%r60, %r60, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r59, %r59, -1;
	setp.ne.s32 	%p3, %r59, 0;
	@%p3 bra 	$L__BB42_3;

$L__BB42_4:
	setp.lt.u32 	%p4, %r8, 3072;
	@%p4 bra 	$L__BB42_7;

	mad.lo.s32 	%r48, %r60, %r23, %r3;
	add.s32 	%r49, %r48, %r4;
	mad.lo.s32 	%r50, %r5, %r22, %r49;
	mad.lo.s32 	%r51, %r6, %r21, %r50;
	mad.lo.s32 	%r52, %r60, %r19, %r1;
	add.s32 	%r53, %r52, %r2;
	mad.lo.s32 	%r54, %r5, %r18, %r53;
	mad.lo.s32 	%r55, %r6, %r17, %r54;
	mul.wide.s32 	%rd23, %r55, 2;
	add.s64 	%rd33, %rd2, %rd23;
	shl.b32 	%r56, %r19, 10;
	mul.wide.s32 	%rd12, %r56, 2;
	mul.wide.s32 	%rd24, %r51, 2;
	add.s64 	%rd34, %rd1, %rd24;
	shl.b32 	%r57, %r23, 10;
	mul.wide.s32 	%rd14, %r57, 2;

$L__BB42_6:
	ld.global.u16 	%rs2, [%rd33];
	st.global.u16 	[%rd34], %rs2;
	add.s64 	%rd25, %rd33, %rd12;
	ld.global.u16 	%rs3, [%rd25];
	add.s64 	%rd26, %rd34, %rd14;
	st.global.u16 	[%rd26], %rs3;
	add.s64 	%rd27, %rd25, %rd12;
	ld.global.u16 	%rs4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u16 	[%rd28], %rs4;
	add.s64 	%rd29, %rd27, %rd12;
	add.s64 	%rd33, %rd29, %rd12;
	ld.global.u16 	%rs5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd34, %rd30, %rd14;
	st.global.u16 	[%rd30], %rs5;
	add.s32 	%r60, %r60, 4096;
	setp.lt.s32 	%p5, %r60, %r20;
	@%p5 bra 	$L__BB42_6;

$L__BB42_7:
	ret;

}
	// .globl	copy_nd6_f16
.visible .entry copy_nd6_f16(
	.param .u64 copy_nd6_f16_param_0,
	.param .u64 copy_nd6_f16_param_1,
	.param .u32 copy_nd6_f16_param_2,
	.param .u32 copy_nd6_f16_param_3,
	.param .u32 copy_nd6_f16_param_4,
	.param .u32 copy_nd6_f16_param_5,
	.param .u32 copy_nd6_f16_param_6,
	.param .u32 copy_nd6_f16_param_7,
	.param .u32 copy_nd6_f16_param_8,
	.param .u32 copy_nd6_f16_param_9,
	.param .u32 copy_nd6_f16_param_10,
	.param .u32 copy_nd6_f16_param_11,
	.param .u32 copy_nd6_f16_param_12,
	.param .u32 copy_nd6_f16_param_13,
	.param .u32 copy_nd6_f16_param_14,
	.param .u32 copy_nd6_f16_param_15,
	.param .u32 copy_nd6_f16_param_16,
	.param .u32 copy_nd6_f16_param_17,
	.param .u32 copy_nd6_f16_param_18,
	.param .u32 copy_nd6_f16_param_19
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<72>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd6_f16_param_0];
	ld.param.u64 	%rd20, [copy_nd6_f16_param_1];
	ld.param.u32 	%r18, [copy_nd6_f16_param_2];
	ld.param.u32 	%r19, [copy_nd6_f16_param_3];
	ld.param.u32 	%r20, [copy_nd6_f16_param_4];
	ld.param.u32 	%r27, [copy_nd6_f16_param_5];
	ld.param.u32 	%r28, [copy_nd6_f16_param_6];
	ld.param.u32 	%r21, [copy_nd6_f16_param_7];
	ld.param.u32 	%r29, [copy_nd6_f16_param_8];
	ld.param.u32 	%r30, [copy_nd6_f16_param_9];
	ld.param.u32 	%r31, [copy_nd6_f16_param_10];
	ld.param.u32 	%r22, [copy_nd6_f16_param_13];
	ld.param.u32 	%r23, [copy_nd6_f16_param_14];
	ld.param.u32 	%r24, [copy_nd6_f16_param_15];
	ld.param.u32 	%r25, [copy_nd6_f16_param_16];
	ld.param.u32 	%r32, [copy_nd6_f16_param_17];
	ld.param.u32 	%r33, [copy_nd6_f16_param_18];
	ld.param.u32 	%r26, [copy_nd6_f16_param_19];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r34, %ctaid.x;
	mul.lo.s32 	%r1, %r34, %r28;
	mov.u32 	%r35, %ctaid.y;
	mul.lo.s32 	%r2, %r35, %r27;
	mul.lo.s32 	%r3, %r34, %r33;
	mul.lo.s32 	%r4, %r35, %r32;
	mov.u32 	%r36, %ctaid.z;
	div.s32 	%r37, %r36, %r31;
	mul.lo.s32 	%r38, %r37, %r31;
	sub.s32 	%r5, %r36, %r38;
	div.s32 	%r39, %r37, %r30;
	mul.lo.s32 	%r40, %r39, %r30;
	sub.s32 	%r6, %r37, %r40;
	rem.s32 	%r7, %r39, %r29;
	mov.u32 	%r70, %tid.x;
	setp.ge.s32 	%p1, %r70, %r22;
	@%p1 bra 	$L__BB43_7;

	not.b32 	%r41, %r70;
	add.s32 	%r9, %r41, %r22;
	shr.u32 	%r42, %r9, 10;
	add.s32 	%r43, %r42, 1;
	and.b32  	%r69, %r43, 3;
	setp.eq.s32 	%p2, %r69, 0;
	@%p2 bra 	$L__BB43_4;

	mad.lo.s32 	%r44, %r70, %r21, %r1;
	add.s32 	%r45, %r44, %r2;
	mad.lo.s32 	%r46, %r5, %r20, %r45;
	mad.lo.s32 	%r47, %r6, %r19, %r46;
	mad.lo.s32 	%r48, %r7, %r18, %r47;
	mul.wide.s32 	%rd21, %r48, 2;
	add.s64 	%rd32, %rd2, %rd21;
	shl.b32 	%r49, %r21, 10;
	mul.wide.s32 	%rd4, %r49, 2;
	mad.lo.s32 	%r50, %r70, %r26, %r3;
	add.s32 	%r51, %r50, %r4;
	mad.lo.s32 	%r52, %r5, %r25, %r51;
	mad.lo.s32 	%r53, %r6, %r24, %r52;
	mad.lo.s32 	%r54, %r7, %r23, %r53;
	mul.wide.s32 	%rd22, %r54, 2;
	add.s64 	%rd31, %rd1, %rd22;
	shl.b32 	%r55, %r26, 10;
	mul.wide.s32 	%rd6, %r55, 2;

$L__BB43_3:
	.pragma "nounroll";
	ld.global.u16 	%rs1, [%rd32];
	st.global.u16 	[%rd31], %rs1;
	add.s32 	%r70, %r70, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r69, %r69, -1;
	setp.ne.s32 	%p3, %r69, 0;
	@%p3 bra 	$L__BB43_3;

$L__BB43_4:
	setp.lt.u32 	%p4, %r9, 3072;
	@%p4 bra 	$L__BB43_7;

	mad.lo.s32 	%r56, %r70, %r26, %r3;
	add.s32 	%r57, %r56, %r4;
	mad.lo.s32 	%r58, %r5, %r25, %r57;
	mad.lo.s32 	%r59, %r6, %r24, %r58;
	mad.lo.s32 	%r60, %r7, %r23, %r59;
	mad.lo.s32 	%r61, %r70, %r21, %r1;
	add.s32 	%r62, %r61, %r2;
	mad.lo.s32 	%r63, %r5, %r20, %r62;
	mad.lo.s32 	%r64, %r6, %r19, %r63;
	mad.lo.s32 	%r65, %r7, %r18, %r64;
	mul.wide.s32 	%rd23, %r65, 2;
	add.s64 	%rd33, %rd2, %rd23;
	shl.b32 	%r66, %r21, 10;
	mul.wide.s32 	%rd12, %r66, 2;
	mul.wide.s32 	%rd24, %r60, 2;
	add.s64 	%rd34, %rd1, %rd24;
	shl.b32 	%r67, %r26, 10;
	mul.wide.s32 	%rd14, %r67, 2;

$L__BB43_6:
	ld.global.u16 	%rs2, [%rd33];
	st.global.u16 	[%rd34], %rs2;
	add.s64 	%rd25, %rd33, %rd12;
	ld.global.u16 	%rs3, [%rd25];
	add.s64 	%rd26, %rd34, %rd14;
	st.global.u16 	[%rd26], %rs3;
	add.s64 	%rd27, %rd25, %rd12;
	ld.global.u16 	%rs4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u16 	[%rd28], %rs4;
	add.s64 	%rd29, %rd27, %rd12;
	add.s64 	%rd33, %rd29, %rd12;
	ld.global.u16 	%rs5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd34, %rd30, %rd14;
	st.global.u16 	[%rd30], %rs5;
	add.s32 	%r70, %r70, 4096;
	setp.lt.s32 	%p5, %r70, %r22;
	@%p5 bra 	$L__BB43_6;

$L__BB43_7:
	ret;

}
	// .globl	cast_f16_bool
.visible .entry cast_f16_bool(
	.param .u64 cast_f16_bool_param_0,
	.param .u64 cast_f16_bool_param_1,
	.param .u32 cast_f16_bool_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_f16_bool_param_0];
	ld.param.u64 	%rd2, [cast_f16_bool_param_1];
	ld.param.u32 	%r2, [cast_f16_bool_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB44_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 2;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u16 	%rs1, [%rd6];
	and.b16  	%rs2, %rs1, 32767;
	setp.ne.s16 	%p2, %rs2, 0;
	selp.u16 	%rs3, 1, 0, %p2;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u8 	[%rd8], %rs3;

$L__BB44_2:
	ret;

}
	// .globl	cast_f16_f32
.visible .entry cast_f16_f32(
	.param .u64 cast_f16_f32_param_0,
	.param .u64 cast_f16_f32_param_1,
	.param .u32 cast_f16_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_f16_f32_param_0];
	ld.param.u64 	%rd2, [cast_f16_f32_param_1];
	ld.param.u32 	%r2, [cast_f16_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB45_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u16 	%rs1, [%rd5];
	// begin inline asm
	{  cvt.f32.f16 %f1, %rs1;}

	// end inline asm
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB45_2:
	ret;

}
	// .globl	cast_f16_f16
.visible .entry cast_f16_f16(
	.param .u64 cast_f16_f16_param_0,
	.param .u64 cast_f16_f16_param_1,
	.param .u32 cast_f16_f16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_f16_f16_param_0];
	ld.param.u64 	%rd2, [cast_f16_f16_param_1];
	ld.param.u32 	%r2, [cast_f16_f16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB46_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u16 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u16 	[%rd7], %rs1;

$L__BB46_2:
	ret;

}
	// .globl	cast_f16_u8
.visible .entry cast_f16_u8(
	.param .u64 cast_f16_u8_param_0,
	.param .u64 cast_f16_u8_param_1,
	.param .u32 cast_f16_u8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_f16_u8_param_0];
	ld.param.u64 	%rd2, [cast_f16_u8_param_1];
	ld.param.u32 	%r2, [cast_f16_u8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB47_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 2;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u16 	%rs1, [%rd6];
	// begin inline asm
	cvt.rzi.u8.f16 %r6, %rs1;
	// end inline asm
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u8 	[%rd8], %r6;

$L__BB47_2:
	ret;

}
	// .globl	cast_f16_u16
.visible .entry cast_f16_u16(
	.param .u64 cast_f16_u16_param_0,
	.param .u64 cast_f16_u16_param_1,
	.param .u32 cast_f16_u16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_f16_u16_param_0];
	ld.param.u64 	%rd2, [cast_f16_u16_param_1];
	ld.param.u32 	%r2, [cast_f16_u16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB48_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u16 	%rs2, [%rd5];
	// begin inline asm
	cvt.rzi.u16.f16 %rs1, %rs2;
	// end inline asm
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u16 	[%rd7], %rs1;

$L__BB48_2:
	ret;

}
	// .globl	cast_f16_u32
.visible .entry cast_f16_u32(
	.param .u64 cast_f16_u32_param_0,
	.param .u64 cast_f16_u32_param_1,
	.param .u32 cast_f16_u32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_f16_u32_param_0];
	ld.param.u64 	%rd2, [cast_f16_u32_param_1];
	ld.param.u32 	%r2, [cast_f16_u32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB49_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u16 	%rs1, [%rd5];
	// begin inline asm
	cvt.rzi.u32.f16 %r6, %rs1;
	// end inline asm
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u32 	[%rd8], %r6;

$L__BB49_2:
	ret;

}
	// .globl	cast_f16_u64
.visible .entry cast_f16_u64(
	.param .u64 cast_f16_u64_param_0,
	.param .u64 cast_f16_u64_param_1,
	.param .u32 cast_f16_u64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_f16_u64_param_0];
	ld.param.u64 	%rd2, [cast_f16_u64_param_1];
	ld.param.u32 	%r2, [cast_f16_u64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB50_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 2;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u16 	%rs1, [%rd6];
	// begin inline asm
	cvt.rzi.u64.f16 %rd3, %rs1;
	// end inline asm
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u64 	[%rd9], %rd3;

$L__BB50_2:
	ret;

}
	// .globl	cast_f16_i8
.visible .entry cast_f16_i8(
	.param .u64 cast_f16_i8_param_0,
	.param .u64 cast_f16_i8_param_1,
	.param .u32 cast_f16_i8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_f16_i8_param_0];
	ld.param.u64 	%rd2, [cast_f16_i8_param_1];
	ld.param.u32 	%r2, [cast_f16_i8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB51_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 2;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u16 	%rs1, [%rd6];
	// begin inline asm
	cvt.rzi.s8.f16 %r6, %rs1;
	// end inline asm
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u8 	[%rd8], %r6;

$L__BB51_2:
	ret;

}
	// .globl	cast_f16_i16
.visible .entry cast_f16_i16(
	.param .u64 cast_f16_i16_param_0,
	.param .u64 cast_f16_i16_param_1,
	.param .u32 cast_f16_i16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_f16_i16_param_0];
	ld.param.u64 	%rd2, [cast_f16_i16_param_1];
	ld.param.u32 	%r2, [cast_f16_i16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB52_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u16 	%rs2, [%rd5];
	// begin inline asm
	cvt.rzi.s16.f16 %rs1, %rs2;
	// end inline asm
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u16 	[%rd7], %rs1;

$L__BB52_2:
	ret;

}
	// .globl	cast_f16_i32
.visible .entry cast_f16_i32(
	.param .u64 cast_f16_i32_param_0,
	.param .u64 cast_f16_i32_param_1,
	.param .u32 cast_f16_i32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_f16_i32_param_0];
	ld.param.u64 	%rd2, [cast_f16_i32_param_1];
	ld.param.u32 	%r2, [cast_f16_i32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB53_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u16 	%rs1, [%rd5];
	// begin inline asm
	cvt.rzi.s32.f16 %r6, %rs1;
	// end inline asm
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u32 	[%rd8], %r6;

$L__BB53_2:
	ret;

}
	// .globl	cast_f16_i64
.visible .entry cast_f16_i64(
	.param .u64 cast_f16_i64_param_0,
	.param .u64 cast_f16_i64_param_1,
	.param .u32 cast_f16_i64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_f16_i64_param_0];
	ld.param.u64 	%rd2, [cast_f16_i64_param_1];
	ld.param.u32 	%r2, [cast_f16_i64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB54_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 2;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u16 	%rs1, [%rd6];
	// begin inline asm
	cvt.rzi.s64.f16 %rd3, %rs1;
	// end inline asm
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u64 	[%rd9], %rd3;

$L__BB54_2:
	ret;

}
	// .globl	rotate_half_nd2_f16
.visible .entry rotate_half_nd2_f16(
	.param .u64 rotate_half_nd2_f16_param_0,
	.param .u64 rotate_half_nd2_f16_param_1,
	.param .u32 rotate_half_nd2_f16_param_2,
	.param .u32 rotate_half_nd2_f16_param_3,
	.param .u32 rotate_half_nd2_f16_param_4,
	.param .u32 rotate_half_nd2_f16_param_5
)
{
	.reg .b16 	%rs<4>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [rotate_half_nd2_f16_param_0];
	ld.param.u64 	%rd2, [rotate_half_nd2_f16_param_1];
	ld.param.u32 	%r1, [rotate_half_nd2_f16_param_4];
	ld.param.u32 	%r2, [rotate_half_nd2_f16_param_5];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ctaid.y;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %tid.y;
	mad.lo.s32 	%r10, %r7, %r8, %r9;
	ld.param.u32 	%r11, [rotate_half_nd2_f16_param_3];
	shr.u32 	%r12, %r11, 31;
	add.s32 	%r13, %r11, %r12;
	shr.s32 	%r14, %r13, 1;
	add.s32 	%r15, %r14, %r6;
	mul.lo.s32 	%r16, %r10, %r1;
	mad.lo.s32 	%r17, %r15, %r2, %r16;
	mad.lo.s32 	%r18, %r6, %r2, %r16;
	mul.wide.s32 	%rd5, %r17, 2;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u16 	%rs2, [%rd6];
	// begin inline asm
	{neg.f16 %rs1,%rs2;
}
	// end inline asm
	mul.wide.s32 	%rd7, %r18, 2;
	add.s64 	%rd8, %rd3, %rd7;
	st.global.u16 	[%rd8], %rs1;
	add.s64 	%rd9, %rd4, %rd7;
	ld.global.u16 	%rs3, [%rd9];
	add.s64 	%rd10, %rd3, %rd5;
	st.global.u16 	[%rd10], %rs3;
	ret;

}
	// .globl	copy_unicast_i8
.visible .entry copy_unicast_i8(
	.param .u64 copy_unicast_i8_param_0,
	.param .u64 copy_unicast_i8_param_1,
	.param .u32 copy_unicast_i8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [copy_unicast_i8_param_0];
	ld.param.u64 	%rd2, [copy_unicast_i8_param_1];
	ld.param.u32 	%r2, [copy_unicast_i8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB56_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u8 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u8 	[%rd7], %rs1;

$L__BB56_2:
	ret;

}
	// .globl	copy_nd1_i8
.visible .entry copy_nd1_i8(
	.param .u64 copy_nd1_i8_param_0,
	.param .u64 copy_nd1_i8_param_1,
	.param .u32 copy_nd1_i8_param_2,
	.param .u32 copy_nd1_i8_param_3,
	.param .u32 copy_nd1_i8_param_4
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<38>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd31, [copy_nd1_i8_param_0];
	ld.param.u64 	%rd32, [copy_nd1_i8_param_1];
	ld.param.u32 	%r11, [copy_nd1_i8_param_2];
	ld.param.u32 	%r12, [copy_nd1_i8_param_3];
	ld.param.u32 	%r13, [copy_nd1_i8_param_4];
	cvta.to.global.u64 	%rd1, %rd32;
	cvta.to.global.u64 	%rd49, %rd31;
	mov.u32 	%r36, %tid.x;
	setp.ge.s32 	%p1, %r36, %r12;
	@%p1 bra 	$L__BB57_7;

	not.b32 	%r14, %r36;
	add.s32 	%r2, %r14, %r12;
	shr.u32 	%r15, %r2, 10;
	add.s32 	%r16, %r15, 1;
	and.b32  	%r35, %r16, 3;
	setp.eq.s32 	%p2, %r35, 0;
	@%p2 bra 	$L__BB57_4;

	mul.lo.s32 	%r17, %r36, %r13;
	cvt.s64.s32 	%rd33, %r17;
	add.s64 	%rd44, %rd1, %rd33;
	shl.b32 	%r18, %r13, 10;
	cvt.s64.s32 	%rd4, %r18;
	mul.lo.s32 	%r19, %r36, %r11;
	cvt.s64.s32 	%rd34, %r19;
	add.s64 	%rd43, %rd49, %rd34;
	shl.b32 	%r20, %r11, 10;
	cvt.s64.s32 	%rd6, %r20;

$L__BB57_3:
	.pragma "nounroll";
	ld.global.u8 	%rs1, [%rd43];
	st.global.u8 	[%rd44], %rs1;
	add.s32 	%r36, %r36, 1024;
	add.s64 	%rd44, %rd44, %rd4;
	add.s64 	%rd43, %rd43, %rd6;
	add.s32 	%r35, %r35, -1;
	setp.ne.s32 	%p3, %r35, 0;
	@%p3 bra 	$L__BB57_3;

$L__BB57_4:
	setp.lt.u32 	%p4, %r2, 3072;
	@%p4 bra 	$L__BB57_7;

	add.s32 	%r21, %r36, 1024;
	mul.lo.s32 	%r22, %r11, %r21;
	cvt.s64.s32 	%rd11, %r22;
	shl.b32 	%r23, %r11, 12;
	cvt.s64.s32 	%rd12, %r23;
	add.s32 	%r24, %r36, 2048;
	mul.lo.s32 	%r25, %r11, %r24;
	cvt.s64.s32 	%rd13, %r25;
	add.s32 	%r26, %r36, 3072;
	mul.lo.s32 	%r27, %r11, %r26;
	cvt.s64.s32 	%rd14, %r27;
	mul.lo.s32 	%r28, %r36, %r11;
	cvt.s64.s32 	%rd15, %r28;
	mul.lo.s32 	%r29, %r13, %r21;
	cvt.s64.s32 	%rd35, %r29;
	add.s64 	%rd48, %rd1, %rd35;
	shl.b32 	%r30, %r13, 12;
	cvt.s64.s32 	%rd17, %r30;
	mul.lo.s32 	%r31, %r13, %r24;
	cvt.s64.s32 	%rd36, %r31;
	add.s64 	%rd47, %rd1, %rd36;
	mul.lo.s32 	%r32, %r13, %r26;
	cvt.s64.s32 	%rd37, %r32;
	add.s64 	%rd46, %rd1, %rd37;
	mul.lo.s32 	%r33, %r36, %r13;
	cvt.s64.s32 	%rd38, %r33;
	add.s64 	%rd45, %rd1, %rd38;

$L__BB57_6:
	add.s64 	%rd39, %rd49, %rd15;
	ld.global.u8 	%rs2, [%rd39];
	st.global.u8 	[%rd45], %rs2;
	add.s64 	%rd40, %rd49, %rd11;
	ld.global.u8 	%rs3, [%rd40];
	st.global.u8 	[%rd48], %rs3;
	add.s64 	%rd41, %rd49, %rd13;
	ld.global.u8 	%rs4, [%rd41];
	st.global.u8 	[%rd47], %rs4;
	add.s64 	%rd42, %rd49, %rd14;
	ld.global.u8 	%rs5, [%rd42];
	st.global.u8 	[%rd46], %rs5;
	add.s64 	%rd49, %rd49, %rd12;
	add.s64 	%rd48, %rd48, %rd17;
	add.s64 	%rd47, %rd47, %rd17;
	add.s64 	%rd46, %rd46, %rd17;
	add.s64 	%rd45, %rd45, %rd17;
	add.s32 	%r36, %r36, 4096;
	setp.lt.s32 	%p5, %r36, %r12;
	@%p5 bra 	$L__BB57_6;

$L__BB57_7:
	ret;

}
	// .globl	copy_nd2_i8
.visible .entry copy_nd2_i8(
	.param .u64 copy_nd2_i8_param_0,
	.param .u64 copy_nd2_i8_param_1,
	.param .u32 copy_nd2_i8_param_2,
	.param .u32 copy_nd2_i8_param_3,
	.param .u32 copy_nd2_i8_param_4,
	.param .u32 copy_nd2_i8_param_5,
	.param .u32 copy_nd2_i8_param_6,
	.param .u32 copy_nd2_i8_param_7
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<43>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd31, [copy_nd2_i8_param_0];
	ld.param.u64 	%rd32, [copy_nd2_i8_param_1];
	ld.param.u32 	%r16, [copy_nd2_i8_param_2];
	ld.param.u32 	%r13, [copy_nd2_i8_param_3];
	ld.param.u32 	%r14, [copy_nd2_i8_param_5];
	ld.param.u32 	%r17, [copy_nd2_i8_param_6];
	ld.param.u32 	%r15, [copy_nd2_i8_param_7];
	cvta.to.global.u64 	%rd1, %rd32;
	cvta.to.global.u64 	%rd49, %rd31;
	mov.u32 	%r18, %ctaid.x;
	mul.lo.s32 	%r1, %r18, %r16;
	mul.lo.s32 	%r2, %r18, %r17;
	mov.u32 	%r41, %tid.x;
	setp.ge.s32 	%p1, %r41, %r14;
	@%p1 bra 	$L__BB58_7;

	not.b32 	%r19, %r41;
	add.s32 	%r4, %r19, %r14;
	shr.u32 	%r20, %r4, 10;
	add.s32 	%r21, %r20, 1;
	and.b32  	%r40, %r21, 3;
	setp.eq.s32 	%p2, %r40, 0;
	@%p2 bra 	$L__BB58_4;

	mad.lo.s32 	%r22, %r41, %r15, %r2;
	cvt.s64.s32 	%rd33, %r22;
	add.s64 	%rd44, %rd1, %rd33;
	shl.b32 	%r23, %r15, 10;
	cvt.s64.s32 	%rd4, %r23;
	mad.lo.s32 	%r24, %r41, %r13, %r1;
	cvt.s64.s32 	%rd34, %r24;
	add.s64 	%rd43, %rd49, %rd34;
	shl.b32 	%r25, %r13, 10;
	cvt.s64.s32 	%rd6, %r25;

$L__BB58_3:
	.pragma "nounroll";
	ld.global.u8 	%rs1, [%rd43];
	st.global.u8 	[%rd44], %rs1;
	add.s32 	%r41, %r41, 1024;
	add.s64 	%rd44, %rd44, %rd4;
	add.s64 	%rd43, %rd43, %rd6;
	add.s32 	%r40, %r40, -1;
	setp.ne.s32 	%p3, %r40, 0;
	@%p3 bra 	$L__BB58_3;

$L__BB58_4:
	setp.lt.u32 	%p4, %r4, 3072;
	@%p4 bra 	$L__BB58_7;

	add.s32 	%r26, %r41, 1024;
	mad.lo.s32 	%r27, %r13, %r26, %r1;
	cvt.s64.s32 	%rd11, %r27;
	shl.b32 	%r28, %r13, 12;
	cvt.s64.s32 	%rd12, %r28;
	add.s32 	%r29, %r41, 2048;
	mad.lo.s32 	%r30, %r13, %r29, %r1;
	cvt.s64.s32 	%rd13, %r30;
	add.s32 	%r31, %r41, 3072;
	mad.lo.s32 	%r32, %r13, %r31, %r1;
	cvt.s64.s32 	%rd14, %r32;
	mad.lo.s32 	%r33, %r41, %r13, %r1;
	cvt.s64.s32 	%rd15, %r33;
	mad.lo.s32 	%r34, %r15, %r26, %r2;
	cvt.s64.s32 	%rd35, %r34;
	add.s64 	%rd48, %rd1, %rd35;
	shl.b32 	%r35, %r15, 12;
	cvt.s64.s32 	%rd17, %r35;
	mad.lo.s32 	%r36, %r15, %r29, %r2;
	cvt.s64.s32 	%rd36, %r36;
	add.s64 	%rd47, %rd1, %rd36;
	mad.lo.s32 	%r37, %r15, %r31, %r2;
	cvt.s64.s32 	%rd37, %r37;
	add.s64 	%rd46, %rd1, %rd37;
	mad.lo.s32 	%r38, %r41, %r15, %r2;
	cvt.s64.s32 	%rd38, %r38;
	add.s64 	%rd45, %rd1, %rd38;

$L__BB58_6:
	add.s64 	%rd39, %rd49, %rd15;
	ld.global.u8 	%rs2, [%rd39];
	st.global.u8 	[%rd45], %rs2;
	add.s64 	%rd40, %rd49, %rd11;
	ld.global.u8 	%rs3, [%rd40];
	st.global.u8 	[%rd48], %rs3;
	add.s64 	%rd41, %rd49, %rd13;
	ld.global.u8 	%rs4, [%rd41];
	st.global.u8 	[%rd47], %rs4;
	add.s64 	%rd42, %rd49, %rd14;
	ld.global.u8 	%rs5, [%rd42];
	st.global.u8 	[%rd46], %rs5;
	add.s64 	%rd49, %rd49, %rd12;
	add.s64 	%rd48, %rd48, %rd17;
	add.s64 	%rd47, %rd47, %rd17;
	add.s64 	%rd46, %rd46, %rd17;
	add.s64 	%rd45, %rd45, %rd17;
	add.s32 	%r41, %r41, 4096;
	setp.lt.s32 	%p5, %r41, %r14;
	@%p5 bra 	$L__BB58_6;

$L__BB58_7:
	ret;

}
	// .globl	copy_nd3_i8
.visible .entry copy_nd3_i8(
	.param .u64 copy_nd3_i8_param_0,
	.param .u64 copy_nd3_i8_param_1,
	.param .u32 copy_nd3_i8_param_2,
	.param .u32 copy_nd3_i8_param_3,
	.param .u32 copy_nd3_i8_param_4,
	.param .u32 copy_nd3_i8_param_5,
	.param .u32 copy_nd3_i8_param_6,
	.param .u32 copy_nd3_i8_param_7,
	.param .u32 copy_nd3_i8_param_8,
	.param .u32 copy_nd3_i8_param_9,
	.param .u32 copy_nd3_i8_param_10
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<54>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd31, [copy_nd3_i8_param_0];
	ld.param.u64 	%rd32, [copy_nd3_i8_param_1];
	ld.param.u32 	%r18, [copy_nd3_i8_param_2];
	ld.param.u32 	%r19, [copy_nd3_i8_param_3];
	ld.param.u32 	%r15, [copy_nd3_i8_param_4];
	ld.param.u32 	%r16, [copy_nd3_i8_param_7];
	ld.param.u32 	%r20, [copy_nd3_i8_param_8];
	ld.param.u32 	%r21, [copy_nd3_i8_param_9];
	ld.param.u32 	%r17, [copy_nd3_i8_param_10];
	cvta.to.global.u64 	%rd1, %rd32;
	cvta.to.global.u64 	%rd49, %rd31;
	mov.u32 	%r22, %ctaid.x;
	mul.lo.s32 	%r1, %r22, %r19;
	mov.u32 	%r23, %ctaid.y;
	mul.lo.s32 	%r2, %r23, %r18;
	mul.lo.s32 	%r3, %r22, %r21;
	mul.lo.s32 	%r4, %r23, %r20;
	mov.u32 	%r52, %tid.x;
	setp.ge.s32 	%p1, %r52, %r16;
	@%p1 bra 	$L__BB59_7;

	not.b32 	%r24, %r52;
	add.s32 	%r6, %r24, %r16;
	shr.u32 	%r25, %r6, 10;
	add.s32 	%r26, %r25, 1;
	and.b32  	%r51, %r26, 3;
	setp.eq.s32 	%p2, %r51, 0;
	@%p2 bra 	$L__BB59_4;

	mad.lo.s32 	%r27, %r52, %r17, %r3;
	add.s32 	%r28, %r27, %r4;
	cvt.s64.s32 	%rd33, %r28;
	add.s64 	%rd44, %rd1, %rd33;
	shl.b32 	%r29, %r17, 10;
	cvt.s64.s32 	%rd4, %r29;
	mad.lo.s32 	%r30, %r52, %r15, %r1;
	add.s32 	%r31, %r30, %r2;
	cvt.s64.s32 	%rd34, %r31;
	add.s64 	%rd43, %rd49, %rd34;
	shl.b32 	%r32, %r15, 10;
	cvt.s64.s32 	%rd6, %r32;

$L__BB59_3:
	.pragma "nounroll";
	ld.global.u8 	%rs1, [%rd43];
	st.global.u8 	[%rd44], %rs1;
	add.s32 	%r52, %r52, 1024;
	add.s64 	%rd44, %rd44, %rd4;
	add.s64 	%rd43, %rd43, %rd6;
	add.s32 	%r51, %r51, -1;
	setp.ne.s32 	%p3, %r51, 0;
	@%p3 bra 	$L__BB59_3;

$L__BB59_4:
	setp.lt.u32 	%p4, %r6, 3072;
	@%p4 bra 	$L__BB59_7;

	add.s32 	%r33, %r1, %r2;
	add.s32 	%r34, %r52, 1024;
	mad.lo.s32 	%r35, %r15, %r34, %r33;
	cvt.s64.s32 	%rd11, %r35;
	shl.b32 	%r36, %r15, 12;
	cvt.s64.s32 	%rd12, %r36;
	add.s32 	%r37, %r52, 2048;
	mad.lo.s32 	%r38, %r15, %r37, %r33;
	cvt.s64.s32 	%rd13, %r38;
	add.s32 	%r39, %r52, 3072;
	mad.lo.s32 	%r40, %r15, %r39, %r33;
	cvt.s64.s32 	%rd14, %r40;
	mad.lo.s32 	%r41, %r52, %r15, %r1;
	add.s32 	%r42, %r41, %r2;
	cvt.s64.s32 	%rd15, %r42;
	add.s32 	%r43, %r3, %r4;
	mad.lo.s32 	%r44, %r17, %r34, %r43;
	cvt.s64.s32 	%rd35, %r44;
	add.s64 	%rd48, %rd1, %rd35;
	shl.b32 	%r45, %r17, 12;
	cvt.s64.s32 	%rd17, %r45;
	mad.lo.s32 	%r46, %r17, %r37, %r43;
	cvt.s64.s32 	%rd36, %r46;
	add.s64 	%rd47, %rd1, %rd36;
	mad.lo.s32 	%r47, %r17, %r39, %r43;
	cvt.s64.s32 	%rd37, %r47;
	add.s64 	%rd46, %rd1, %rd37;
	mad.lo.s32 	%r48, %r52, %r17, %r3;
	add.s32 	%r49, %r48, %r4;
	cvt.s64.s32 	%rd38, %r49;
	add.s64 	%rd45, %rd1, %rd38;

$L__BB59_6:
	add.s64 	%rd39, %rd49, %rd15;
	ld.global.u8 	%rs2, [%rd39];
	st.global.u8 	[%rd45], %rs2;
	add.s64 	%rd40, %rd49, %rd11;
	ld.global.u8 	%rs3, [%rd40];
	st.global.u8 	[%rd48], %rs3;
	add.s64 	%rd41, %rd49, %rd13;
	ld.global.u8 	%rs4, [%rd41];
	st.global.u8 	[%rd47], %rs4;
	add.s64 	%rd42, %rd49, %rd14;
	ld.global.u8 	%rs5, [%rd42];
	st.global.u8 	[%rd46], %rs5;
	add.s64 	%rd49, %rd49, %rd12;
	add.s64 	%rd48, %rd48, %rd17;
	add.s64 	%rd47, %rd47, %rd17;
	add.s64 	%rd46, %rd46, %rd17;
	add.s64 	%rd45, %rd45, %rd17;
	add.s32 	%r52, %r52, 4096;
	setp.lt.s32 	%p5, %r52, %r16;
	@%p5 bra 	$L__BB59_6;

$L__BB59_7:
	ret;

}
	// .globl	copy_nd4_i8
.visible .entry copy_nd4_i8(
	.param .u64 copy_nd4_i8_param_0,
	.param .u64 copy_nd4_i8_param_1,
	.param .u32 copy_nd4_i8_param_2,
	.param .u32 copy_nd4_i8_param_3,
	.param .u32 copy_nd4_i8_param_4,
	.param .u32 copy_nd4_i8_param_5,
	.param .u32 copy_nd4_i8_param_6,
	.param .u32 copy_nd4_i8_param_7,
	.param .u32 copy_nd4_i8_param_8,
	.param .u32 copy_nd4_i8_param_9,
	.param .u32 copy_nd4_i8_param_10,
	.param .u32 copy_nd4_i8_param_11,
	.param .u32 copy_nd4_i8_param_12,
	.param .u32 copy_nd4_i8_param_13
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<65>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd31, [copy_nd4_i8_param_0];
	ld.param.u64 	%rd32, [copy_nd4_i8_param_1];
	ld.param.u32 	%r20, [copy_nd4_i8_param_2];
	ld.param.u32 	%r21, [copy_nd4_i8_param_3];
	ld.param.u32 	%r22, [copy_nd4_i8_param_4];
	ld.param.u32 	%r17, [copy_nd4_i8_param_5];
	ld.param.u32 	%r18, [copy_nd4_i8_param_9];
	ld.param.u32 	%r23, [copy_nd4_i8_param_10];
	ld.param.u32 	%r24, [copy_nd4_i8_param_11];
	ld.param.u32 	%r25, [copy_nd4_i8_param_12];
	ld.param.u32 	%r19, [copy_nd4_i8_param_13];
	cvta.to.global.u64 	%rd1, %rd32;
	cvta.to.global.u64 	%rd49, %rd31;
	mov.u32 	%r26, %ctaid.x;
	mul.lo.s32 	%r1, %r26, %r22;
	mov.u32 	%r27, %ctaid.y;
	mul.lo.s32 	%r2, %r27, %r21;
	mov.u32 	%r28, %ctaid.z;
	mul.lo.s32 	%r3, %r28, %r20;
	mul.lo.s32 	%r4, %r26, %r25;
	mul.lo.s32 	%r5, %r27, %r24;
	mul.lo.s32 	%r6, %r28, %r23;
	mov.u32 	%r63, %tid.x;
	setp.ge.s32 	%p1, %r63, %r18;
	@%p1 bra 	$L__BB60_7;

	not.b32 	%r29, %r63;
	add.s32 	%r8, %r29, %r18;
	shr.u32 	%r30, %r8, 10;
	add.s32 	%r31, %r30, 1;
	and.b32  	%r62, %r31, 3;
	setp.eq.s32 	%p2, %r62, 0;
	@%p2 bra 	$L__BB60_4;

	mad.lo.s32 	%r32, %r63, %r19, %r4;
	add.s32 	%r33, %r32, %r5;
	add.s32 	%r34, %r33, %r6;
	cvt.s64.s32 	%rd33, %r34;
	add.s64 	%rd44, %rd1, %rd33;
	shl.b32 	%r35, %r19, 10;
	cvt.s64.s32 	%rd4, %r35;
	mad.lo.s32 	%r36, %r63, %r17, %r1;
	add.s32 	%r37, %r36, %r2;
	add.s32 	%r38, %r37, %r3;
	cvt.s64.s32 	%rd34, %r38;
	add.s64 	%rd43, %rd49, %rd34;
	shl.b32 	%r39, %r17, 10;
	cvt.s64.s32 	%rd6, %r39;

$L__BB60_3:
	.pragma "nounroll";
	ld.global.u8 	%rs1, [%rd43];
	st.global.u8 	[%rd44], %rs1;
	add.s32 	%r63, %r63, 1024;
	add.s64 	%rd44, %rd44, %rd4;
	add.s64 	%rd43, %rd43, %rd6;
	add.s32 	%r62, %r62, -1;
	setp.ne.s32 	%p3, %r62, 0;
	@%p3 bra 	$L__BB60_3;

$L__BB60_4:
	setp.lt.u32 	%p4, %r8, 3072;
	@%p4 bra 	$L__BB60_7;

	add.s32 	%r40, %r1, %r2;
	add.s32 	%r41, %r40, %r3;
	add.s32 	%r42, %r63, 1024;
	mad.lo.s32 	%r43, %r17, %r42, %r41;
	cvt.s64.s32 	%rd11, %r43;
	shl.b32 	%r44, %r17, 12;
	cvt.s64.s32 	%rd12, %r44;
	add.s32 	%r45, %r63, 2048;
	mad.lo.s32 	%r46, %r17, %r45, %r41;
	cvt.s64.s32 	%rd13, %r46;
	add.s32 	%r47, %r63, 3072;
	mad.lo.s32 	%r48, %r17, %r47, %r41;
	cvt.s64.s32 	%rd14, %r48;
	mad.lo.s32 	%r49, %r63, %r17, %r1;
	add.s32 	%r50, %r49, %r2;
	add.s32 	%r51, %r50, %r3;
	cvt.s64.s32 	%rd15, %r51;
	add.s32 	%r52, %r4, %r5;
	add.s32 	%r53, %r52, %r6;
	mad.lo.s32 	%r54, %r19, %r42, %r53;
	cvt.s64.s32 	%rd35, %r54;
	add.s64 	%rd48, %rd1, %rd35;
	shl.b32 	%r55, %r19, 12;
	cvt.s64.s32 	%rd17, %r55;
	mad.lo.s32 	%r56, %r19, %r45, %r53;
	cvt.s64.s32 	%rd36, %r56;
	add.s64 	%rd47, %rd1, %rd36;
	mad.lo.s32 	%r57, %r19, %r47, %r53;
	cvt.s64.s32 	%rd37, %r57;
	add.s64 	%rd46, %rd1, %rd37;
	mad.lo.s32 	%r58, %r63, %r19, %r4;
	add.s32 	%r59, %r58, %r5;
	add.s32 	%r60, %r59, %r6;
	cvt.s64.s32 	%rd38, %r60;
	add.s64 	%rd45, %rd1, %rd38;

$L__BB60_6:
	add.s64 	%rd39, %rd49, %rd15;
	ld.global.u8 	%rs2, [%rd39];
	st.global.u8 	[%rd45], %rs2;
	add.s64 	%rd40, %rd49, %rd11;
	ld.global.u8 	%rs3, [%rd40];
	st.global.u8 	[%rd48], %rs3;
	add.s64 	%rd41, %rd49, %rd13;
	ld.global.u8 	%rs4, [%rd41];
	st.global.u8 	[%rd47], %rs4;
	add.s64 	%rd42, %rd49, %rd14;
	ld.global.u8 	%rs5, [%rd42];
	st.global.u8 	[%rd46], %rs5;
	add.s64 	%rd49, %rd49, %rd12;
	add.s64 	%rd48, %rd48, %rd17;
	add.s64 	%rd47, %rd47, %rd17;
	add.s64 	%rd46, %rd46, %rd17;
	add.s64 	%rd45, %rd45, %rd17;
	add.s32 	%r63, %r63, 4096;
	setp.lt.s32 	%p5, %r63, %r18;
	@%p5 bra 	$L__BB60_6;

$L__BB60_7:
	ret;

}
	// .globl	copy_nd5_i8
.visible .entry copy_nd5_i8(
	.param .u64 copy_nd5_i8_param_0,
	.param .u64 copy_nd5_i8_param_1,
	.param .u32 copy_nd5_i8_param_2,
	.param .u32 copy_nd5_i8_param_3,
	.param .u32 copy_nd5_i8_param_4,
	.param .u32 copy_nd5_i8_param_5,
	.param .u32 copy_nd5_i8_param_6,
	.param .u32 copy_nd5_i8_param_7,
	.param .u32 copy_nd5_i8_param_8,
	.param .u32 copy_nd5_i8_param_9,
	.param .u32 copy_nd5_i8_param_10,
	.param .u32 copy_nd5_i8_param_11,
	.param .u32 copy_nd5_i8_param_12,
	.param .u32 copy_nd5_i8_param_13,
	.param .u32 copy_nd5_i8_param_14,
	.param .u32 copy_nd5_i8_param_15,
	.param .u32 copy_nd5_i8_param_16
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<81>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd31, [copy_nd5_i8_param_0];
	ld.param.u64 	%rd32, [copy_nd5_i8_param_1];
	ld.param.u32 	%r17, [copy_nd5_i8_param_2];
	ld.param.u32 	%r18, [copy_nd5_i8_param_3];
	ld.param.u32 	%r24, [copy_nd5_i8_param_4];
	ld.param.u32 	%r25, [copy_nd5_i8_param_5];
	ld.param.u32 	%r19, [copy_nd5_i8_param_6];
	ld.param.u32 	%r26, [copy_nd5_i8_param_7];
	ld.param.u32 	%r27, [copy_nd5_i8_param_8];
	ld.param.u32 	%r20, [copy_nd5_i8_param_11];
	ld.param.u32 	%r21, [copy_nd5_i8_param_12];
	ld.param.u32 	%r22, [copy_nd5_i8_param_13];
	ld.param.u32 	%r28, [copy_nd5_i8_param_14];
	ld.param.u32 	%r29, [copy_nd5_i8_param_15];
	ld.param.u32 	%r23, [copy_nd5_i8_param_16];
	cvta.to.global.u64 	%rd1, %rd32;
	cvta.to.global.u64 	%rd49, %rd31;
	mov.u32 	%r30, %ctaid.x;
	mul.lo.s32 	%r1, %r30, %r25;
	mov.u32 	%r31, %ctaid.y;
	mul.lo.s32 	%r2, %r31, %r24;
	mul.lo.s32 	%r3, %r30, %r29;
	mul.lo.s32 	%r4, %r31, %r28;
	mov.u32 	%r32, %ctaid.z;
	div.s32 	%r33, %r32, %r27;
	mul.lo.s32 	%r34, %r33, %r27;
	sub.s32 	%r5, %r32, %r34;
	rem.s32 	%r6, %r33, %r26;
	mov.u32 	%r79, %tid.x;
	setp.ge.s32 	%p1, %r79, %r20;
	@%p1 bra 	$L__BB61_7;

	not.b32 	%r35, %r79;
	add.s32 	%r8, %r35, %r20;
	shr.u32 	%r36, %r8, 10;
	add.s32 	%r37, %r36, 1;
	and.b32  	%r78, %r37, 3;
	setp.eq.s32 	%p2, %r78, 0;
	@%p2 bra 	$L__BB61_4;

	mad.lo.s32 	%r38, %r79, %r23, %r3;
	add.s32 	%r39, %r38, %r4;
	mad.lo.s32 	%r40, %r5, %r22, %r39;
	mad.lo.s32 	%r41, %r6, %r21, %r40;
	cvt.s64.s32 	%rd33, %r41;
	add.s64 	%rd44, %rd1, %rd33;
	shl.b32 	%r42, %r23, 10;
	cvt.s64.s32 	%rd4, %r42;
	mad.lo.s32 	%r43, %r79, %r19, %r1;
	add.s32 	%r44, %r43, %r2;
	mad.lo.s32 	%r45, %r5, %r18, %r44;
	mad.lo.s32 	%r46, %r6, %r17, %r45;
	cvt.s64.s32 	%rd34, %r46;
	add.s64 	%rd43, %rd49, %rd34;
	shl.b32 	%r47, %r19, 10;
	cvt.s64.s32 	%rd6, %r47;

$L__BB61_3:
	.pragma "nounroll";
	ld.global.u8 	%rs1, [%rd43];
	st.global.u8 	[%rd44], %rs1;
	add.s32 	%r79, %r79, 1024;
	add.s64 	%rd44, %rd44, %rd4;
	add.s64 	%rd43, %rd43, %rd6;
	add.s32 	%r78, %r78, -1;
	setp.ne.s32 	%p3, %r78, 0;
	@%p3 bra 	$L__BB61_3;

$L__BB61_4:
	setp.lt.u32 	%p4, %r8, 3072;
	@%p4 bra 	$L__BB61_7;

	add.s32 	%r48, %r1, %r2;
	mul.lo.s32 	%r49, %r5, %r18;
	add.s32 	%r50, %r48, %r49;
	mul.lo.s32 	%r51, %r6, %r17;
	add.s32 	%r52, %r50, %r51;
	add.s32 	%r53, %r79, 1024;
	mad.lo.s32 	%r54, %r19, %r53, %r52;
	cvt.s64.s32 	%rd11, %r54;
	shl.b32 	%r55, %r19, 12;
	cvt.s64.s32 	%rd12, %r55;
	add.s32 	%r56, %r79, 2048;
	mad.lo.s32 	%r57, %r19, %r56, %r52;
	cvt.s64.s32 	%rd13, %r57;
	add.s32 	%r58, %r79, 3072;
	mad.lo.s32 	%r59, %r19, %r58, %r52;
	cvt.s64.s32 	%rd14, %r59;
	mad.lo.s32 	%r60, %r79, %r19, %r1;
	add.s32 	%r61, %r60, %r2;
	add.s32 	%r62, %r61, %r49;
	add.s32 	%r63, %r62, %r51;
	cvt.s64.s32 	%rd15, %r63;
	mul.lo.s32 	%r64, %r5, %r22;
	add.s32 	%r65, %r3, %r4;
	add.s32 	%r66, %r65, %r64;
	mul.lo.s32 	%r67, %r6, %r21;
	add.s32 	%r68, %r66, %r67;
	mad.lo.s32 	%r69, %r23, %r53, %r68;
	cvt.s64.s32 	%rd35, %r69;
	add.s64 	%rd48, %rd1, %rd35;
	shl.b32 	%r70, %r23, 12;
	cvt.s64.s32 	%rd17, %r70;
	mad.lo.s32 	%r71, %r23, %r56, %r68;
	cvt.s64.s32 	%rd36, %r71;
	add.s64 	%rd47, %rd1, %rd36;
	mad.lo.s32 	%r72, %r23, %r58, %r68;
	cvt.s64.s32 	%rd37, %r72;
	add.s64 	%rd46, %rd1, %rd37;
	mad.lo.s32 	%r73, %r79, %r23, %r3;
	add.s32 	%r74, %r73, %r4;
	add.s32 	%r75, %r74, %r64;
	add.s32 	%r76, %r75, %r67;
	cvt.s64.s32 	%rd38, %r76;
	add.s64 	%rd45, %rd1, %rd38;

$L__BB61_6:
	add.s64 	%rd39, %rd49, %rd15;
	ld.global.u8 	%rs2, [%rd39];
	st.global.u8 	[%rd45], %rs2;
	add.s64 	%rd40, %rd49, %rd11;
	ld.global.u8 	%rs3, [%rd40];
	st.global.u8 	[%rd48], %rs3;
	add.s64 	%rd41, %rd49, %rd13;
	ld.global.u8 	%rs4, [%rd41];
	st.global.u8 	[%rd47], %rs4;
	add.s64 	%rd42, %rd49, %rd14;
	ld.global.u8 	%rs5, [%rd42];
	st.global.u8 	[%rd46], %rs5;
	add.s64 	%rd49, %rd49, %rd12;
	add.s64 	%rd48, %rd48, %rd17;
	add.s64 	%rd47, %rd47, %rd17;
	add.s64 	%rd46, %rd46, %rd17;
	add.s64 	%rd45, %rd45, %rd17;
	add.s32 	%r79, %r79, 4096;
	setp.lt.s32 	%p5, %r79, %r20;
	@%p5 bra 	$L__BB61_6;

$L__BB61_7:
	ret;

}
	// .globl	copy_nd6_i8
.visible .entry copy_nd6_i8(
	.param .u64 copy_nd6_i8_param_0,
	.param .u64 copy_nd6_i8_param_1,
	.param .u32 copy_nd6_i8_param_2,
	.param .u32 copy_nd6_i8_param_3,
	.param .u32 copy_nd6_i8_param_4,
	.param .u32 copy_nd6_i8_param_5,
	.param .u32 copy_nd6_i8_param_6,
	.param .u32 copy_nd6_i8_param_7,
	.param .u32 copy_nd6_i8_param_8,
	.param .u32 copy_nd6_i8_param_9,
	.param .u32 copy_nd6_i8_param_10,
	.param .u32 copy_nd6_i8_param_11,
	.param .u32 copy_nd6_i8_param_12,
	.param .u32 copy_nd6_i8_param_13,
	.param .u32 copy_nd6_i8_param_14,
	.param .u32 copy_nd6_i8_param_15,
	.param .u32 copy_nd6_i8_param_16,
	.param .u32 copy_nd6_i8_param_17,
	.param .u32 copy_nd6_i8_param_18,
	.param .u32 copy_nd6_i8_param_19
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<95>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd31, [copy_nd6_i8_param_0];
	ld.param.u64 	%rd32, [copy_nd6_i8_param_1];
	ld.param.u32 	%r18, [copy_nd6_i8_param_2];
	ld.param.u32 	%r19, [copy_nd6_i8_param_3];
	ld.param.u32 	%r20, [copy_nd6_i8_param_4];
	ld.param.u32 	%r27, [copy_nd6_i8_param_5];
	ld.param.u32 	%r28, [copy_nd6_i8_param_6];
	ld.param.u32 	%r21, [copy_nd6_i8_param_7];
	ld.param.u32 	%r29, [copy_nd6_i8_param_8];
	ld.param.u32 	%r30, [copy_nd6_i8_param_9];
	ld.param.u32 	%r31, [copy_nd6_i8_param_10];
	ld.param.u32 	%r22, [copy_nd6_i8_param_13];
	ld.param.u32 	%r23, [copy_nd6_i8_param_14];
	ld.param.u32 	%r24, [copy_nd6_i8_param_15];
	ld.param.u32 	%r25, [copy_nd6_i8_param_16];
	ld.param.u32 	%r32, [copy_nd6_i8_param_17];
	ld.param.u32 	%r33, [copy_nd6_i8_param_18];
	ld.param.u32 	%r26, [copy_nd6_i8_param_19];
	cvta.to.global.u64 	%rd1, %rd32;
	cvta.to.global.u64 	%rd49, %rd31;
	mov.u32 	%r34, %ctaid.x;
	mul.lo.s32 	%r1, %r34, %r28;
	mov.u32 	%r35, %ctaid.y;
	mul.lo.s32 	%r2, %r35, %r27;
	mul.lo.s32 	%r3, %r34, %r33;
	mul.lo.s32 	%r4, %r35, %r32;
	mov.u32 	%r36, %ctaid.z;
	div.s32 	%r37, %r36, %r31;
	mul.lo.s32 	%r38, %r37, %r31;
	sub.s32 	%r5, %r36, %r38;
	div.s32 	%r39, %r37, %r30;
	mul.lo.s32 	%r40, %r39, %r30;
	sub.s32 	%r6, %r37, %r40;
	rem.s32 	%r7, %r39, %r29;
	mov.u32 	%r93, %tid.x;
	setp.ge.s32 	%p1, %r93, %r22;
	@%p1 bra 	$L__BB62_7;

	not.b32 	%r41, %r93;
	add.s32 	%r9, %r41, %r22;
	shr.u32 	%r42, %r9, 10;
	add.s32 	%r43, %r42, 1;
	and.b32  	%r92, %r43, 3;
	setp.eq.s32 	%p2, %r92, 0;
	@%p2 bra 	$L__BB62_4;

	mad.lo.s32 	%r44, %r93, %r26, %r3;
	add.s32 	%r45, %r44, %r4;
	mad.lo.s32 	%r46, %r5, %r25, %r45;
	mad.lo.s32 	%r47, %r6, %r24, %r46;
	mad.lo.s32 	%r48, %r7, %r23, %r47;
	cvt.s64.s32 	%rd33, %r48;
	add.s64 	%rd44, %rd1, %rd33;
	shl.b32 	%r49, %r26, 10;
	cvt.s64.s32 	%rd4, %r49;
	mad.lo.s32 	%r50, %r93, %r21, %r1;
	add.s32 	%r51, %r50, %r2;
	mad.lo.s32 	%r52, %r5, %r20, %r51;
	mad.lo.s32 	%r53, %r6, %r19, %r52;
	mad.lo.s32 	%r54, %r7, %r18, %r53;
	cvt.s64.s32 	%rd34, %r54;
	add.s64 	%rd43, %rd49, %rd34;
	shl.b32 	%r55, %r21, 10;
	cvt.s64.s32 	%rd6, %r55;

$L__BB62_3:
	.pragma "nounroll";
	ld.global.u8 	%rs1, [%rd43];
	st.global.u8 	[%rd44], %rs1;
	add.s32 	%r93, %r93, 1024;
	add.s64 	%rd44, %rd44, %rd4;
	add.s64 	%rd43, %rd43, %rd6;
	add.s32 	%r92, %r92, -1;
	setp.ne.s32 	%p3, %r92, 0;
	@%p3 bra 	$L__BB62_3;

$L__BB62_4:
	setp.lt.u32 	%p4, %r9, 3072;
	@%p4 bra 	$L__BB62_7;

	add.s32 	%r56, %r1, %r2;
	mul.lo.s32 	%r57, %r5, %r20;
	add.s32 	%r58, %r56, %r57;
	mul.lo.s32 	%r59, %r6, %r19;
	add.s32 	%r60, %r58, %r59;
	mul.lo.s32 	%r61, %r7, %r18;
	add.s32 	%r62, %r60, %r61;
	add.s32 	%r63, %r93, 1024;
	mad.lo.s32 	%r64, %r21, %r63, %r62;
	cvt.s64.s32 	%rd11, %r64;
	shl.b32 	%r65, %r21, 12;
	cvt.s64.s32 	%rd12, %r65;
	add.s32 	%r66, %r93, 2048;
	mad.lo.s32 	%r67, %r21, %r66, %r62;
	cvt.s64.s32 	%rd13, %r67;
	add.s32 	%r68, %r93, 3072;
	mad.lo.s32 	%r69, %r21, %r68, %r62;
	cvt.s64.s32 	%rd14, %r69;
	mad.lo.s32 	%r70, %r93, %r21, %r1;
	add.s32 	%r71, %r70, %r2;
	add.s32 	%r72, %r71, %r57;
	add.s32 	%r73, %r72, %r59;
	add.s32 	%r74, %r73, %r61;
	cvt.s64.s32 	%rd15, %r74;
	mul.lo.s32 	%r75, %r5, %r25;
	add.s32 	%r76, %r3, %r4;
	add.s32 	%r77, %r76, %r75;
	mul.lo.s32 	%r78, %r6, %r24;
	add.s32 	%r79, %r77, %r78;
	mul.lo.s32 	%r80, %r7, %r23;
	add.s32 	%r81, %r79, %r80;
	mad.lo.s32 	%r82, %r26, %r63, %r81;
	cvt.s64.s32 	%rd35, %r82;
	add.s64 	%rd48, %rd1, %rd35;
	shl.b32 	%r83, %r26, 12;
	cvt.s64.s32 	%rd17, %r83;
	mad.lo.s32 	%r84, %r26, %r66, %r81;
	cvt.s64.s32 	%rd36, %r84;
	add.s64 	%rd47, %rd1, %rd36;
	mad.lo.s32 	%r85, %r26, %r68, %r81;
	cvt.s64.s32 	%rd37, %r85;
	add.s64 	%rd46, %rd1, %rd37;
	mad.lo.s32 	%r86, %r93, %r26, %r3;
	add.s32 	%r87, %r86, %r4;
	add.s32 	%r88, %r87, %r75;
	add.s32 	%r89, %r88, %r78;
	add.s32 	%r90, %r89, %r80;
	cvt.s64.s32 	%rd38, %r90;
	add.s64 	%rd45, %rd1, %rd38;

$L__BB62_6:
	add.s64 	%rd39, %rd49, %rd15;
	ld.global.u8 	%rs2, [%rd39];
	st.global.u8 	[%rd45], %rs2;
	add.s64 	%rd40, %rd49, %rd11;
	ld.global.u8 	%rs3, [%rd40];
	st.global.u8 	[%rd48], %rs3;
	add.s64 	%rd41, %rd49, %rd13;
	ld.global.u8 	%rs4, [%rd41];
	st.global.u8 	[%rd47], %rs4;
	add.s64 	%rd42, %rd49, %rd14;
	ld.global.u8 	%rs5, [%rd42];
	st.global.u8 	[%rd46], %rs5;
	add.s64 	%rd49, %rd49, %rd12;
	add.s64 	%rd48, %rd48, %rd17;
	add.s64 	%rd47, %rd47, %rd17;
	add.s64 	%rd46, %rd46, %rd17;
	add.s64 	%rd45, %rd45, %rd17;
	add.s32 	%r93, %r93, 4096;
	setp.lt.s32 	%p5, %r93, %r22;
	@%p5 bra 	$L__BB62_6;

$L__BB62_7:
	ret;

}
	// .globl	cast_i8_bool
.visible .entry cast_i8_bool(
	.param .u64 cast_i8_bool_param_0,
	.param .u64 cast_i8_bool_param_1,
	.param .u32 cast_i8_bool_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_i8_bool_param_0];
	ld.param.u64 	%rd2, [cast_i8_bool_param_1];
	ld.param.u32 	%r2, [cast_i8_bool_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB63_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u8 	%rs1, [%rd5];
	setp.ne.s16 	%p2, %rs1, 0;
	selp.u16 	%rs2, 1, 0, %p2;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u8 	[%rd7], %rs2;

$L__BB63_2:
	ret;

}
	// .globl	cast_i8_f32
.visible .entry cast_i8_f32(
	.param .u64 cast_i8_f32_param_0,
	.param .u64 cast_i8_f32_param_1,
	.param .u32 cast_i8_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_i8_f32_param_0];
	ld.param.u64 	%rd2, [cast_i8_f32_param_1];
	ld.param.u32 	%r2, [cast_i8_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB64_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.s8 	%rs1, [%rd5];
	cvt.rn.f32.s16 	%f1, %rs1;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB64_2:
	ret;

}
	// .globl	cast_i8_f16
.visible .entry cast_i8_f16(
	.param .u64 cast_i8_f16_param_0,
	.param .u64 cast_i8_f16_param_1,
	.param .u32 cast_i8_f16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_i8_f16_param_0];
	ld.param.u64 	%rd2, [cast_i8_f16_param_1];
	ld.param.u32 	%r2, [cast_i8_f16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB65_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.s8 	%r6, [%rd5];
	// begin inline asm
	cvt.rn.f16.s32 %rs1, %r6;
	// end inline asm
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 2;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u16 	[%rd8], %rs1;

$L__BB65_2:
	ret;

}
	// .globl	cast_i8_u8
.visible .entry cast_i8_u8(
	.param .u64 cast_i8_u8_param_0,
	.param .u64 cast_i8_u8_param_1,
	.param .u32 cast_i8_u8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_i8_u8_param_0];
	ld.param.u64 	%rd2, [cast_i8_u8_param_1];
	ld.param.u32 	%r2, [cast_i8_u8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB66_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u8 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u8 	[%rd7], %rs1;

$L__BB66_2:
	ret;

}
	// .globl	cast_i8_u16
.visible .entry cast_i8_u16(
	.param .u64 cast_i8_u16_param_0,
	.param .u64 cast_i8_u16_param_1,
	.param .u32 cast_i8_u16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_i8_u16_param_0];
	ld.param.u64 	%rd2, [cast_i8_u16_param_1];
	ld.param.u32 	%r2, [cast_i8_u16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB67_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.s8 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 2;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u16 	[%rd8], %rs1;

$L__BB67_2:
	ret;

}
	// .globl	cast_i8_u32
.visible .entry cast_i8_u32(
	.param .u64 cast_i8_u32_param_0,
	.param .u64 cast_i8_u32_param_1,
	.param .u32 cast_i8_u32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_i8_u32_param_0];
	ld.param.u64 	%rd2, [cast_i8_u32_param_1];
	ld.param.u32 	%r2, [cast_i8_u32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB68_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.s8 	%r6, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u32 	[%rd8], %r6;

$L__BB68_2:
	ret;

}
	// .globl	cast_i8_u64
.visible .entry cast_i8_u64(
	.param .u64 cast_i8_u64_param_0,
	.param .u64 cast_i8_u64_param_1,
	.param .u32 cast_i8_u64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_i8_u64_param_0];
	ld.param.u64 	%rd2, [cast_i8_u64_param_1];
	ld.param.u32 	%r2, [cast_i8_u64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB69_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.s8 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u64 	[%rd9], %rd6;

$L__BB69_2:
	ret;

}
	// .globl	cast_i8_i8
.visible .entry cast_i8_i8(
	.param .u64 cast_i8_i8_param_0,
	.param .u64 cast_i8_i8_param_1,
	.param .u32 cast_i8_i8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_i8_i8_param_0];
	ld.param.u64 	%rd2, [cast_i8_i8_param_1];
	ld.param.u32 	%r2, [cast_i8_i8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB70_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u8 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u8 	[%rd7], %rs1;

$L__BB70_2:
	ret;

}
	// .globl	cast_i8_i16
.visible .entry cast_i8_i16(
	.param .u64 cast_i8_i16_param_0,
	.param .u64 cast_i8_i16_param_1,
	.param .u32 cast_i8_i16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_i8_i16_param_0];
	ld.param.u64 	%rd2, [cast_i8_i16_param_1];
	ld.param.u32 	%r2, [cast_i8_i16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB71_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.s8 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 2;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u16 	[%rd8], %rs1;

$L__BB71_2:
	ret;

}
	// .globl	cast_i8_i32
.visible .entry cast_i8_i32(
	.param .u64 cast_i8_i32_param_0,
	.param .u64 cast_i8_i32_param_1,
	.param .u32 cast_i8_i32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_i8_i32_param_0];
	ld.param.u64 	%rd2, [cast_i8_i32_param_1];
	ld.param.u32 	%r2, [cast_i8_i32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB72_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.s8 	%r6, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u32 	[%rd8], %r6;

$L__BB72_2:
	ret;

}
	// .globl	cast_i8_i64
.visible .entry cast_i8_i64(
	.param .u64 cast_i8_i64_param_0,
	.param .u64 cast_i8_i64_param_1,
	.param .u32 cast_i8_i64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_i8_i64_param_0];
	ld.param.u64 	%rd2, [cast_i8_i64_param_1];
	ld.param.u32 	%r2, [cast_i8_i64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB73_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.s8 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u64 	[%rd9], %rd6;

$L__BB73_2:
	ret;

}
	// .globl	rotate_half_nd2_i8
.visible .entry rotate_half_nd2_i8(
	.param .u64 rotate_half_nd2_i8_param_0,
	.param .u64 rotate_half_nd2_i8_param_1,
	.param .u32 rotate_half_nd2_i8_param_2,
	.param .u32 rotate_half_nd2_i8_param_3,
	.param .u32 rotate_half_nd2_i8_param_4,
	.param .u32 rotate_half_nd2_i8_param_5
)
{
	.reg .b16 	%rs<4>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [rotate_half_nd2_i8_param_0];
	ld.param.u64 	%rd2, [rotate_half_nd2_i8_param_1];
	ld.param.u32 	%r1, [rotate_half_nd2_i8_param_4];
	ld.param.u32 	%r2, [rotate_half_nd2_i8_param_5];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ctaid.y;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %tid.y;
	mad.lo.s32 	%r10, %r7, %r8, %r9;
	ld.param.u32 	%r11, [rotate_half_nd2_i8_param_3];
	shr.u32 	%r12, %r11, 31;
	add.s32 	%r13, %r11, %r12;
	shr.s32 	%r14, %r13, 1;
	add.s32 	%r15, %r14, %r6;
	mul.lo.s32 	%r16, %r10, %r1;
	mad.lo.s32 	%r17, %r15, %r2, %r16;
	mad.lo.s32 	%r18, %r6, %r2, %r16;
	cvt.s64.s32 	%rd5, %r17;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u8 	%rs1, [%rd6];
	neg.s16 	%rs2, %rs1;
	cvt.s64.s32 	%rd7, %r18;
	add.s64 	%rd8, %rd3, %rd7;
	st.global.u8 	[%rd8], %rs2;
	add.s64 	%rd9, %rd4, %rd7;
	ld.global.u8 	%rs3, [%rd9];
	add.s64 	%rd10, %rd3, %rd5;
	st.global.u8 	[%rd10], %rs3;
	ret;

}
	// .globl	copy_unicast_i16
.visible .entry copy_unicast_i16(
	.param .u64 copy_unicast_i16_param_0,
	.param .u64 copy_unicast_i16_param_1,
	.param .u32 copy_unicast_i16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [copy_unicast_i16_param_0];
	ld.param.u64 	%rd2, [copy_unicast_i16_param_1];
	ld.param.u32 	%r2, [copy_unicast_i16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB75_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u16 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u16 	[%rd7], %rs1;

$L__BB75_2:
	ret;

}
	// .globl	copy_nd1_i16
.visible .entry copy_nd1_i16(
	.param .u64 copy_nd1_i16_param_0,
	.param .u64 copy_nd1_i16_param_1,
	.param .u32 copy_nd1_i16_param_2,
	.param .u32 copy_nd1_i16_param_3,
	.param .u32 copy_nd1_i16_param_4
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<29>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd1_i16_param_0];
	ld.param.u64 	%rd20, [copy_nd1_i16_param_1];
	ld.param.u32 	%r11, [copy_nd1_i16_param_2];
	ld.param.u32 	%r12, [copy_nd1_i16_param_3];
	ld.param.u32 	%r13, [copy_nd1_i16_param_4];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r27, %tid.x;
	setp.ge.s32 	%p1, %r27, %r12;
	@%p1 bra 	$L__BB76_7;

	not.b32 	%r14, %r27;
	add.s32 	%r2, %r14, %r12;
	shr.u32 	%r15, %r2, 10;
	add.s32 	%r16, %r15, 1;
	and.b32  	%r26, %r16, 3;
	setp.eq.s32 	%p2, %r26, 0;
	@%p2 bra 	$L__BB76_4;

	mul.lo.s32 	%r17, %r27, %r13;
	mul.wide.s32 	%rd21, %r17, 2;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r18, %r13, 10;
	mul.wide.s32 	%rd4, %r18, 2;
	mul.lo.s32 	%r19, %r27, %r11;
	mul.wide.s32 	%rd22, %r19, 2;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r20, %r11, 10;
	mul.wide.s32 	%rd6, %r20, 2;

$L__BB76_3:
	.pragma "nounroll";
	ld.global.u16 	%rs1, [%rd31];
	st.global.u16 	[%rd32], %rs1;
	add.s32 	%r27, %r27, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r26, %r26, -1;
	setp.ne.s32 	%p3, %r26, 0;
	@%p3 bra 	$L__BB76_3;

$L__BB76_4:
	setp.lt.u32 	%p4, %r2, 3072;
	@%p4 bra 	$L__BB76_7;

	mul.lo.s32 	%r21, %r27, %r11;
	mul.lo.s32 	%r22, %r27, %r13;
	mul.wide.s32 	%rd23, %r22, 2;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r21, 2;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r23, %r11, 10;
	mul.wide.s32 	%rd13, %r23, 2;
	shl.b32 	%r24, %r13, 10;
	mul.wide.s32 	%rd14, %r24, 2;

$L__BB76_6:
	ld.global.u16 	%rs2, [%rd34];
	st.global.u16 	[%rd33], %rs2;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u16 	%rs3, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u16 	[%rd26], %rs3;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u16 	%rs4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u16 	[%rd28], %rs4;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u16 	%rs5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u16 	[%rd30], %rs5;
	add.s32 	%r27, %r27, 4096;
	setp.lt.s32 	%p5, %r27, %r12;
	@%p5 bra 	$L__BB76_6;

$L__BB76_7:
	ret;

}
	// .globl	copy_nd2_i16
.visible .entry copy_nd2_i16(
	.param .u64 copy_nd2_i16_param_0,
	.param .u64 copy_nd2_i16_param_1,
	.param .u32 copy_nd2_i16_param_2,
	.param .u32 copy_nd2_i16_param_3,
	.param .u32 copy_nd2_i16_param_4,
	.param .u32 copy_nd2_i16_param_5,
	.param .u32 copy_nd2_i16_param_6,
	.param .u32 copy_nd2_i16_param_7
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<34>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd2_i16_param_0];
	ld.param.u64 	%rd20, [copy_nd2_i16_param_1];
	ld.param.u32 	%r16, [copy_nd2_i16_param_2];
	ld.param.u32 	%r13, [copy_nd2_i16_param_3];
	ld.param.u32 	%r14, [copy_nd2_i16_param_5];
	ld.param.u32 	%r17, [copy_nd2_i16_param_6];
	ld.param.u32 	%r15, [copy_nd2_i16_param_7];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r18, %ctaid.x;
	mul.lo.s32 	%r1, %r18, %r16;
	mul.lo.s32 	%r2, %r18, %r17;
	mov.u32 	%r32, %tid.x;
	setp.ge.s32 	%p1, %r32, %r14;
	@%p1 bra 	$L__BB77_7;

	not.b32 	%r19, %r32;
	add.s32 	%r4, %r19, %r14;
	shr.u32 	%r20, %r4, 10;
	add.s32 	%r21, %r20, 1;
	and.b32  	%r31, %r21, 3;
	setp.eq.s32 	%p2, %r31, 0;
	@%p2 bra 	$L__BB77_4;

	mad.lo.s32 	%r22, %r32, %r15, %r2;
	mul.wide.s32 	%rd21, %r22, 2;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r23, %r15, 10;
	mul.wide.s32 	%rd4, %r23, 2;
	mad.lo.s32 	%r24, %r32, %r13, %r1;
	mul.wide.s32 	%rd22, %r24, 2;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r25, %r13, 10;
	mul.wide.s32 	%rd6, %r25, 2;

$L__BB77_3:
	.pragma "nounroll";
	ld.global.u16 	%rs1, [%rd31];
	st.global.u16 	[%rd32], %rs1;
	add.s32 	%r32, %r32, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r31, %r31, -1;
	setp.ne.s32 	%p3, %r31, 0;
	@%p3 bra 	$L__BB77_3;

$L__BB77_4:
	setp.lt.u32 	%p4, %r4, 3072;
	@%p4 bra 	$L__BB77_7;

	mad.lo.s32 	%r26, %r32, %r13, %r1;
	mad.lo.s32 	%r27, %r32, %r15, %r2;
	mul.wide.s32 	%rd23, %r27, 2;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r26, 2;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r28, %r13, 10;
	mul.wide.s32 	%rd13, %r28, 2;
	shl.b32 	%r29, %r15, 10;
	mul.wide.s32 	%rd14, %r29, 2;

$L__BB77_6:
	ld.global.u16 	%rs2, [%rd34];
	st.global.u16 	[%rd33], %rs2;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u16 	%rs3, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u16 	[%rd26], %rs3;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u16 	%rs4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u16 	[%rd28], %rs4;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u16 	%rs5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u16 	[%rd30], %rs5;
	add.s32 	%r32, %r32, 4096;
	setp.lt.s32 	%p5, %r32, %r14;
	@%p5 bra 	$L__BB77_6;

$L__BB77_7:
	ret;

}
	// .globl	copy_nd3_i16
.visible .entry copy_nd3_i16(
	.param .u64 copy_nd3_i16_param_0,
	.param .u64 copy_nd3_i16_param_1,
	.param .u32 copy_nd3_i16_param_2,
	.param .u32 copy_nd3_i16_param_3,
	.param .u32 copy_nd3_i16_param_4,
	.param .u32 copy_nd3_i16_param_5,
	.param .u32 copy_nd3_i16_param_6,
	.param .u32 copy_nd3_i16_param_7,
	.param .u32 copy_nd3_i16_param_8,
	.param .u32 copy_nd3_i16_param_9,
	.param .u32 copy_nd3_i16_param_10
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<43>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd3_i16_param_0];
	ld.param.u64 	%rd20, [copy_nd3_i16_param_1];
	ld.param.u32 	%r18, [copy_nd3_i16_param_2];
	ld.param.u32 	%r19, [copy_nd3_i16_param_3];
	ld.param.u32 	%r15, [copy_nd3_i16_param_4];
	ld.param.u32 	%r16, [copy_nd3_i16_param_7];
	ld.param.u32 	%r20, [copy_nd3_i16_param_8];
	ld.param.u32 	%r21, [copy_nd3_i16_param_9];
	ld.param.u32 	%r17, [copy_nd3_i16_param_10];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r22, %ctaid.x;
	mul.lo.s32 	%r1, %r22, %r19;
	mov.u32 	%r23, %ctaid.y;
	mul.lo.s32 	%r2, %r23, %r18;
	mul.lo.s32 	%r3, %r22, %r21;
	mul.lo.s32 	%r4, %r23, %r20;
	mov.u32 	%r41, %tid.x;
	setp.ge.s32 	%p1, %r41, %r16;
	@%p1 bra 	$L__BB78_7;

	not.b32 	%r24, %r41;
	add.s32 	%r6, %r24, %r16;
	shr.u32 	%r25, %r6, 10;
	add.s32 	%r26, %r25, 1;
	and.b32  	%r40, %r26, 3;
	setp.eq.s32 	%p2, %r40, 0;
	@%p2 bra 	$L__BB78_4;

	mad.lo.s32 	%r27, %r41, %r17, %r3;
	add.s32 	%r28, %r27, %r4;
	mul.wide.s32 	%rd21, %r28, 2;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r29, %r17, 10;
	mul.wide.s32 	%rd4, %r29, 2;
	mad.lo.s32 	%r30, %r41, %r15, %r1;
	add.s32 	%r31, %r30, %r2;
	mul.wide.s32 	%rd22, %r31, 2;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r32, %r15, 10;
	mul.wide.s32 	%rd6, %r32, 2;

$L__BB78_3:
	.pragma "nounroll";
	ld.global.u16 	%rs1, [%rd31];
	st.global.u16 	[%rd32], %rs1;
	add.s32 	%r41, %r41, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r40, %r40, -1;
	setp.ne.s32 	%p3, %r40, 0;
	@%p3 bra 	$L__BB78_3;

$L__BB78_4:
	setp.lt.u32 	%p4, %r6, 3072;
	@%p4 bra 	$L__BB78_7;

	mad.lo.s32 	%r33, %r41, %r15, %r1;
	add.s32 	%r34, %r33, %r2;
	mad.lo.s32 	%r35, %r41, %r17, %r3;
	add.s32 	%r36, %r35, %r4;
	mul.wide.s32 	%rd23, %r36, 2;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r34, 2;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r37, %r15, 10;
	mul.wide.s32 	%rd13, %r37, 2;
	shl.b32 	%r38, %r17, 10;
	mul.wide.s32 	%rd14, %r38, 2;

$L__BB78_6:
	ld.global.u16 	%rs2, [%rd34];
	st.global.u16 	[%rd33], %rs2;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u16 	%rs3, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u16 	[%rd26], %rs3;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u16 	%rs4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u16 	[%rd28], %rs4;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u16 	%rs5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u16 	[%rd30], %rs5;
	add.s32 	%r41, %r41, 4096;
	setp.lt.s32 	%p5, %r41, %r16;
	@%p5 bra 	$L__BB78_6;

$L__BB78_7:
	ret;

}
	// .globl	copy_nd4_i16
.visible .entry copy_nd4_i16(
	.param .u64 copy_nd4_i16_param_0,
	.param .u64 copy_nd4_i16_param_1,
	.param .u32 copy_nd4_i16_param_2,
	.param .u32 copy_nd4_i16_param_3,
	.param .u32 copy_nd4_i16_param_4,
	.param .u32 copy_nd4_i16_param_5,
	.param .u32 copy_nd4_i16_param_6,
	.param .u32 copy_nd4_i16_param_7,
	.param .u32 copy_nd4_i16_param_8,
	.param .u32 copy_nd4_i16_param_9,
	.param .u32 copy_nd4_i16_param_10,
	.param .u32 copy_nd4_i16_param_11,
	.param .u32 copy_nd4_i16_param_12,
	.param .u32 copy_nd4_i16_param_13
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<52>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd4_i16_param_0];
	ld.param.u64 	%rd20, [copy_nd4_i16_param_1];
	ld.param.u32 	%r20, [copy_nd4_i16_param_2];
	ld.param.u32 	%r21, [copy_nd4_i16_param_3];
	ld.param.u32 	%r22, [copy_nd4_i16_param_4];
	ld.param.u32 	%r17, [copy_nd4_i16_param_5];
	ld.param.u32 	%r18, [copy_nd4_i16_param_9];
	ld.param.u32 	%r23, [copy_nd4_i16_param_10];
	ld.param.u32 	%r24, [copy_nd4_i16_param_11];
	ld.param.u32 	%r25, [copy_nd4_i16_param_12];
	ld.param.u32 	%r19, [copy_nd4_i16_param_13];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r26, %ctaid.x;
	mul.lo.s32 	%r1, %r26, %r22;
	mov.u32 	%r27, %ctaid.y;
	mul.lo.s32 	%r2, %r27, %r21;
	mov.u32 	%r28, %ctaid.z;
	mul.lo.s32 	%r3, %r28, %r20;
	mul.lo.s32 	%r4, %r26, %r25;
	mul.lo.s32 	%r5, %r27, %r24;
	mul.lo.s32 	%r6, %r28, %r23;
	mov.u32 	%r50, %tid.x;
	setp.ge.s32 	%p1, %r50, %r18;
	@%p1 bra 	$L__BB79_7;

	not.b32 	%r29, %r50;
	add.s32 	%r8, %r29, %r18;
	shr.u32 	%r30, %r8, 10;
	add.s32 	%r31, %r30, 1;
	and.b32  	%r49, %r31, 3;
	setp.eq.s32 	%p2, %r49, 0;
	@%p2 bra 	$L__BB79_4;

	mad.lo.s32 	%r32, %r50, %r19, %r4;
	add.s32 	%r33, %r32, %r5;
	add.s32 	%r34, %r33, %r6;
	mul.wide.s32 	%rd21, %r34, 2;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r35, %r19, 10;
	mul.wide.s32 	%rd4, %r35, 2;
	mad.lo.s32 	%r36, %r50, %r17, %r1;
	add.s32 	%r37, %r36, %r2;
	add.s32 	%r38, %r37, %r3;
	mul.wide.s32 	%rd22, %r38, 2;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r39, %r17, 10;
	mul.wide.s32 	%rd6, %r39, 2;

$L__BB79_3:
	.pragma "nounroll";
	ld.global.u16 	%rs1, [%rd31];
	st.global.u16 	[%rd32], %rs1;
	add.s32 	%r50, %r50, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r49, %r49, -1;
	setp.ne.s32 	%p3, %r49, 0;
	@%p3 bra 	$L__BB79_3;

$L__BB79_4:
	setp.lt.u32 	%p4, %r8, 3072;
	@%p4 bra 	$L__BB79_7;

	mad.lo.s32 	%r40, %r50, %r17, %r1;
	add.s32 	%r41, %r40, %r2;
	add.s32 	%r42, %r41, %r3;
	mad.lo.s32 	%r43, %r50, %r19, %r4;
	add.s32 	%r44, %r43, %r5;
	add.s32 	%r45, %r44, %r6;
	mul.wide.s32 	%rd23, %r45, 2;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r42, 2;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r46, %r17, 10;
	mul.wide.s32 	%rd13, %r46, 2;
	shl.b32 	%r47, %r19, 10;
	mul.wide.s32 	%rd14, %r47, 2;

$L__BB79_6:
	ld.global.u16 	%rs2, [%rd34];
	st.global.u16 	[%rd33], %rs2;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u16 	%rs3, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u16 	[%rd26], %rs3;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u16 	%rs4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u16 	[%rd28], %rs4;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u16 	%rs5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u16 	[%rd30], %rs5;
	add.s32 	%r50, %r50, 4096;
	setp.lt.s32 	%p5, %r50, %r18;
	@%p5 bra 	$L__BB79_6;

$L__BB79_7:
	ret;

}
	// .globl	copy_nd5_i16
.visible .entry copy_nd5_i16(
	.param .u64 copy_nd5_i16_param_0,
	.param .u64 copy_nd5_i16_param_1,
	.param .u32 copy_nd5_i16_param_2,
	.param .u32 copy_nd5_i16_param_3,
	.param .u32 copy_nd5_i16_param_4,
	.param .u32 copy_nd5_i16_param_5,
	.param .u32 copy_nd5_i16_param_6,
	.param .u32 copy_nd5_i16_param_7,
	.param .u32 copy_nd5_i16_param_8,
	.param .u32 copy_nd5_i16_param_9,
	.param .u32 copy_nd5_i16_param_10,
	.param .u32 copy_nd5_i16_param_11,
	.param .u32 copy_nd5_i16_param_12,
	.param .u32 copy_nd5_i16_param_13,
	.param .u32 copy_nd5_i16_param_14,
	.param .u32 copy_nd5_i16_param_15,
	.param .u32 copy_nd5_i16_param_16
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<62>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd5_i16_param_0];
	ld.param.u64 	%rd20, [copy_nd5_i16_param_1];
	ld.param.u32 	%r17, [copy_nd5_i16_param_2];
	ld.param.u32 	%r18, [copy_nd5_i16_param_3];
	ld.param.u32 	%r24, [copy_nd5_i16_param_4];
	ld.param.u32 	%r25, [copy_nd5_i16_param_5];
	ld.param.u32 	%r19, [copy_nd5_i16_param_6];
	ld.param.u32 	%r26, [copy_nd5_i16_param_7];
	ld.param.u32 	%r27, [copy_nd5_i16_param_8];
	ld.param.u32 	%r20, [copy_nd5_i16_param_11];
	ld.param.u32 	%r21, [copy_nd5_i16_param_12];
	ld.param.u32 	%r22, [copy_nd5_i16_param_13];
	ld.param.u32 	%r28, [copy_nd5_i16_param_14];
	ld.param.u32 	%r29, [copy_nd5_i16_param_15];
	ld.param.u32 	%r23, [copy_nd5_i16_param_16];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r30, %ctaid.x;
	mul.lo.s32 	%r1, %r30, %r25;
	mov.u32 	%r31, %ctaid.y;
	mul.lo.s32 	%r2, %r31, %r24;
	mul.lo.s32 	%r3, %r30, %r29;
	mul.lo.s32 	%r4, %r31, %r28;
	mov.u32 	%r32, %ctaid.z;
	div.s32 	%r33, %r32, %r27;
	mul.lo.s32 	%r34, %r33, %r27;
	sub.s32 	%r5, %r32, %r34;
	rem.s32 	%r6, %r33, %r26;
	mov.u32 	%r60, %tid.x;
	setp.ge.s32 	%p1, %r60, %r20;
	@%p1 bra 	$L__BB80_7;

	not.b32 	%r35, %r60;
	add.s32 	%r8, %r35, %r20;
	shr.u32 	%r36, %r8, 10;
	add.s32 	%r37, %r36, 1;
	and.b32  	%r59, %r37, 3;
	setp.eq.s32 	%p2, %r59, 0;
	@%p2 bra 	$L__BB80_4;

	mad.lo.s32 	%r38, %r60, %r23, %r3;
	add.s32 	%r39, %r38, %r4;
	mad.lo.s32 	%r40, %r5, %r22, %r39;
	mad.lo.s32 	%r41, %r6, %r21, %r40;
	mul.wide.s32 	%rd21, %r41, 2;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r42, %r23, 10;
	mul.wide.s32 	%rd4, %r42, 2;
	mad.lo.s32 	%r43, %r60, %r19, %r1;
	add.s32 	%r44, %r43, %r2;
	mad.lo.s32 	%r45, %r5, %r18, %r44;
	mad.lo.s32 	%r46, %r6, %r17, %r45;
	mul.wide.s32 	%rd22, %r46, 2;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r47, %r19, 10;
	mul.wide.s32 	%rd6, %r47, 2;

$L__BB80_3:
	.pragma "nounroll";
	ld.global.u16 	%rs1, [%rd31];
	st.global.u16 	[%rd32], %rs1;
	add.s32 	%r60, %r60, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r59, %r59, -1;
	setp.ne.s32 	%p3, %r59, 0;
	@%p3 bra 	$L__BB80_3;

$L__BB80_4:
	setp.lt.u32 	%p4, %r8, 3072;
	@%p4 bra 	$L__BB80_7;

	mad.lo.s32 	%r48, %r60, %r19, %r1;
	add.s32 	%r49, %r48, %r2;
	mad.lo.s32 	%r50, %r5, %r18, %r49;
	mad.lo.s32 	%r51, %r6, %r17, %r50;
	mad.lo.s32 	%r52, %r60, %r23, %r3;
	add.s32 	%r53, %r52, %r4;
	mad.lo.s32 	%r54, %r5, %r22, %r53;
	mad.lo.s32 	%r55, %r6, %r21, %r54;
	mul.wide.s32 	%rd23, %r55, 2;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r51, 2;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r56, %r19, 10;
	mul.wide.s32 	%rd13, %r56, 2;
	shl.b32 	%r57, %r23, 10;
	mul.wide.s32 	%rd14, %r57, 2;

$L__BB80_6:
	ld.global.u16 	%rs2, [%rd34];
	st.global.u16 	[%rd33], %rs2;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u16 	%rs3, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u16 	[%rd26], %rs3;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u16 	%rs4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u16 	[%rd28], %rs4;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u16 	%rs5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u16 	[%rd30], %rs5;
	add.s32 	%r60, %r60, 4096;
	setp.lt.s32 	%p5, %r60, %r20;
	@%p5 bra 	$L__BB80_6;

$L__BB80_7:
	ret;

}
	// .globl	copy_nd6_i16
.visible .entry copy_nd6_i16(
	.param .u64 copy_nd6_i16_param_0,
	.param .u64 copy_nd6_i16_param_1,
	.param .u32 copy_nd6_i16_param_2,
	.param .u32 copy_nd6_i16_param_3,
	.param .u32 copy_nd6_i16_param_4,
	.param .u32 copy_nd6_i16_param_5,
	.param .u32 copy_nd6_i16_param_6,
	.param .u32 copy_nd6_i16_param_7,
	.param .u32 copy_nd6_i16_param_8,
	.param .u32 copy_nd6_i16_param_9,
	.param .u32 copy_nd6_i16_param_10,
	.param .u32 copy_nd6_i16_param_11,
	.param .u32 copy_nd6_i16_param_12,
	.param .u32 copy_nd6_i16_param_13,
	.param .u32 copy_nd6_i16_param_14,
	.param .u32 copy_nd6_i16_param_15,
	.param .u32 copy_nd6_i16_param_16,
	.param .u32 copy_nd6_i16_param_17,
	.param .u32 copy_nd6_i16_param_18,
	.param .u32 copy_nd6_i16_param_19
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<72>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd6_i16_param_0];
	ld.param.u64 	%rd20, [copy_nd6_i16_param_1];
	ld.param.u32 	%r18, [copy_nd6_i16_param_2];
	ld.param.u32 	%r19, [copy_nd6_i16_param_3];
	ld.param.u32 	%r20, [copy_nd6_i16_param_4];
	ld.param.u32 	%r27, [copy_nd6_i16_param_5];
	ld.param.u32 	%r28, [copy_nd6_i16_param_6];
	ld.param.u32 	%r21, [copy_nd6_i16_param_7];
	ld.param.u32 	%r29, [copy_nd6_i16_param_8];
	ld.param.u32 	%r30, [copy_nd6_i16_param_9];
	ld.param.u32 	%r31, [copy_nd6_i16_param_10];
	ld.param.u32 	%r22, [copy_nd6_i16_param_13];
	ld.param.u32 	%r23, [copy_nd6_i16_param_14];
	ld.param.u32 	%r24, [copy_nd6_i16_param_15];
	ld.param.u32 	%r25, [copy_nd6_i16_param_16];
	ld.param.u32 	%r32, [copy_nd6_i16_param_17];
	ld.param.u32 	%r33, [copy_nd6_i16_param_18];
	ld.param.u32 	%r26, [copy_nd6_i16_param_19];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r34, %ctaid.x;
	mul.lo.s32 	%r1, %r34, %r28;
	mov.u32 	%r35, %ctaid.y;
	mul.lo.s32 	%r2, %r35, %r27;
	mul.lo.s32 	%r3, %r34, %r33;
	mul.lo.s32 	%r4, %r35, %r32;
	mov.u32 	%r36, %ctaid.z;
	div.s32 	%r37, %r36, %r31;
	mul.lo.s32 	%r38, %r37, %r31;
	sub.s32 	%r5, %r36, %r38;
	div.s32 	%r39, %r37, %r30;
	mul.lo.s32 	%r40, %r39, %r30;
	sub.s32 	%r6, %r37, %r40;
	rem.s32 	%r7, %r39, %r29;
	mov.u32 	%r70, %tid.x;
	setp.ge.s32 	%p1, %r70, %r22;
	@%p1 bra 	$L__BB81_7;

	not.b32 	%r41, %r70;
	add.s32 	%r9, %r41, %r22;
	shr.u32 	%r42, %r9, 10;
	add.s32 	%r43, %r42, 1;
	and.b32  	%r69, %r43, 3;
	setp.eq.s32 	%p2, %r69, 0;
	@%p2 bra 	$L__BB81_4;

	mad.lo.s32 	%r44, %r70, %r26, %r3;
	add.s32 	%r45, %r44, %r4;
	mad.lo.s32 	%r46, %r5, %r25, %r45;
	mad.lo.s32 	%r47, %r6, %r24, %r46;
	mad.lo.s32 	%r48, %r7, %r23, %r47;
	mul.wide.s32 	%rd21, %r48, 2;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r49, %r26, 10;
	mul.wide.s32 	%rd4, %r49, 2;
	mad.lo.s32 	%r50, %r70, %r21, %r1;
	add.s32 	%r51, %r50, %r2;
	mad.lo.s32 	%r52, %r5, %r20, %r51;
	mad.lo.s32 	%r53, %r6, %r19, %r52;
	mad.lo.s32 	%r54, %r7, %r18, %r53;
	mul.wide.s32 	%rd22, %r54, 2;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r55, %r21, 10;
	mul.wide.s32 	%rd6, %r55, 2;

$L__BB81_3:
	.pragma "nounroll";
	ld.global.u16 	%rs1, [%rd31];
	st.global.u16 	[%rd32], %rs1;
	add.s32 	%r70, %r70, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r69, %r69, -1;
	setp.ne.s32 	%p3, %r69, 0;
	@%p3 bra 	$L__BB81_3;

$L__BB81_4:
	setp.lt.u32 	%p4, %r9, 3072;
	@%p4 bra 	$L__BB81_7;

	mad.lo.s32 	%r56, %r70, %r21, %r1;
	add.s32 	%r57, %r56, %r2;
	mad.lo.s32 	%r58, %r5, %r20, %r57;
	mad.lo.s32 	%r59, %r6, %r19, %r58;
	mad.lo.s32 	%r60, %r7, %r18, %r59;
	mad.lo.s32 	%r61, %r70, %r26, %r3;
	add.s32 	%r62, %r61, %r4;
	mad.lo.s32 	%r63, %r5, %r25, %r62;
	mad.lo.s32 	%r64, %r6, %r24, %r63;
	mad.lo.s32 	%r65, %r7, %r23, %r64;
	mul.wide.s32 	%rd23, %r65, 2;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r60, 2;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r66, %r21, 10;
	mul.wide.s32 	%rd13, %r66, 2;
	shl.b32 	%r67, %r26, 10;
	mul.wide.s32 	%rd14, %r67, 2;

$L__BB81_6:
	ld.global.u16 	%rs2, [%rd34];
	st.global.u16 	[%rd33], %rs2;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u16 	%rs3, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u16 	[%rd26], %rs3;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u16 	%rs4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u16 	[%rd28], %rs4;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u16 	%rs5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u16 	[%rd30], %rs5;
	add.s32 	%r70, %r70, 4096;
	setp.lt.s32 	%p5, %r70, %r22;
	@%p5 bra 	$L__BB81_6;

$L__BB81_7:
	ret;

}
	// .globl	cast_i16_bool
.visible .entry cast_i16_bool(
	.param .u64 cast_i16_bool_param_0,
	.param .u64 cast_i16_bool_param_1,
	.param .u32 cast_i16_bool_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_i16_bool_param_0];
	ld.param.u64 	%rd2, [cast_i16_bool_param_1];
	ld.param.u32 	%r2, [cast_i16_bool_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB82_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 2;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u16 	%rs1, [%rd6];
	setp.ne.s16 	%p2, %rs1, 0;
	selp.u16 	%rs2, 1, 0, %p2;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u8 	[%rd8], %rs2;

$L__BB82_2:
	ret;

}
	// .globl	cast_i16_f32
.visible .entry cast_i16_f32(
	.param .u64 cast_i16_f32_param_0,
	.param .u64 cast_i16_f32_param_1,
	.param .u32 cast_i16_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_i16_f32_param_0];
	ld.param.u64 	%rd2, [cast_i16_f32_param_1];
	ld.param.u32 	%r2, [cast_i16_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB83_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u16 	%rs1, [%rd5];
	cvt.rn.f32.s16 	%f1, %rs1;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB83_2:
	ret;

}
	// .globl	cast_i16_f16
.visible .entry cast_i16_f16(
	.param .u64 cast_i16_f16_param_0,
	.param .u64 cast_i16_f16_param_1,
	.param .u32 cast_i16_f16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_i16_f16_param_0];
	ld.param.u64 	%rd2, [cast_i16_f16_param_1];
	ld.param.u32 	%r2, [cast_i16_f16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB84_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u16 	%rs2, [%rd5];
	// begin inline asm
	cvt.rn.f16.s16 %rs1, %rs2;
	// end inline asm
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u16 	[%rd7], %rs1;

$L__BB84_2:
	ret;

}
	// .globl	cast_i16_u8
.visible .entry cast_i16_u8(
	.param .u64 cast_i16_u8_param_0,
	.param .u64 cast_i16_u8_param_1,
	.param .u32 cast_i16_u8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_i16_u8_param_0];
	ld.param.u64 	%rd2, [cast_i16_u8_param_1];
	ld.param.u32 	%r2, [cast_i16_u8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB85_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 2;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u16 	%rs1, [%rd6];
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u8 	[%rd8], %rs1;

$L__BB85_2:
	ret;

}
	// .globl	cast_i16_u16
.visible .entry cast_i16_u16(
	.param .u64 cast_i16_u16_param_0,
	.param .u64 cast_i16_u16_param_1,
	.param .u32 cast_i16_u16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_i16_u16_param_0];
	ld.param.u64 	%rd2, [cast_i16_u16_param_1];
	ld.param.u32 	%r2, [cast_i16_u16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB86_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u16 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u16 	[%rd7], %rs1;

$L__BB86_2:
	ret;

}
	// .globl	cast_i16_u32
.visible .entry cast_i16_u32(
	.param .u64 cast_i16_u32_param_0,
	.param .u64 cast_i16_u32_param_1,
	.param .u32 cast_i16_u32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_i16_u32_param_0];
	ld.param.u64 	%rd2, [cast_i16_u32_param_1];
	ld.param.u32 	%r2, [cast_i16_u32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB87_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.s16 	%r6, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u32 	[%rd8], %r6;

$L__BB87_2:
	ret;

}
	// .globl	cast_i16_u64
.visible .entry cast_i16_u64(
	.param .u64 cast_i16_u64_param_0,
	.param .u64 cast_i16_u64_param_1,
	.param .u32 cast_i16_u64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_i16_u64_param_0];
	ld.param.u64 	%rd2, [cast_i16_u64_param_1];
	ld.param.u32 	%r2, [cast_i16_u64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB88_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.s16 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u64 	[%rd9], %rd6;

$L__BB88_2:
	ret;

}
	// .globl	cast_i16_i8
.visible .entry cast_i16_i8(
	.param .u64 cast_i16_i8_param_0,
	.param .u64 cast_i16_i8_param_1,
	.param .u32 cast_i16_i8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_i16_i8_param_0];
	ld.param.u64 	%rd2, [cast_i16_i8_param_1];
	ld.param.u32 	%r2, [cast_i16_i8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB89_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 2;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u16 	%rs1, [%rd6];
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u8 	[%rd8], %rs1;

$L__BB89_2:
	ret;

}
	// .globl	cast_i16_i16
.visible .entry cast_i16_i16(
	.param .u64 cast_i16_i16_param_0,
	.param .u64 cast_i16_i16_param_1,
	.param .u32 cast_i16_i16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_i16_i16_param_0];
	ld.param.u64 	%rd2, [cast_i16_i16_param_1];
	ld.param.u32 	%r2, [cast_i16_i16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB90_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u16 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u16 	[%rd7], %rs1;

$L__BB90_2:
	ret;

}
	// .globl	cast_i16_i32
.visible .entry cast_i16_i32(
	.param .u64 cast_i16_i32_param_0,
	.param .u64 cast_i16_i32_param_1,
	.param .u32 cast_i16_i32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_i16_i32_param_0];
	ld.param.u64 	%rd2, [cast_i16_i32_param_1];
	ld.param.u32 	%r2, [cast_i16_i32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB91_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.s16 	%r6, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u32 	[%rd8], %r6;

$L__BB91_2:
	ret;

}
	// .globl	cast_i16_i64
.visible .entry cast_i16_i64(
	.param .u64 cast_i16_i64_param_0,
	.param .u64 cast_i16_i64_param_1,
	.param .u32 cast_i16_i64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_i16_i64_param_0];
	ld.param.u64 	%rd2, [cast_i16_i64_param_1];
	ld.param.u32 	%r2, [cast_i16_i64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB92_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.s16 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u64 	[%rd9], %rd6;

$L__BB92_2:
	ret;

}
	// .globl	rotate_half_nd2_i16
.visible .entry rotate_half_nd2_i16(
	.param .u64 rotate_half_nd2_i16_param_0,
	.param .u64 rotate_half_nd2_i16_param_1,
	.param .u32 rotate_half_nd2_i16_param_2,
	.param .u32 rotate_half_nd2_i16_param_3,
	.param .u32 rotate_half_nd2_i16_param_4,
	.param .u32 rotate_half_nd2_i16_param_5
)
{
	.reg .b16 	%rs<4>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [rotate_half_nd2_i16_param_0];
	ld.param.u64 	%rd2, [rotate_half_nd2_i16_param_1];
	ld.param.u32 	%r1, [rotate_half_nd2_i16_param_4];
	ld.param.u32 	%r2, [rotate_half_nd2_i16_param_5];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ctaid.y;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %tid.y;
	mad.lo.s32 	%r10, %r7, %r8, %r9;
	ld.param.u32 	%r11, [rotate_half_nd2_i16_param_3];
	shr.u32 	%r12, %r11, 31;
	add.s32 	%r13, %r11, %r12;
	shr.s32 	%r14, %r13, 1;
	add.s32 	%r15, %r14, %r6;
	mul.lo.s32 	%r16, %r10, %r1;
	mad.lo.s32 	%r17, %r15, %r2, %r16;
	mad.lo.s32 	%r18, %r6, %r2, %r16;
	mul.wide.s32 	%rd5, %r17, 2;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u16 	%rs1, [%rd6];
	neg.s16 	%rs2, %rs1;
	mul.wide.s32 	%rd7, %r18, 2;
	add.s64 	%rd8, %rd3, %rd7;
	st.global.u16 	[%rd8], %rs2;
	add.s64 	%rd9, %rd4, %rd7;
	ld.global.u16 	%rs3, [%rd9];
	add.s64 	%rd10, %rd3, %rd5;
	st.global.u16 	[%rd10], %rs3;
	ret;

}
	// .globl	copy_unicast_i32
.visible .entry copy_unicast_i32(
	.param .u64 copy_unicast_i32_param_0,
	.param .u64 copy_unicast_i32_param_1,
	.param .u32 copy_unicast_i32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [copy_unicast_i32_param_0];
	ld.param.u64 	%rd2, [copy_unicast_i32_param_1];
	ld.param.u32 	%r2, [copy_unicast_i32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB94_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u32 	%r6, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u32 	[%rd7], %r6;

$L__BB94_2:
	ret;

}
	// .globl	copy_nd1_i32
.visible .entry copy_nd1_i32(
	.param .u64 copy_nd1_i32_param_0,
	.param .u64 copy_nd1_i32_param_1,
	.param .u32 copy_nd1_i32_param_2,
	.param .u32 copy_nd1_i32_param_3,
	.param .u32 copy_nd1_i32_param_4
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<34>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd1_i32_param_0];
	ld.param.u64 	%rd20, [copy_nd1_i32_param_1];
	ld.param.u32 	%r11, [copy_nd1_i32_param_2];
	ld.param.u32 	%r12, [copy_nd1_i32_param_3];
	ld.param.u32 	%r13, [copy_nd1_i32_param_4];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r32, %tid.x;
	setp.ge.s32 	%p1, %r32, %r12;
	@%p1 bra 	$L__BB95_7;

	not.b32 	%r14, %r32;
	add.s32 	%r2, %r14, %r12;
	shr.u32 	%r15, %r2, 10;
	add.s32 	%r16, %r15, 1;
	and.b32  	%r31, %r16, 3;
	setp.eq.s32 	%p2, %r31, 0;
	@%p2 bra 	$L__BB95_4;

	mul.lo.s32 	%r17, %r32, %r13;
	mul.wide.s32 	%rd21, %r17, 4;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r18, %r13, 10;
	mul.wide.s32 	%rd4, %r18, 4;
	mul.lo.s32 	%r19, %r32, %r11;
	mul.wide.s32 	%rd22, %r19, 4;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r20, %r11, 10;
	mul.wide.s32 	%rd6, %r20, 4;

$L__BB95_3:
	.pragma "nounroll";
	ld.global.u32 	%r21, [%rd31];
	st.global.u32 	[%rd32], %r21;
	add.s32 	%r32, %r32, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r31, %r31, -1;
	setp.ne.s32 	%p3, %r31, 0;
	@%p3 bra 	$L__BB95_3;

$L__BB95_4:
	setp.lt.u32 	%p4, %r2, 3072;
	@%p4 bra 	$L__BB95_7;

	mul.lo.s32 	%r22, %r32, %r11;
	mul.lo.s32 	%r23, %r32, %r13;
	mul.wide.s32 	%rd23, %r23, 4;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r22, 4;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r24, %r11, 10;
	mul.wide.s32 	%rd13, %r24, 4;
	shl.b32 	%r25, %r13, 10;
	mul.wide.s32 	%rd14, %r25, 4;

$L__BB95_6:
	ld.global.u32 	%r26, [%rd34];
	st.global.u32 	[%rd33], %r26;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u32 	%r27, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u32 	[%rd26], %r27;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u32 	%r28, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u32 	[%rd28], %r28;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u32 	%r29, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u32 	[%rd30], %r29;
	add.s32 	%r32, %r32, 4096;
	setp.lt.s32 	%p5, %r32, %r12;
	@%p5 bra 	$L__BB95_6;

$L__BB95_7:
	ret;

}
	// .globl	copy_nd2_i32
.visible .entry copy_nd2_i32(
	.param .u64 copy_nd2_i32_param_0,
	.param .u64 copy_nd2_i32_param_1,
	.param .u32 copy_nd2_i32_param_2,
	.param .u32 copy_nd2_i32_param_3,
	.param .u32 copy_nd2_i32_param_4,
	.param .u32 copy_nd2_i32_param_5,
	.param .u32 copy_nd2_i32_param_6,
	.param .u32 copy_nd2_i32_param_7
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<39>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd2_i32_param_0];
	ld.param.u64 	%rd20, [copy_nd2_i32_param_1];
	ld.param.u32 	%r16, [copy_nd2_i32_param_2];
	ld.param.u32 	%r13, [copy_nd2_i32_param_3];
	ld.param.u32 	%r14, [copy_nd2_i32_param_5];
	ld.param.u32 	%r17, [copy_nd2_i32_param_6];
	ld.param.u32 	%r15, [copy_nd2_i32_param_7];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r18, %ctaid.x;
	mul.lo.s32 	%r1, %r18, %r16;
	mul.lo.s32 	%r2, %r18, %r17;
	mov.u32 	%r37, %tid.x;
	setp.ge.s32 	%p1, %r37, %r14;
	@%p1 bra 	$L__BB96_7;

	not.b32 	%r19, %r37;
	add.s32 	%r4, %r19, %r14;
	shr.u32 	%r20, %r4, 10;
	add.s32 	%r21, %r20, 1;
	and.b32  	%r36, %r21, 3;
	setp.eq.s32 	%p2, %r36, 0;
	@%p2 bra 	$L__BB96_4;

	mad.lo.s32 	%r22, %r37, %r15, %r2;
	mul.wide.s32 	%rd21, %r22, 4;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r23, %r15, 10;
	mul.wide.s32 	%rd4, %r23, 4;
	mad.lo.s32 	%r24, %r37, %r13, %r1;
	mul.wide.s32 	%rd22, %r24, 4;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r25, %r13, 10;
	mul.wide.s32 	%rd6, %r25, 4;

$L__BB96_3:
	.pragma "nounroll";
	ld.global.u32 	%r26, [%rd31];
	st.global.u32 	[%rd32], %r26;
	add.s32 	%r37, %r37, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r36, %r36, -1;
	setp.ne.s32 	%p3, %r36, 0;
	@%p3 bra 	$L__BB96_3;

$L__BB96_4:
	setp.lt.u32 	%p4, %r4, 3072;
	@%p4 bra 	$L__BB96_7;

	mad.lo.s32 	%r27, %r37, %r13, %r1;
	mad.lo.s32 	%r28, %r37, %r15, %r2;
	mul.wide.s32 	%rd23, %r28, 4;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r27, 4;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r29, %r13, 10;
	mul.wide.s32 	%rd13, %r29, 4;
	shl.b32 	%r30, %r15, 10;
	mul.wide.s32 	%rd14, %r30, 4;

$L__BB96_6:
	ld.global.u32 	%r31, [%rd34];
	st.global.u32 	[%rd33], %r31;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u32 	%r32, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u32 	[%rd26], %r32;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u32 	%r33, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u32 	[%rd28], %r33;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u32 	%r34, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u32 	[%rd30], %r34;
	add.s32 	%r37, %r37, 4096;
	setp.lt.s32 	%p5, %r37, %r14;
	@%p5 bra 	$L__BB96_6;

$L__BB96_7:
	ret;

}
	// .globl	copy_nd3_i32
.visible .entry copy_nd3_i32(
	.param .u64 copy_nd3_i32_param_0,
	.param .u64 copy_nd3_i32_param_1,
	.param .u32 copy_nd3_i32_param_2,
	.param .u32 copy_nd3_i32_param_3,
	.param .u32 copy_nd3_i32_param_4,
	.param .u32 copy_nd3_i32_param_5,
	.param .u32 copy_nd3_i32_param_6,
	.param .u32 copy_nd3_i32_param_7,
	.param .u32 copy_nd3_i32_param_8,
	.param .u32 copy_nd3_i32_param_9,
	.param .u32 copy_nd3_i32_param_10
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<48>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd3_i32_param_0];
	ld.param.u64 	%rd20, [copy_nd3_i32_param_1];
	ld.param.u32 	%r18, [copy_nd3_i32_param_2];
	ld.param.u32 	%r19, [copy_nd3_i32_param_3];
	ld.param.u32 	%r15, [copy_nd3_i32_param_4];
	ld.param.u32 	%r16, [copy_nd3_i32_param_7];
	ld.param.u32 	%r20, [copy_nd3_i32_param_8];
	ld.param.u32 	%r21, [copy_nd3_i32_param_9];
	ld.param.u32 	%r17, [copy_nd3_i32_param_10];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r22, %ctaid.x;
	mul.lo.s32 	%r1, %r22, %r19;
	mov.u32 	%r23, %ctaid.y;
	mul.lo.s32 	%r2, %r23, %r18;
	mul.lo.s32 	%r3, %r22, %r21;
	mul.lo.s32 	%r4, %r23, %r20;
	mov.u32 	%r46, %tid.x;
	setp.ge.s32 	%p1, %r46, %r16;
	@%p1 bra 	$L__BB97_7;

	not.b32 	%r24, %r46;
	add.s32 	%r6, %r24, %r16;
	shr.u32 	%r25, %r6, 10;
	add.s32 	%r26, %r25, 1;
	and.b32  	%r45, %r26, 3;
	setp.eq.s32 	%p2, %r45, 0;
	@%p2 bra 	$L__BB97_4;

	mad.lo.s32 	%r27, %r46, %r17, %r3;
	add.s32 	%r28, %r27, %r4;
	mul.wide.s32 	%rd21, %r28, 4;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r29, %r17, 10;
	mul.wide.s32 	%rd4, %r29, 4;
	mad.lo.s32 	%r30, %r46, %r15, %r1;
	add.s32 	%r31, %r30, %r2;
	mul.wide.s32 	%rd22, %r31, 4;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r32, %r15, 10;
	mul.wide.s32 	%rd6, %r32, 4;

$L__BB97_3:
	.pragma "nounroll";
	ld.global.u32 	%r33, [%rd31];
	st.global.u32 	[%rd32], %r33;
	add.s32 	%r46, %r46, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r45, %r45, -1;
	setp.ne.s32 	%p3, %r45, 0;
	@%p3 bra 	$L__BB97_3;

$L__BB97_4:
	setp.lt.u32 	%p4, %r6, 3072;
	@%p4 bra 	$L__BB97_7;

	mad.lo.s32 	%r34, %r46, %r15, %r1;
	add.s32 	%r35, %r34, %r2;
	mad.lo.s32 	%r36, %r46, %r17, %r3;
	add.s32 	%r37, %r36, %r4;
	mul.wide.s32 	%rd23, %r37, 4;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r35, 4;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r38, %r15, 10;
	mul.wide.s32 	%rd13, %r38, 4;
	shl.b32 	%r39, %r17, 10;
	mul.wide.s32 	%rd14, %r39, 4;

$L__BB97_6:
	ld.global.u32 	%r40, [%rd34];
	st.global.u32 	[%rd33], %r40;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u32 	%r41, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u32 	[%rd26], %r41;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u32 	%r42, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u32 	[%rd28], %r42;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u32 	%r43, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u32 	[%rd30], %r43;
	add.s32 	%r46, %r46, 4096;
	setp.lt.s32 	%p5, %r46, %r16;
	@%p5 bra 	$L__BB97_6;

$L__BB97_7:
	ret;

}
	// .globl	copy_nd4_i32
.visible .entry copy_nd4_i32(
	.param .u64 copy_nd4_i32_param_0,
	.param .u64 copy_nd4_i32_param_1,
	.param .u32 copy_nd4_i32_param_2,
	.param .u32 copy_nd4_i32_param_3,
	.param .u32 copy_nd4_i32_param_4,
	.param .u32 copy_nd4_i32_param_5,
	.param .u32 copy_nd4_i32_param_6,
	.param .u32 copy_nd4_i32_param_7,
	.param .u32 copy_nd4_i32_param_8,
	.param .u32 copy_nd4_i32_param_9,
	.param .u32 copy_nd4_i32_param_10,
	.param .u32 copy_nd4_i32_param_11,
	.param .u32 copy_nd4_i32_param_12,
	.param .u32 copy_nd4_i32_param_13
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<57>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd4_i32_param_0];
	ld.param.u64 	%rd20, [copy_nd4_i32_param_1];
	ld.param.u32 	%r20, [copy_nd4_i32_param_2];
	ld.param.u32 	%r21, [copy_nd4_i32_param_3];
	ld.param.u32 	%r22, [copy_nd4_i32_param_4];
	ld.param.u32 	%r17, [copy_nd4_i32_param_5];
	ld.param.u32 	%r18, [copy_nd4_i32_param_9];
	ld.param.u32 	%r23, [copy_nd4_i32_param_10];
	ld.param.u32 	%r24, [copy_nd4_i32_param_11];
	ld.param.u32 	%r25, [copy_nd4_i32_param_12];
	ld.param.u32 	%r19, [copy_nd4_i32_param_13];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r26, %ctaid.x;
	mul.lo.s32 	%r1, %r26, %r22;
	mov.u32 	%r27, %ctaid.y;
	mul.lo.s32 	%r2, %r27, %r21;
	mov.u32 	%r28, %ctaid.z;
	mul.lo.s32 	%r3, %r28, %r20;
	mul.lo.s32 	%r4, %r26, %r25;
	mul.lo.s32 	%r5, %r27, %r24;
	mul.lo.s32 	%r6, %r28, %r23;
	mov.u32 	%r55, %tid.x;
	setp.ge.s32 	%p1, %r55, %r18;
	@%p1 bra 	$L__BB98_7;

	not.b32 	%r29, %r55;
	add.s32 	%r8, %r29, %r18;
	shr.u32 	%r30, %r8, 10;
	add.s32 	%r31, %r30, 1;
	and.b32  	%r54, %r31, 3;
	setp.eq.s32 	%p2, %r54, 0;
	@%p2 bra 	$L__BB98_4;

	mad.lo.s32 	%r32, %r55, %r19, %r4;
	add.s32 	%r33, %r32, %r5;
	add.s32 	%r34, %r33, %r6;
	mul.wide.s32 	%rd21, %r34, 4;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r35, %r19, 10;
	mul.wide.s32 	%rd4, %r35, 4;
	mad.lo.s32 	%r36, %r55, %r17, %r1;
	add.s32 	%r37, %r36, %r2;
	add.s32 	%r38, %r37, %r3;
	mul.wide.s32 	%rd22, %r38, 4;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r39, %r17, 10;
	mul.wide.s32 	%rd6, %r39, 4;

$L__BB98_3:
	.pragma "nounroll";
	ld.global.u32 	%r40, [%rd31];
	st.global.u32 	[%rd32], %r40;
	add.s32 	%r55, %r55, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r54, %r54, -1;
	setp.ne.s32 	%p3, %r54, 0;
	@%p3 bra 	$L__BB98_3;

$L__BB98_4:
	setp.lt.u32 	%p4, %r8, 3072;
	@%p4 bra 	$L__BB98_7;

	mad.lo.s32 	%r41, %r55, %r17, %r1;
	add.s32 	%r42, %r41, %r2;
	add.s32 	%r43, %r42, %r3;
	mad.lo.s32 	%r44, %r55, %r19, %r4;
	add.s32 	%r45, %r44, %r5;
	add.s32 	%r46, %r45, %r6;
	mul.wide.s32 	%rd23, %r46, 4;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r43, 4;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r47, %r17, 10;
	mul.wide.s32 	%rd13, %r47, 4;
	shl.b32 	%r48, %r19, 10;
	mul.wide.s32 	%rd14, %r48, 4;

$L__BB98_6:
	ld.global.u32 	%r49, [%rd34];
	st.global.u32 	[%rd33], %r49;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u32 	%r50, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u32 	[%rd26], %r50;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u32 	%r51, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u32 	[%rd28], %r51;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u32 	%r52, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u32 	[%rd30], %r52;
	add.s32 	%r55, %r55, 4096;
	setp.lt.s32 	%p5, %r55, %r18;
	@%p5 bra 	$L__BB98_6;

$L__BB98_7:
	ret;

}
	// .globl	copy_nd5_i32
.visible .entry copy_nd5_i32(
	.param .u64 copy_nd5_i32_param_0,
	.param .u64 copy_nd5_i32_param_1,
	.param .u32 copy_nd5_i32_param_2,
	.param .u32 copy_nd5_i32_param_3,
	.param .u32 copy_nd5_i32_param_4,
	.param .u32 copy_nd5_i32_param_5,
	.param .u32 copy_nd5_i32_param_6,
	.param .u32 copy_nd5_i32_param_7,
	.param .u32 copy_nd5_i32_param_8,
	.param .u32 copy_nd5_i32_param_9,
	.param .u32 copy_nd5_i32_param_10,
	.param .u32 copy_nd5_i32_param_11,
	.param .u32 copy_nd5_i32_param_12,
	.param .u32 copy_nd5_i32_param_13,
	.param .u32 copy_nd5_i32_param_14,
	.param .u32 copy_nd5_i32_param_15,
	.param .u32 copy_nd5_i32_param_16
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<67>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd5_i32_param_0];
	ld.param.u64 	%rd20, [copy_nd5_i32_param_1];
	ld.param.u32 	%r17, [copy_nd5_i32_param_2];
	ld.param.u32 	%r18, [copy_nd5_i32_param_3];
	ld.param.u32 	%r24, [copy_nd5_i32_param_4];
	ld.param.u32 	%r25, [copy_nd5_i32_param_5];
	ld.param.u32 	%r19, [copy_nd5_i32_param_6];
	ld.param.u32 	%r26, [copy_nd5_i32_param_7];
	ld.param.u32 	%r27, [copy_nd5_i32_param_8];
	ld.param.u32 	%r20, [copy_nd5_i32_param_11];
	ld.param.u32 	%r21, [copy_nd5_i32_param_12];
	ld.param.u32 	%r22, [copy_nd5_i32_param_13];
	ld.param.u32 	%r28, [copy_nd5_i32_param_14];
	ld.param.u32 	%r29, [copy_nd5_i32_param_15];
	ld.param.u32 	%r23, [copy_nd5_i32_param_16];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r30, %ctaid.x;
	mul.lo.s32 	%r1, %r30, %r25;
	mov.u32 	%r31, %ctaid.y;
	mul.lo.s32 	%r2, %r31, %r24;
	mul.lo.s32 	%r3, %r30, %r29;
	mul.lo.s32 	%r4, %r31, %r28;
	mov.u32 	%r32, %ctaid.z;
	div.s32 	%r33, %r32, %r27;
	mul.lo.s32 	%r34, %r33, %r27;
	sub.s32 	%r5, %r32, %r34;
	rem.s32 	%r6, %r33, %r26;
	mov.u32 	%r65, %tid.x;
	setp.ge.s32 	%p1, %r65, %r20;
	@%p1 bra 	$L__BB99_7;

	not.b32 	%r35, %r65;
	add.s32 	%r8, %r35, %r20;
	shr.u32 	%r36, %r8, 10;
	add.s32 	%r37, %r36, 1;
	and.b32  	%r64, %r37, 3;
	setp.eq.s32 	%p2, %r64, 0;
	@%p2 bra 	$L__BB99_4;

	mad.lo.s32 	%r38, %r65, %r23, %r3;
	add.s32 	%r39, %r38, %r4;
	mad.lo.s32 	%r40, %r5, %r22, %r39;
	mad.lo.s32 	%r41, %r6, %r21, %r40;
	mul.wide.s32 	%rd21, %r41, 4;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r42, %r23, 10;
	mul.wide.s32 	%rd4, %r42, 4;
	mad.lo.s32 	%r43, %r65, %r19, %r1;
	add.s32 	%r44, %r43, %r2;
	mad.lo.s32 	%r45, %r5, %r18, %r44;
	mad.lo.s32 	%r46, %r6, %r17, %r45;
	mul.wide.s32 	%rd22, %r46, 4;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r47, %r19, 10;
	mul.wide.s32 	%rd6, %r47, 4;

$L__BB99_3:
	.pragma "nounroll";
	ld.global.u32 	%r48, [%rd31];
	st.global.u32 	[%rd32], %r48;
	add.s32 	%r65, %r65, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r64, %r64, -1;
	setp.ne.s32 	%p3, %r64, 0;
	@%p3 bra 	$L__BB99_3;

$L__BB99_4:
	setp.lt.u32 	%p4, %r8, 3072;
	@%p4 bra 	$L__BB99_7;

	mad.lo.s32 	%r49, %r65, %r19, %r1;
	add.s32 	%r50, %r49, %r2;
	mad.lo.s32 	%r51, %r5, %r18, %r50;
	mad.lo.s32 	%r52, %r6, %r17, %r51;
	mad.lo.s32 	%r53, %r65, %r23, %r3;
	add.s32 	%r54, %r53, %r4;
	mad.lo.s32 	%r55, %r5, %r22, %r54;
	mad.lo.s32 	%r56, %r6, %r21, %r55;
	mul.wide.s32 	%rd23, %r56, 4;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r52, 4;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r57, %r19, 10;
	mul.wide.s32 	%rd13, %r57, 4;
	shl.b32 	%r58, %r23, 10;
	mul.wide.s32 	%rd14, %r58, 4;

$L__BB99_6:
	ld.global.u32 	%r59, [%rd34];
	st.global.u32 	[%rd33], %r59;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u32 	%r60, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u32 	[%rd26], %r60;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u32 	%r61, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u32 	[%rd28], %r61;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u32 	%r62, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u32 	[%rd30], %r62;
	add.s32 	%r65, %r65, 4096;
	setp.lt.s32 	%p5, %r65, %r20;
	@%p5 bra 	$L__BB99_6;

$L__BB99_7:
	ret;

}
	// .globl	copy_nd6_i32
.visible .entry copy_nd6_i32(
	.param .u64 copy_nd6_i32_param_0,
	.param .u64 copy_nd6_i32_param_1,
	.param .u32 copy_nd6_i32_param_2,
	.param .u32 copy_nd6_i32_param_3,
	.param .u32 copy_nd6_i32_param_4,
	.param .u32 copy_nd6_i32_param_5,
	.param .u32 copy_nd6_i32_param_6,
	.param .u32 copy_nd6_i32_param_7,
	.param .u32 copy_nd6_i32_param_8,
	.param .u32 copy_nd6_i32_param_9,
	.param .u32 copy_nd6_i32_param_10,
	.param .u32 copy_nd6_i32_param_11,
	.param .u32 copy_nd6_i32_param_12,
	.param .u32 copy_nd6_i32_param_13,
	.param .u32 copy_nd6_i32_param_14,
	.param .u32 copy_nd6_i32_param_15,
	.param .u32 copy_nd6_i32_param_16,
	.param .u32 copy_nd6_i32_param_17,
	.param .u32 copy_nd6_i32_param_18,
	.param .u32 copy_nd6_i32_param_19
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<77>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd6_i32_param_0];
	ld.param.u64 	%rd20, [copy_nd6_i32_param_1];
	ld.param.u32 	%r18, [copy_nd6_i32_param_2];
	ld.param.u32 	%r19, [copy_nd6_i32_param_3];
	ld.param.u32 	%r20, [copy_nd6_i32_param_4];
	ld.param.u32 	%r27, [copy_nd6_i32_param_5];
	ld.param.u32 	%r28, [copy_nd6_i32_param_6];
	ld.param.u32 	%r21, [copy_nd6_i32_param_7];
	ld.param.u32 	%r29, [copy_nd6_i32_param_8];
	ld.param.u32 	%r30, [copy_nd6_i32_param_9];
	ld.param.u32 	%r31, [copy_nd6_i32_param_10];
	ld.param.u32 	%r22, [copy_nd6_i32_param_13];
	ld.param.u32 	%r23, [copy_nd6_i32_param_14];
	ld.param.u32 	%r24, [copy_nd6_i32_param_15];
	ld.param.u32 	%r25, [copy_nd6_i32_param_16];
	ld.param.u32 	%r32, [copy_nd6_i32_param_17];
	ld.param.u32 	%r33, [copy_nd6_i32_param_18];
	ld.param.u32 	%r26, [copy_nd6_i32_param_19];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r34, %ctaid.x;
	mul.lo.s32 	%r1, %r34, %r28;
	mov.u32 	%r35, %ctaid.y;
	mul.lo.s32 	%r2, %r35, %r27;
	mul.lo.s32 	%r3, %r34, %r33;
	mul.lo.s32 	%r4, %r35, %r32;
	mov.u32 	%r36, %ctaid.z;
	div.s32 	%r37, %r36, %r31;
	mul.lo.s32 	%r38, %r37, %r31;
	sub.s32 	%r5, %r36, %r38;
	div.s32 	%r39, %r37, %r30;
	mul.lo.s32 	%r40, %r39, %r30;
	sub.s32 	%r6, %r37, %r40;
	rem.s32 	%r7, %r39, %r29;
	mov.u32 	%r75, %tid.x;
	setp.ge.s32 	%p1, %r75, %r22;
	@%p1 bra 	$L__BB100_7;

	not.b32 	%r41, %r75;
	add.s32 	%r9, %r41, %r22;
	shr.u32 	%r42, %r9, 10;
	add.s32 	%r43, %r42, 1;
	and.b32  	%r74, %r43, 3;
	setp.eq.s32 	%p2, %r74, 0;
	@%p2 bra 	$L__BB100_4;

	mad.lo.s32 	%r44, %r75, %r26, %r3;
	add.s32 	%r45, %r44, %r4;
	mad.lo.s32 	%r46, %r5, %r25, %r45;
	mad.lo.s32 	%r47, %r6, %r24, %r46;
	mad.lo.s32 	%r48, %r7, %r23, %r47;
	mul.wide.s32 	%rd21, %r48, 4;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r49, %r26, 10;
	mul.wide.s32 	%rd4, %r49, 4;
	mad.lo.s32 	%r50, %r75, %r21, %r1;
	add.s32 	%r51, %r50, %r2;
	mad.lo.s32 	%r52, %r5, %r20, %r51;
	mad.lo.s32 	%r53, %r6, %r19, %r52;
	mad.lo.s32 	%r54, %r7, %r18, %r53;
	mul.wide.s32 	%rd22, %r54, 4;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r55, %r21, 10;
	mul.wide.s32 	%rd6, %r55, 4;

$L__BB100_3:
	.pragma "nounroll";
	ld.global.u32 	%r56, [%rd31];
	st.global.u32 	[%rd32], %r56;
	add.s32 	%r75, %r75, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r74, %r74, -1;
	setp.ne.s32 	%p3, %r74, 0;
	@%p3 bra 	$L__BB100_3;

$L__BB100_4:
	setp.lt.u32 	%p4, %r9, 3072;
	@%p4 bra 	$L__BB100_7;

	mad.lo.s32 	%r57, %r75, %r21, %r1;
	add.s32 	%r58, %r57, %r2;
	mad.lo.s32 	%r59, %r5, %r20, %r58;
	mad.lo.s32 	%r60, %r6, %r19, %r59;
	mad.lo.s32 	%r61, %r7, %r18, %r60;
	mad.lo.s32 	%r62, %r75, %r26, %r3;
	add.s32 	%r63, %r62, %r4;
	mad.lo.s32 	%r64, %r5, %r25, %r63;
	mad.lo.s32 	%r65, %r6, %r24, %r64;
	mad.lo.s32 	%r66, %r7, %r23, %r65;
	mul.wide.s32 	%rd23, %r66, 4;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r61, 4;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r67, %r21, 10;
	mul.wide.s32 	%rd13, %r67, 4;
	shl.b32 	%r68, %r26, 10;
	mul.wide.s32 	%rd14, %r68, 4;

$L__BB100_6:
	ld.global.u32 	%r69, [%rd34];
	st.global.u32 	[%rd33], %r69;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u32 	%r70, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u32 	[%rd26], %r70;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u32 	%r71, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u32 	[%rd28], %r71;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u32 	%r72, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u32 	[%rd30], %r72;
	add.s32 	%r75, %r75, 4096;
	setp.lt.s32 	%p5, %r75, %r22;
	@%p5 bra 	$L__BB100_6;

$L__BB100_7:
	ret;

}
	// .globl	cast_i32_bool
.visible .entry cast_i32_bool(
	.param .u64 cast_i32_bool_param_0,
	.param .u64 cast_i32_bool_param_1,
	.param .u32 cast_i32_bool_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_i32_bool_param_0];
	ld.param.u64 	%rd2, [cast_i32_bool_param_1];
	ld.param.u32 	%r2, [cast_i32_bool_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB101_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u32 	%r6, [%rd6];
	setp.ne.s32 	%p2, %r6, 0;
	selp.u16 	%rs1, 1, 0, %p2;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u8 	[%rd8], %rs1;

$L__BB101_2:
	ret;

}
	// .globl	cast_i32_f32
.visible .entry cast_i32_f32(
	.param .u64 cast_i32_f32_param_0,
	.param .u64 cast_i32_f32_param_1,
	.param .u32 cast_i32_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_i32_f32_param_0];
	ld.param.u64 	%rd2, [cast_i32_f32_param_1];
	ld.param.u32 	%r2, [cast_i32_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB102_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u32 	%r6, [%rd5];
	cvt.rn.f32.s32 	%f1, %r6;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f1;

$L__BB102_2:
	ret;

}
	// .globl	cast_i32_f16
.visible .entry cast_i32_f16(
	.param .u64 cast_i32_f16_param_0,
	.param .u64 cast_i32_f16_param_1,
	.param .u32 cast_i32_f16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_i32_f16_param_0];
	ld.param.u64 	%rd2, [cast_i32_f16_param_1];
	ld.param.u32 	%r2, [cast_i32_f16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB103_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u32 	%r6, [%rd5];
	// begin inline asm
	cvt.rn.f16.s32 %rs1, %r6;
	// end inline asm
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 2;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u16 	[%rd8], %rs1;

$L__BB103_2:
	ret;

}
	// .globl	cast_i32_u8
.visible .entry cast_i32_u8(
	.param .u64 cast_i32_u8_param_0,
	.param .u64 cast_i32_u8_param_1,
	.param .u32 cast_i32_u8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_i32_u8_param_0];
	ld.param.u64 	%rd2, [cast_i32_u8_param_1];
	ld.param.u32 	%r2, [cast_i32_u8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB104_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u32 	%r6, [%rd6];
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u8 	[%rd8], %r6;

$L__BB104_2:
	ret;

}
	// .globl	cast_i32_u16
.visible .entry cast_i32_u16(
	.param .u64 cast_i32_u16_param_0,
	.param .u64 cast_i32_u16_param_1,
	.param .u32 cast_i32_u16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_i32_u16_param_0];
	ld.param.u64 	%rd2, [cast_i32_u16_param_1];
	ld.param.u32 	%r2, [cast_i32_u16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB105_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u32 	%r6, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 2;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u16 	[%rd8], %r6;

$L__BB105_2:
	ret;

}
	// .globl	cast_i32_u32
.visible .entry cast_i32_u32(
	.param .u64 cast_i32_u32_param_0,
	.param .u64 cast_i32_u32_param_1,
	.param .u32 cast_i32_u32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_i32_u32_param_0];
	ld.param.u64 	%rd2, [cast_i32_u32_param_1];
	ld.param.u32 	%r2, [cast_i32_u32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB106_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u32 	%r6, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u32 	[%rd7], %r6;

$L__BB106_2:
	ret;

}
	// .globl	cast_i32_u64
.visible .entry cast_i32_u64(
	.param .u64 cast_i32_u64_param_0,
	.param .u64 cast_i32_u64_param_1,
	.param .u32 cast_i32_u64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_i32_u64_param_0];
	ld.param.u64 	%rd2, [cast_i32_u64_param_1];
	ld.param.u32 	%r2, [cast_i32_u64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB107_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.s32 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u64 	[%rd9], %rd6;

$L__BB107_2:
	ret;

}
	// .globl	cast_i32_i8
.visible .entry cast_i32_i8(
	.param .u64 cast_i32_i8_param_0,
	.param .u64 cast_i32_i8_param_1,
	.param .u32 cast_i32_i8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_i32_i8_param_0];
	ld.param.u64 	%rd2, [cast_i32_i8_param_1];
	ld.param.u32 	%r2, [cast_i32_i8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB108_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u32 	%r6, [%rd6];
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u8 	[%rd8], %r6;

$L__BB108_2:
	ret;

}
	// .globl	cast_i32_i16
.visible .entry cast_i32_i16(
	.param .u64 cast_i32_i16_param_0,
	.param .u64 cast_i32_i16_param_1,
	.param .u32 cast_i32_i16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_i32_i16_param_0];
	ld.param.u64 	%rd2, [cast_i32_i16_param_1];
	ld.param.u32 	%r2, [cast_i32_i16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB109_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u32 	%r6, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 2;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u16 	[%rd8], %r6;

$L__BB109_2:
	ret;

}
	// .globl	cast_i32_i32
.visible .entry cast_i32_i32(
	.param .u64 cast_i32_i32_param_0,
	.param .u64 cast_i32_i32_param_1,
	.param .u32 cast_i32_i32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_i32_i32_param_0];
	ld.param.u64 	%rd2, [cast_i32_i32_param_1];
	ld.param.u32 	%r2, [cast_i32_i32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB110_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u32 	%r6, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u32 	[%rd7], %r6;

$L__BB110_2:
	ret;

}
	// .globl	cast_i32_i64
.visible .entry cast_i32_i64(
	.param .u64 cast_i32_i64_param_0,
	.param .u64 cast_i32_i64_param_1,
	.param .u32 cast_i32_i64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_i32_i64_param_0];
	ld.param.u64 	%rd2, [cast_i32_i64_param_1];
	ld.param.u32 	%r2, [cast_i32_i64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB111_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.s32 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u64 	[%rd9], %rd6;

$L__BB111_2:
	ret;

}
	// .globl	rotate_half_nd2_i32
.visible .entry rotate_half_nd2_i32(
	.param .u64 rotate_half_nd2_i32_param_0,
	.param .u64 rotate_half_nd2_i32_param_1,
	.param .u32 rotate_half_nd2_i32_param_2,
	.param .u32 rotate_half_nd2_i32_param_3,
	.param .u32 rotate_half_nd2_i32_param_4,
	.param .u32 rotate_half_nd2_i32_param_5
)
{
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [rotate_half_nd2_i32_param_0];
	ld.param.u64 	%rd2, [rotate_half_nd2_i32_param_1];
	ld.param.u32 	%r1, [rotate_half_nd2_i32_param_4];
	ld.param.u32 	%r2, [rotate_half_nd2_i32_param_5];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ctaid.y;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %tid.y;
	mad.lo.s32 	%r10, %r7, %r8, %r9;
	ld.param.u32 	%r11, [rotate_half_nd2_i32_param_3];
	shr.u32 	%r12, %r11, 31;
	add.s32 	%r13, %r11, %r12;
	shr.s32 	%r14, %r13, 1;
	add.s32 	%r15, %r14, %r6;
	mul.lo.s32 	%r16, %r10, %r1;
	mad.lo.s32 	%r17, %r15, %r2, %r16;
	mad.lo.s32 	%r18, %r6, %r2, %r16;
	mul.wide.s32 	%rd5, %r17, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u32 	%r19, [%rd6];
	neg.s32 	%r20, %r19;
	mul.wide.s32 	%rd7, %r18, 4;
	add.s64 	%rd8, %rd3, %rd7;
	st.global.u32 	[%rd8], %r20;
	add.s64 	%rd9, %rd4, %rd7;
	ld.global.u32 	%r21, [%rd9];
	add.s64 	%rd10, %rd3, %rd5;
	st.global.u32 	[%rd10], %r21;
	ret;

}
	// .globl	copy_unicast_i64
.visible .entry copy_unicast_i64(
	.param .u64 copy_unicast_i64_param_0,
	.param .u64 copy_unicast_i64_param_1,
	.param .u32 copy_unicast_i64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [copy_unicast_i64_param_0];
	ld.param.u64 	%rd2, [copy_unicast_i64_param_1];
	ld.param.u32 	%r2, [copy_unicast_i64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB113_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u64 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u64 	[%rd8], %rd6;

$L__BB113_2:
	ret;

}
	// .globl	copy_nd1_i64
.visible .entry copy_nd1_i64(
	.param .u64 copy_nd1_i64_param_0,
	.param .u64 copy_nd1_i64_param_1,
	.param .u32 copy_nd1_i64_param_2,
	.param .u32 copy_nd1_i64_param_3,
	.param .u32 copy_nd1_i64_param_4
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<29>;
	.reg .b64 	%rd<40>;


	ld.param.u64 	%rd19, [copy_nd1_i64_param_0];
	ld.param.u64 	%rd20, [copy_nd1_i64_param_1];
	ld.param.u32 	%r11, [copy_nd1_i64_param_2];
	ld.param.u32 	%r12, [copy_nd1_i64_param_3];
	ld.param.u32 	%r13, [copy_nd1_i64_param_4];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r27, %tid.x;
	setp.ge.s32 	%p1, %r27, %r12;
	@%p1 bra 	$L__BB114_7;

	not.b32 	%r14, %r27;
	add.s32 	%r2, %r14, %r12;
	shr.u32 	%r15, %r2, 10;
	add.s32 	%r16, %r15, 1;
	and.b32  	%r26, %r16, 3;
	setp.eq.s32 	%p2, %r26, 0;
	@%p2 bra 	$L__BB114_4;

	mul.lo.s32 	%r17, %r27, %r13;
	mul.wide.s32 	%rd21, %r17, 8;
	add.s64 	%rd37, %rd1, %rd21;
	shl.b32 	%r18, %r13, 10;
	mul.wide.s32 	%rd4, %r18, 8;
	mul.lo.s32 	%r19, %r27, %r11;
	mul.wide.s32 	%rd22, %r19, 8;
	add.s64 	%rd36, %rd2, %rd22;
	shl.b32 	%r20, %r11, 10;
	mul.wide.s32 	%rd6, %r20, 8;

$L__BB114_3:
	.pragma "nounroll";
	ld.global.u64 	%rd23, [%rd36];
	st.global.u64 	[%rd37], %rd23;
	add.s32 	%r27, %r27, 1024;
	add.s64 	%rd37, %rd37, %rd4;
	add.s64 	%rd36, %rd36, %rd6;
	add.s32 	%r26, %r26, -1;
	setp.ne.s32 	%p3, %r26, 0;
	@%p3 bra 	$L__BB114_3;

$L__BB114_4:
	setp.lt.u32 	%p4, %r2, 3072;
	@%p4 bra 	$L__BB114_7;

	mul.lo.s32 	%r21, %r27, %r11;
	mul.lo.s32 	%r22, %r27, %r13;
	mul.wide.s32 	%rd24, %r22, 8;
	add.s64 	%rd38, %rd1, %rd24;
	mul.wide.s32 	%rd25, %r21, 8;
	add.s64 	%rd39, %rd2, %rd25;
	shl.b32 	%r23, %r11, 10;
	mul.wide.s32 	%rd13, %r23, 8;
	shl.b32 	%r24, %r13, 10;
	mul.wide.s32 	%rd14, %r24, 8;

$L__BB114_6:
	ld.global.u64 	%rd26, [%rd39];
	st.global.u64 	[%rd38], %rd26;
	add.s64 	%rd27, %rd39, %rd13;
	ld.global.u64 	%rd28, [%rd27];
	add.s64 	%rd29, %rd38, %rd14;
	st.global.u64 	[%rd29], %rd28;
	add.s64 	%rd30, %rd27, %rd13;
	ld.global.u64 	%rd31, [%rd30];
	add.s64 	%rd32, %rd29, %rd14;
	st.global.u64 	[%rd32], %rd31;
	add.s64 	%rd33, %rd30, %rd13;
	add.s64 	%rd39, %rd33, %rd13;
	ld.global.u64 	%rd34, [%rd33];
	add.s64 	%rd35, %rd32, %rd14;
	add.s64 	%rd38, %rd35, %rd14;
	st.global.u64 	[%rd35], %rd34;
	add.s32 	%r27, %r27, 4096;
	setp.lt.s32 	%p5, %r27, %r12;
	@%p5 bra 	$L__BB114_6;

$L__BB114_7:
	ret;

}
	// .globl	copy_nd2_i64
.visible .entry copy_nd2_i64(
	.param .u64 copy_nd2_i64_param_0,
	.param .u64 copy_nd2_i64_param_1,
	.param .u32 copy_nd2_i64_param_2,
	.param .u32 copy_nd2_i64_param_3,
	.param .u32 copy_nd2_i64_param_4,
	.param .u32 copy_nd2_i64_param_5,
	.param .u32 copy_nd2_i64_param_6,
	.param .u32 copy_nd2_i64_param_7
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<34>;
	.reg .b64 	%rd<40>;


	ld.param.u64 	%rd19, [copy_nd2_i64_param_0];
	ld.param.u64 	%rd20, [copy_nd2_i64_param_1];
	ld.param.u32 	%r16, [copy_nd2_i64_param_2];
	ld.param.u32 	%r13, [copy_nd2_i64_param_3];
	ld.param.u32 	%r14, [copy_nd2_i64_param_5];
	ld.param.u32 	%r17, [copy_nd2_i64_param_6];
	ld.param.u32 	%r15, [copy_nd2_i64_param_7];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r18, %ctaid.x;
	mul.lo.s32 	%r1, %r18, %r16;
	mul.lo.s32 	%r2, %r18, %r17;
	mov.u32 	%r32, %tid.x;
	setp.ge.s32 	%p1, %r32, %r14;
	@%p1 bra 	$L__BB115_7;

	not.b32 	%r19, %r32;
	add.s32 	%r4, %r19, %r14;
	shr.u32 	%r20, %r4, 10;
	add.s32 	%r21, %r20, 1;
	and.b32  	%r31, %r21, 3;
	setp.eq.s32 	%p2, %r31, 0;
	@%p2 bra 	$L__BB115_4;

	mad.lo.s32 	%r22, %r32, %r15, %r2;
	mul.wide.s32 	%rd21, %r22, 8;
	add.s64 	%rd37, %rd1, %rd21;
	shl.b32 	%r23, %r15, 10;
	mul.wide.s32 	%rd4, %r23, 8;
	mad.lo.s32 	%r24, %r32, %r13, %r1;
	mul.wide.s32 	%rd22, %r24, 8;
	add.s64 	%rd36, %rd2, %rd22;
	shl.b32 	%r25, %r13, 10;
	mul.wide.s32 	%rd6, %r25, 8;

$L__BB115_3:
	.pragma "nounroll";
	ld.global.u64 	%rd23, [%rd36];
	st.global.u64 	[%rd37], %rd23;
	add.s32 	%r32, %r32, 1024;
	add.s64 	%rd37, %rd37, %rd4;
	add.s64 	%rd36, %rd36, %rd6;
	add.s32 	%r31, %r31, -1;
	setp.ne.s32 	%p3, %r31, 0;
	@%p3 bra 	$L__BB115_3;

$L__BB115_4:
	setp.lt.u32 	%p4, %r4, 3072;
	@%p4 bra 	$L__BB115_7;

	mad.lo.s32 	%r26, %r32, %r13, %r1;
	mad.lo.s32 	%r27, %r32, %r15, %r2;
	mul.wide.s32 	%rd24, %r27, 8;
	add.s64 	%rd38, %rd1, %rd24;
	mul.wide.s32 	%rd25, %r26, 8;
	add.s64 	%rd39, %rd2, %rd25;
	shl.b32 	%r28, %r13, 10;
	mul.wide.s32 	%rd13, %r28, 8;
	shl.b32 	%r29, %r15, 10;
	mul.wide.s32 	%rd14, %r29, 8;

$L__BB115_6:
	ld.global.u64 	%rd26, [%rd39];
	st.global.u64 	[%rd38], %rd26;
	add.s64 	%rd27, %rd39, %rd13;
	ld.global.u64 	%rd28, [%rd27];
	add.s64 	%rd29, %rd38, %rd14;
	st.global.u64 	[%rd29], %rd28;
	add.s64 	%rd30, %rd27, %rd13;
	ld.global.u64 	%rd31, [%rd30];
	add.s64 	%rd32, %rd29, %rd14;
	st.global.u64 	[%rd32], %rd31;
	add.s64 	%rd33, %rd30, %rd13;
	add.s64 	%rd39, %rd33, %rd13;
	ld.global.u64 	%rd34, [%rd33];
	add.s64 	%rd35, %rd32, %rd14;
	add.s64 	%rd38, %rd35, %rd14;
	st.global.u64 	[%rd35], %rd34;
	add.s32 	%r32, %r32, 4096;
	setp.lt.s32 	%p5, %r32, %r14;
	@%p5 bra 	$L__BB115_6;

$L__BB115_7:
	ret;

}
	// .globl	copy_nd3_i64
.visible .entry copy_nd3_i64(
	.param .u64 copy_nd3_i64_param_0,
	.param .u64 copy_nd3_i64_param_1,
	.param .u32 copy_nd3_i64_param_2,
	.param .u32 copy_nd3_i64_param_3,
	.param .u32 copy_nd3_i64_param_4,
	.param .u32 copy_nd3_i64_param_5,
	.param .u32 copy_nd3_i64_param_6,
	.param .u32 copy_nd3_i64_param_7,
	.param .u32 copy_nd3_i64_param_8,
	.param .u32 copy_nd3_i64_param_9,
	.param .u32 copy_nd3_i64_param_10
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<43>;
	.reg .b64 	%rd<40>;


	ld.param.u64 	%rd19, [copy_nd3_i64_param_0];
	ld.param.u64 	%rd20, [copy_nd3_i64_param_1];
	ld.param.u32 	%r18, [copy_nd3_i64_param_2];
	ld.param.u32 	%r19, [copy_nd3_i64_param_3];
	ld.param.u32 	%r15, [copy_nd3_i64_param_4];
	ld.param.u32 	%r16, [copy_nd3_i64_param_7];
	ld.param.u32 	%r20, [copy_nd3_i64_param_8];
	ld.param.u32 	%r21, [copy_nd3_i64_param_9];
	ld.param.u32 	%r17, [copy_nd3_i64_param_10];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r22, %ctaid.x;
	mul.lo.s32 	%r1, %r22, %r19;
	mov.u32 	%r23, %ctaid.y;
	mul.lo.s32 	%r2, %r23, %r18;
	mul.lo.s32 	%r3, %r22, %r21;
	mul.lo.s32 	%r4, %r23, %r20;
	mov.u32 	%r41, %tid.x;
	setp.ge.s32 	%p1, %r41, %r16;
	@%p1 bra 	$L__BB116_7;

	not.b32 	%r24, %r41;
	add.s32 	%r6, %r24, %r16;
	shr.u32 	%r25, %r6, 10;
	add.s32 	%r26, %r25, 1;
	and.b32  	%r40, %r26, 3;
	setp.eq.s32 	%p2, %r40, 0;
	@%p2 bra 	$L__BB116_4;

	mad.lo.s32 	%r27, %r41, %r17, %r3;
	add.s32 	%r28, %r27, %r4;
	mul.wide.s32 	%rd21, %r28, 8;
	add.s64 	%rd37, %rd1, %rd21;
	shl.b32 	%r29, %r17, 10;
	mul.wide.s32 	%rd4, %r29, 8;
	mad.lo.s32 	%r30, %r41, %r15, %r1;
	add.s32 	%r31, %r30, %r2;
	mul.wide.s32 	%rd22, %r31, 8;
	add.s64 	%rd36, %rd2, %rd22;
	shl.b32 	%r32, %r15, 10;
	mul.wide.s32 	%rd6, %r32, 8;

$L__BB116_3:
	.pragma "nounroll";
	ld.global.u64 	%rd23, [%rd36];
	st.global.u64 	[%rd37], %rd23;
	add.s32 	%r41, %r41, 1024;
	add.s64 	%rd37, %rd37, %rd4;
	add.s64 	%rd36, %rd36, %rd6;
	add.s32 	%r40, %r40, -1;
	setp.ne.s32 	%p3, %r40, 0;
	@%p3 bra 	$L__BB116_3;

$L__BB116_4:
	setp.lt.u32 	%p4, %r6, 3072;
	@%p4 bra 	$L__BB116_7;

	mad.lo.s32 	%r33, %r41, %r15, %r1;
	add.s32 	%r34, %r33, %r2;
	mad.lo.s32 	%r35, %r41, %r17, %r3;
	add.s32 	%r36, %r35, %r4;
	mul.wide.s32 	%rd24, %r36, 8;
	add.s64 	%rd38, %rd1, %rd24;
	mul.wide.s32 	%rd25, %r34, 8;
	add.s64 	%rd39, %rd2, %rd25;
	shl.b32 	%r37, %r15, 10;
	mul.wide.s32 	%rd13, %r37, 8;
	shl.b32 	%r38, %r17, 10;
	mul.wide.s32 	%rd14, %r38, 8;

$L__BB116_6:
	ld.global.u64 	%rd26, [%rd39];
	st.global.u64 	[%rd38], %rd26;
	add.s64 	%rd27, %rd39, %rd13;
	ld.global.u64 	%rd28, [%rd27];
	add.s64 	%rd29, %rd38, %rd14;
	st.global.u64 	[%rd29], %rd28;
	add.s64 	%rd30, %rd27, %rd13;
	ld.global.u64 	%rd31, [%rd30];
	add.s64 	%rd32, %rd29, %rd14;
	st.global.u64 	[%rd32], %rd31;
	add.s64 	%rd33, %rd30, %rd13;
	add.s64 	%rd39, %rd33, %rd13;
	ld.global.u64 	%rd34, [%rd33];
	add.s64 	%rd35, %rd32, %rd14;
	add.s64 	%rd38, %rd35, %rd14;
	st.global.u64 	[%rd35], %rd34;
	add.s32 	%r41, %r41, 4096;
	setp.lt.s32 	%p5, %r41, %r16;
	@%p5 bra 	$L__BB116_6;

$L__BB116_7:
	ret;

}
	// .globl	copy_nd4_i64
.visible .entry copy_nd4_i64(
	.param .u64 copy_nd4_i64_param_0,
	.param .u64 copy_nd4_i64_param_1,
	.param .u32 copy_nd4_i64_param_2,
	.param .u32 copy_nd4_i64_param_3,
	.param .u32 copy_nd4_i64_param_4,
	.param .u32 copy_nd4_i64_param_5,
	.param .u32 copy_nd4_i64_param_6,
	.param .u32 copy_nd4_i64_param_7,
	.param .u32 copy_nd4_i64_param_8,
	.param .u32 copy_nd4_i64_param_9,
	.param .u32 copy_nd4_i64_param_10,
	.param .u32 copy_nd4_i64_param_11,
	.param .u32 copy_nd4_i64_param_12,
	.param .u32 copy_nd4_i64_param_13
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<52>;
	.reg .b64 	%rd<40>;


	ld.param.u64 	%rd19, [copy_nd4_i64_param_0];
	ld.param.u64 	%rd20, [copy_nd4_i64_param_1];
	ld.param.u32 	%r20, [copy_nd4_i64_param_2];
	ld.param.u32 	%r21, [copy_nd4_i64_param_3];
	ld.param.u32 	%r22, [copy_nd4_i64_param_4];
	ld.param.u32 	%r17, [copy_nd4_i64_param_5];
	ld.param.u32 	%r18, [copy_nd4_i64_param_9];
	ld.param.u32 	%r23, [copy_nd4_i64_param_10];
	ld.param.u32 	%r24, [copy_nd4_i64_param_11];
	ld.param.u32 	%r25, [copy_nd4_i64_param_12];
	ld.param.u32 	%r19, [copy_nd4_i64_param_13];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r26, %ctaid.x;
	mul.lo.s32 	%r1, %r26, %r22;
	mov.u32 	%r27, %ctaid.y;
	mul.lo.s32 	%r2, %r27, %r21;
	mov.u32 	%r28, %ctaid.z;
	mul.lo.s32 	%r3, %r28, %r20;
	mul.lo.s32 	%r4, %r26, %r25;
	mul.lo.s32 	%r5, %r27, %r24;
	mul.lo.s32 	%r6, %r28, %r23;
	mov.u32 	%r50, %tid.x;
	setp.ge.s32 	%p1, %r50, %r18;
	@%p1 bra 	$L__BB117_7;

	not.b32 	%r29, %r50;
	add.s32 	%r8, %r29, %r18;
	shr.u32 	%r30, %r8, 10;
	add.s32 	%r31, %r30, 1;
	and.b32  	%r49, %r31, 3;
	setp.eq.s32 	%p2, %r49, 0;
	@%p2 bra 	$L__BB117_4;

	mad.lo.s32 	%r32, %r50, %r19, %r4;
	add.s32 	%r33, %r32, %r5;
	add.s32 	%r34, %r33, %r6;
	mul.wide.s32 	%rd21, %r34, 8;
	add.s64 	%rd37, %rd1, %rd21;
	shl.b32 	%r35, %r19, 10;
	mul.wide.s32 	%rd4, %r35, 8;
	mad.lo.s32 	%r36, %r50, %r17, %r1;
	add.s32 	%r37, %r36, %r2;
	add.s32 	%r38, %r37, %r3;
	mul.wide.s32 	%rd22, %r38, 8;
	add.s64 	%rd36, %rd2, %rd22;
	shl.b32 	%r39, %r17, 10;
	mul.wide.s32 	%rd6, %r39, 8;

$L__BB117_3:
	.pragma "nounroll";
	ld.global.u64 	%rd23, [%rd36];
	st.global.u64 	[%rd37], %rd23;
	add.s32 	%r50, %r50, 1024;
	add.s64 	%rd37, %rd37, %rd4;
	add.s64 	%rd36, %rd36, %rd6;
	add.s32 	%r49, %r49, -1;
	setp.ne.s32 	%p3, %r49, 0;
	@%p3 bra 	$L__BB117_3;

$L__BB117_4:
	setp.lt.u32 	%p4, %r8, 3072;
	@%p4 bra 	$L__BB117_7;

	mad.lo.s32 	%r40, %r50, %r17, %r1;
	add.s32 	%r41, %r40, %r2;
	add.s32 	%r42, %r41, %r3;
	mad.lo.s32 	%r43, %r50, %r19, %r4;
	add.s32 	%r44, %r43, %r5;
	add.s32 	%r45, %r44, %r6;
	mul.wide.s32 	%rd24, %r45, 8;
	add.s64 	%rd38, %rd1, %rd24;
	mul.wide.s32 	%rd25, %r42, 8;
	add.s64 	%rd39, %rd2, %rd25;
	shl.b32 	%r46, %r17, 10;
	mul.wide.s32 	%rd13, %r46, 8;
	shl.b32 	%r47, %r19, 10;
	mul.wide.s32 	%rd14, %r47, 8;

$L__BB117_6:
	ld.global.u64 	%rd26, [%rd39];
	st.global.u64 	[%rd38], %rd26;
	add.s64 	%rd27, %rd39, %rd13;
	ld.global.u64 	%rd28, [%rd27];
	add.s64 	%rd29, %rd38, %rd14;
	st.global.u64 	[%rd29], %rd28;
	add.s64 	%rd30, %rd27, %rd13;
	ld.global.u64 	%rd31, [%rd30];
	add.s64 	%rd32, %rd29, %rd14;
	st.global.u64 	[%rd32], %rd31;
	add.s64 	%rd33, %rd30, %rd13;
	add.s64 	%rd39, %rd33, %rd13;
	ld.global.u64 	%rd34, [%rd33];
	add.s64 	%rd35, %rd32, %rd14;
	add.s64 	%rd38, %rd35, %rd14;
	st.global.u64 	[%rd35], %rd34;
	add.s32 	%r50, %r50, 4096;
	setp.lt.s32 	%p5, %r50, %r18;
	@%p5 bra 	$L__BB117_6;

$L__BB117_7:
	ret;

}
	// .globl	copy_nd5_i64
.visible .entry copy_nd5_i64(
	.param .u64 copy_nd5_i64_param_0,
	.param .u64 copy_nd5_i64_param_1,
	.param .u32 copy_nd5_i64_param_2,
	.param .u32 copy_nd5_i64_param_3,
	.param .u32 copy_nd5_i64_param_4,
	.param .u32 copy_nd5_i64_param_5,
	.param .u32 copy_nd5_i64_param_6,
	.param .u32 copy_nd5_i64_param_7,
	.param .u32 copy_nd5_i64_param_8,
	.param .u32 copy_nd5_i64_param_9,
	.param .u32 copy_nd5_i64_param_10,
	.param .u32 copy_nd5_i64_param_11,
	.param .u32 copy_nd5_i64_param_12,
	.param .u32 copy_nd5_i64_param_13,
	.param .u32 copy_nd5_i64_param_14,
	.param .u32 copy_nd5_i64_param_15,
	.param .u32 copy_nd5_i64_param_16
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<62>;
	.reg .b64 	%rd<40>;


	ld.param.u64 	%rd19, [copy_nd5_i64_param_0];
	ld.param.u64 	%rd20, [copy_nd5_i64_param_1];
	ld.param.u32 	%r17, [copy_nd5_i64_param_2];
	ld.param.u32 	%r18, [copy_nd5_i64_param_3];
	ld.param.u32 	%r24, [copy_nd5_i64_param_4];
	ld.param.u32 	%r25, [copy_nd5_i64_param_5];
	ld.param.u32 	%r19, [copy_nd5_i64_param_6];
	ld.param.u32 	%r26, [copy_nd5_i64_param_7];
	ld.param.u32 	%r27, [copy_nd5_i64_param_8];
	ld.param.u32 	%r20, [copy_nd5_i64_param_11];
	ld.param.u32 	%r21, [copy_nd5_i64_param_12];
	ld.param.u32 	%r22, [copy_nd5_i64_param_13];
	ld.param.u32 	%r28, [copy_nd5_i64_param_14];
	ld.param.u32 	%r29, [copy_nd5_i64_param_15];
	ld.param.u32 	%r23, [copy_nd5_i64_param_16];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r30, %ctaid.x;
	mul.lo.s32 	%r1, %r30, %r25;
	mov.u32 	%r31, %ctaid.y;
	mul.lo.s32 	%r2, %r31, %r24;
	mul.lo.s32 	%r3, %r30, %r29;
	mul.lo.s32 	%r4, %r31, %r28;
	mov.u32 	%r32, %ctaid.z;
	div.s32 	%r33, %r32, %r27;
	mul.lo.s32 	%r34, %r33, %r27;
	sub.s32 	%r5, %r32, %r34;
	rem.s32 	%r6, %r33, %r26;
	mov.u32 	%r60, %tid.x;
	setp.ge.s32 	%p1, %r60, %r20;
	@%p1 bra 	$L__BB118_7;

	not.b32 	%r35, %r60;
	add.s32 	%r8, %r35, %r20;
	shr.u32 	%r36, %r8, 10;
	add.s32 	%r37, %r36, 1;
	and.b32  	%r59, %r37, 3;
	setp.eq.s32 	%p2, %r59, 0;
	@%p2 bra 	$L__BB118_4;

	mad.lo.s32 	%r38, %r60, %r23, %r3;
	add.s32 	%r39, %r38, %r4;
	mad.lo.s32 	%r40, %r5, %r22, %r39;
	mad.lo.s32 	%r41, %r6, %r21, %r40;
	mul.wide.s32 	%rd21, %r41, 8;
	add.s64 	%rd37, %rd1, %rd21;
	shl.b32 	%r42, %r23, 10;
	mul.wide.s32 	%rd4, %r42, 8;
	mad.lo.s32 	%r43, %r60, %r19, %r1;
	add.s32 	%r44, %r43, %r2;
	mad.lo.s32 	%r45, %r5, %r18, %r44;
	mad.lo.s32 	%r46, %r6, %r17, %r45;
	mul.wide.s32 	%rd22, %r46, 8;
	add.s64 	%rd36, %rd2, %rd22;
	shl.b32 	%r47, %r19, 10;
	mul.wide.s32 	%rd6, %r47, 8;

$L__BB118_3:
	.pragma "nounroll";
	ld.global.u64 	%rd23, [%rd36];
	st.global.u64 	[%rd37], %rd23;
	add.s32 	%r60, %r60, 1024;
	add.s64 	%rd37, %rd37, %rd4;
	add.s64 	%rd36, %rd36, %rd6;
	add.s32 	%r59, %r59, -1;
	setp.ne.s32 	%p3, %r59, 0;
	@%p3 bra 	$L__BB118_3;

$L__BB118_4:
	setp.lt.u32 	%p4, %r8, 3072;
	@%p4 bra 	$L__BB118_7;

	mad.lo.s32 	%r48, %r60, %r19, %r1;
	add.s32 	%r49, %r48, %r2;
	mad.lo.s32 	%r50, %r5, %r18, %r49;
	mad.lo.s32 	%r51, %r6, %r17, %r50;
	mad.lo.s32 	%r52, %r60, %r23, %r3;
	add.s32 	%r53, %r52, %r4;
	mad.lo.s32 	%r54, %r5, %r22, %r53;
	mad.lo.s32 	%r55, %r6, %r21, %r54;
	mul.wide.s32 	%rd24, %r55, 8;
	add.s64 	%rd38, %rd1, %rd24;
	mul.wide.s32 	%rd25, %r51, 8;
	add.s64 	%rd39, %rd2, %rd25;
	shl.b32 	%r56, %r19, 10;
	mul.wide.s32 	%rd13, %r56, 8;
	shl.b32 	%r57, %r23, 10;
	mul.wide.s32 	%rd14, %r57, 8;

$L__BB118_6:
	ld.global.u64 	%rd26, [%rd39];
	st.global.u64 	[%rd38], %rd26;
	add.s64 	%rd27, %rd39, %rd13;
	ld.global.u64 	%rd28, [%rd27];
	add.s64 	%rd29, %rd38, %rd14;
	st.global.u64 	[%rd29], %rd28;
	add.s64 	%rd30, %rd27, %rd13;
	ld.global.u64 	%rd31, [%rd30];
	add.s64 	%rd32, %rd29, %rd14;
	st.global.u64 	[%rd32], %rd31;
	add.s64 	%rd33, %rd30, %rd13;
	add.s64 	%rd39, %rd33, %rd13;
	ld.global.u64 	%rd34, [%rd33];
	add.s64 	%rd35, %rd32, %rd14;
	add.s64 	%rd38, %rd35, %rd14;
	st.global.u64 	[%rd35], %rd34;
	add.s32 	%r60, %r60, 4096;
	setp.lt.s32 	%p5, %r60, %r20;
	@%p5 bra 	$L__BB118_6;

$L__BB118_7:
	ret;

}
	// .globl	copy_nd6_i64
.visible .entry copy_nd6_i64(
	.param .u64 copy_nd6_i64_param_0,
	.param .u64 copy_nd6_i64_param_1,
	.param .u32 copy_nd6_i64_param_2,
	.param .u32 copy_nd6_i64_param_3,
	.param .u32 copy_nd6_i64_param_4,
	.param .u32 copy_nd6_i64_param_5,
	.param .u32 copy_nd6_i64_param_6,
	.param .u32 copy_nd6_i64_param_7,
	.param .u32 copy_nd6_i64_param_8,
	.param .u32 copy_nd6_i64_param_9,
	.param .u32 copy_nd6_i64_param_10,
	.param .u32 copy_nd6_i64_param_11,
	.param .u32 copy_nd6_i64_param_12,
	.param .u32 copy_nd6_i64_param_13,
	.param .u32 copy_nd6_i64_param_14,
	.param .u32 copy_nd6_i64_param_15,
	.param .u32 copy_nd6_i64_param_16,
	.param .u32 copy_nd6_i64_param_17,
	.param .u32 copy_nd6_i64_param_18,
	.param .u32 copy_nd6_i64_param_19
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<72>;
	.reg .b64 	%rd<40>;


	ld.param.u64 	%rd19, [copy_nd6_i64_param_0];
	ld.param.u64 	%rd20, [copy_nd6_i64_param_1];
	ld.param.u32 	%r18, [copy_nd6_i64_param_2];
	ld.param.u32 	%r19, [copy_nd6_i64_param_3];
	ld.param.u32 	%r20, [copy_nd6_i64_param_4];
	ld.param.u32 	%r27, [copy_nd6_i64_param_5];
	ld.param.u32 	%r28, [copy_nd6_i64_param_6];
	ld.param.u32 	%r21, [copy_nd6_i64_param_7];
	ld.param.u32 	%r29, [copy_nd6_i64_param_8];
	ld.param.u32 	%r30, [copy_nd6_i64_param_9];
	ld.param.u32 	%r31, [copy_nd6_i64_param_10];
	ld.param.u32 	%r22, [copy_nd6_i64_param_13];
	ld.param.u32 	%r23, [copy_nd6_i64_param_14];
	ld.param.u32 	%r24, [copy_nd6_i64_param_15];
	ld.param.u32 	%r25, [copy_nd6_i64_param_16];
	ld.param.u32 	%r32, [copy_nd6_i64_param_17];
	ld.param.u32 	%r33, [copy_nd6_i64_param_18];
	ld.param.u32 	%r26, [copy_nd6_i64_param_19];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r34, %ctaid.x;
	mul.lo.s32 	%r1, %r34, %r28;
	mov.u32 	%r35, %ctaid.y;
	mul.lo.s32 	%r2, %r35, %r27;
	mul.lo.s32 	%r3, %r34, %r33;
	mul.lo.s32 	%r4, %r35, %r32;
	mov.u32 	%r36, %ctaid.z;
	div.s32 	%r37, %r36, %r31;
	mul.lo.s32 	%r38, %r37, %r31;
	sub.s32 	%r5, %r36, %r38;
	div.s32 	%r39, %r37, %r30;
	mul.lo.s32 	%r40, %r39, %r30;
	sub.s32 	%r6, %r37, %r40;
	rem.s32 	%r7, %r39, %r29;
	mov.u32 	%r70, %tid.x;
	setp.ge.s32 	%p1, %r70, %r22;
	@%p1 bra 	$L__BB119_7;

	not.b32 	%r41, %r70;
	add.s32 	%r9, %r41, %r22;
	shr.u32 	%r42, %r9, 10;
	add.s32 	%r43, %r42, 1;
	and.b32  	%r69, %r43, 3;
	setp.eq.s32 	%p2, %r69, 0;
	@%p2 bra 	$L__BB119_4;

	mad.lo.s32 	%r44, %r70, %r26, %r3;
	add.s32 	%r45, %r44, %r4;
	mad.lo.s32 	%r46, %r5, %r25, %r45;
	mad.lo.s32 	%r47, %r6, %r24, %r46;
	mad.lo.s32 	%r48, %r7, %r23, %r47;
	mul.wide.s32 	%rd21, %r48, 8;
	add.s64 	%rd37, %rd1, %rd21;
	shl.b32 	%r49, %r26, 10;
	mul.wide.s32 	%rd4, %r49, 8;
	mad.lo.s32 	%r50, %r70, %r21, %r1;
	add.s32 	%r51, %r50, %r2;
	mad.lo.s32 	%r52, %r5, %r20, %r51;
	mad.lo.s32 	%r53, %r6, %r19, %r52;
	mad.lo.s32 	%r54, %r7, %r18, %r53;
	mul.wide.s32 	%rd22, %r54, 8;
	add.s64 	%rd36, %rd2, %rd22;
	shl.b32 	%r55, %r21, 10;
	mul.wide.s32 	%rd6, %r55, 8;

$L__BB119_3:
	.pragma "nounroll";
	ld.global.u64 	%rd23, [%rd36];
	st.global.u64 	[%rd37], %rd23;
	add.s32 	%r70, %r70, 1024;
	add.s64 	%rd37, %rd37, %rd4;
	add.s64 	%rd36, %rd36, %rd6;
	add.s32 	%r69, %r69, -1;
	setp.ne.s32 	%p3, %r69, 0;
	@%p3 bra 	$L__BB119_3;

$L__BB119_4:
	setp.lt.u32 	%p4, %r9, 3072;
	@%p4 bra 	$L__BB119_7;

	mad.lo.s32 	%r56, %r70, %r21, %r1;
	add.s32 	%r57, %r56, %r2;
	mad.lo.s32 	%r58, %r5, %r20, %r57;
	mad.lo.s32 	%r59, %r6, %r19, %r58;
	mad.lo.s32 	%r60, %r7, %r18, %r59;
	mad.lo.s32 	%r61, %r70, %r26, %r3;
	add.s32 	%r62, %r61, %r4;
	mad.lo.s32 	%r63, %r5, %r25, %r62;
	mad.lo.s32 	%r64, %r6, %r24, %r63;
	mad.lo.s32 	%r65, %r7, %r23, %r64;
	mul.wide.s32 	%rd24, %r65, 8;
	add.s64 	%rd38, %rd1, %rd24;
	mul.wide.s32 	%rd25, %r60, 8;
	add.s64 	%rd39, %rd2, %rd25;
	shl.b32 	%r66, %r21, 10;
	mul.wide.s32 	%rd13, %r66, 8;
	shl.b32 	%r67, %r26, 10;
	mul.wide.s32 	%rd14, %r67, 8;

$L__BB119_6:
	ld.global.u64 	%rd26, [%rd39];
	st.global.u64 	[%rd38], %rd26;
	add.s64 	%rd27, %rd39, %rd13;
	ld.global.u64 	%rd28, [%rd27];
	add.s64 	%rd29, %rd38, %rd14;
	st.global.u64 	[%rd29], %rd28;
	add.s64 	%rd30, %rd27, %rd13;
	ld.global.u64 	%rd31, [%rd30];
	add.s64 	%rd32, %rd29, %rd14;
	st.global.u64 	[%rd32], %rd31;
	add.s64 	%rd33, %rd30, %rd13;
	add.s64 	%rd39, %rd33, %rd13;
	ld.global.u64 	%rd34, [%rd33];
	add.s64 	%rd35, %rd32, %rd14;
	add.s64 	%rd38, %rd35, %rd14;
	st.global.u64 	[%rd35], %rd34;
	add.s32 	%r70, %r70, 4096;
	setp.lt.s32 	%p5, %r70, %r22;
	@%p5 bra 	$L__BB119_6;

$L__BB119_7:
	ret;

}
	// .globl	cast_i64_bool
.visible .entry cast_i64_bool(
	.param .u64 cast_i64_bool_param_0,
	.param .u64 cast_i64_bool_param_1,
	.param .u32 cast_i64_bool_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_i64_bool_param_0];
	ld.param.u64 	%rd2, [cast_i64_bool_param_1];
	ld.param.u32 	%r2, [cast_i64_bool_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB120_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u64 	%rd7, [%rd6];
	setp.ne.s64 	%p2, %rd7, 0;
	selp.u16 	%rs1, 1, 0, %p2;
	cvta.to.global.u64 	%rd8, %rd2;
	add.s64 	%rd9, %rd8, %rd4;
	st.global.u8 	[%rd9], %rs1;

$L__BB120_2:
	ret;

}
	// .globl	cast_i64_f32
.visible .entry cast_i64_f32(
	.param .u64 cast_i64_f32_param_0,
	.param .u64 cast_i64_f32_param_1,
	.param .u32 cast_i64_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_i64_f32_param_0];
	ld.param.u64 	%rd2, [cast_i64_f32_param_1];
	ld.param.u32 	%r2, [cast_i64_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB121_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u64 	%rd6, [%rd5];
	cvt.rn.f32.s64 	%f1, %rd6;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.f32 	[%rd9], %f1;

$L__BB121_2:
	ret;

}
	// .globl	cast_i64_f16
.visible .entry cast_i64_f16(
	.param .u64 cast_i64_f16_param_0,
	.param .u64 cast_i64_f16_param_1,
	.param .u32 cast_i64_f16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_i64_f16_param_0];
	ld.param.u64 	%rd2, [cast_i64_f16_param_1];
	ld.param.u32 	%r2, [cast_i64_f16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB122_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u64 	%rd3, [%rd6];
	// begin inline asm
	cvt.rn.f16.s64 %rs1, %rd3;
	// end inline asm
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 2;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u16 	[%rd9], %rs1;

$L__BB122_2:
	ret;

}
	// .globl	cast_i64_u8
.visible .entry cast_i64_u8(
	.param .u64 cast_i64_u8_param_0,
	.param .u64 cast_i64_u8_param_1,
	.param .u32 cast_i64_u8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_i64_u8_param_0];
	ld.param.u64 	%rd2, [cast_i64_u8_param_1];
	ld.param.u32 	%r2, [cast_i64_u8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB123_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u64 	%rd7, [%rd6];
	cvta.to.global.u64 	%rd8, %rd2;
	add.s64 	%rd9, %rd8, %rd4;
	st.global.u8 	[%rd9], %rd7;

$L__BB123_2:
	ret;

}
	// .globl	cast_i64_u16
.visible .entry cast_i64_u16(
	.param .u64 cast_i64_u16_param_0,
	.param .u64 cast_i64_u16_param_1,
	.param .u32 cast_i64_u16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_i64_u16_param_0];
	ld.param.u64 	%rd2, [cast_i64_u16_param_1];
	ld.param.u32 	%r2, [cast_i64_u16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB124_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u64 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 2;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u16 	[%rd9], %rd6;

$L__BB124_2:
	ret;

}
	// .globl	cast_i64_u32
.visible .entry cast_i64_u32(
	.param .u64 cast_i64_u32_param_0,
	.param .u64 cast_i64_u32_param_1,
	.param .u32 cast_i64_u32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_i64_u32_param_0];
	ld.param.u64 	%rd2, [cast_i64_u32_param_1];
	ld.param.u32 	%r2, [cast_i64_u32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB125_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u64 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u32 	[%rd9], %rd6;

$L__BB125_2:
	ret;

}
	// .globl	cast_i64_u64
.visible .entry cast_i64_u64(
	.param .u64 cast_i64_u64_param_0,
	.param .u64 cast_i64_u64_param_1,
	.param .u32 cast_i64_u64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_i64_u64_param_0];
	ld.param.u64 	%rd2, [cast_i64_u64_param_1];
	ld.param.u32 	%r2, [cast_i64_u64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB126_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u64 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u64 	[%rd8], %rd6;

$L__BB126_2:
	ret;

}
	// .globl	cast_i64_i8
.visible .entry cast_i64_i8(
	.param .u64 cast_i64_i8_param_0,
	.param .u64 cast_i64_i8_param_1,
	.param .u32 cast_i64_i8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_i64_i8_param_0];
	ld.param.u64 	%rd2, [cast_i64_i8_param_1];
	ld.param.u32 	%r2, [cast_i64_i8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB127_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u64 	%rd7, [%rd6];
	cvta.to.global.u64 	%rd8, %rd2;
	add.s64 	%rd9, %rd8, %rd4;
	st.global.u8 	[%rd9], %rd7;

$L__BB127_2:
	ret;

}
	// .globl	cast_i64_i16
.visible .entry cast_i64_i16(
	.param .u64 cast_i64_i16_param_0,
	.param .u64 cast_i64_i16_param_1,
	.param .u32 cast_i64_i16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_i64_i16_param_0];
	ld.param.u64 	%rd2, [cast_i64_i16_param_1];
	ld.param.u32 	%r2, [cast_i64_i16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB128_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u64 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 2;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u16 	[%rd9], %rd6;

$L__BB128_2:
	ret;

}
	// .globl	cast_i64_i32
.visible .entry cast_i64_i32(
	.param .u64 cast_i64_i32_param_0,
	.param .u64 cast_i64_i32_param_1,
	.param .u32 cast_i64_i32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_i64_i32_param_0];
	ld.param.u64 	%rd2, [cast_i64_i32_param_1];
	ld.param.u32 	%r2, [cast_i64_i32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB129_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u64 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u32 	[%rd9], %rd6;

$L__BB129_2:
	ret;

}
	// .globl	cast_i64_i64
.visible .entry cast_i64_i64(
	.param .u64 cast_i64_i64_param_0,
	.param .u64 cast_i64_i64_param_1,
	.param .u32 cast_i64_i64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_i64_i64_param_0];
	ld.param.u64 	%rd2, [cast_i64_i64_param_1];
	ld.param.u32 	%r2, [cast_i64_i64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB130_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u64 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u64 	[%rd8], %rd6;

$L__BB130_2:
	ret;

}
	// .globl	rotate_half_nd2_i64
.visible .entry rotate_half_nd2_i64(
	.param .u64 rotate_half_nd2_i64_param_0,
	.param .u64 rotate_half_nd2_i64_param_1,
	.param .u32 rotate_half_nd2_i64_param_2,
	.param .u32 rotate_half_nd2_i64_param_3,
	.param .u32 rotate_half_nd2_i64_param_4,
	.param .u32 rotate_half_nd2_i64_param_5
)
{
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd1, [rotate_half_nd2_i64_param_0];
	ld.param.u64 	%rd2, [rotate_half_nd2_i64_param_1];
	ld.param.u32 	%r1, [rotate_half_nd2_i64_param_4];
	ld.param.u32 	%r2, [rotate_half_nd2_i64_param_5];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ctaid.y;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %tid.y;
	mad.lo.s32 	%r10, %r7, %r8, %r9;
	ld.param.u32 	%r11, [rotate_half_nd2_i64_param_3];
	shr.u32 	%r12, %r11, 31;
	add.s32 	%r13, %r11, %r12;
	shr.s32 	%r14, %r13, 1;
	add.s32 	%r15, %r14, %r6;
	mul.lo.s32 	%r16, %r10, %r1;
	mad.lo.s32 	%r17, %r15, %r2, %r16;
	mad.lo.s32 	%r18, %r6, %r2, %r16;
	mul.wide.s32 	%rd5, %r17, 8;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u64 	%rd7, [%rd6];
	neg.s64 	%rd8, %rd7;
	mul.wide.s32 	%rd9, %r18, 8;
	add.s64 	%rd10, %rd3, %rd9;
	st.global.u64 	[%rd10], %rd8;
	add.s64 	%rd11, %rd4, %rd9;
	ld.global.u64 	%rd12, [%rd11];
	add.s64 	%rd13, %rd3, %rd5;
	st.global.u64 	[%rd13], %rd12;
	ret;

}
	// .globl	copy_unicast_u8
.visible .entry copy_unicast_u8(
	.param .u64 copy_unicast_u8_param_0,
	.param .u64 copy_unicast_u8_param_1,
	.param .u32 copy_unicast_u8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [copy_unicast_u8_param_0];
	ld.param.u64 	%rd2, [copy_unicast_u8_param_1];
	ld.param.u32 	%r2, [copy_unicast_u8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB132_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u8 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u8 	[%rd7], %rs1;

$L__BB132_2:
	ret;

}
	// .globl	copy_nd1_u8
.visible .entry copy_nd1_u8(
	.param .u64 copy_nd1_u8_param_0,
	.param .u64 copy_nd1_u8_param_1,
	.param .u32 copy_nd1_u8_param_2,
	.param .u32 copy_nd1_u8_param_3,
	.param .u32 copy_nd1_u8_param_4
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<38>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd31, [copy_nd1_u8_param_0];
	ld.param.u64 	%rd32, [copy_nd1_u8_param_1];
	ld.param.u32 	%r11, [copy_nd1_u8_param_2];
	ld.param.u32 	%r12, [copy_nd1_u8_param_3];
	ld.param.u32 	%r13, [copy_nd1_u8_param_4];
	cvta.to.global.u64 	%rd1, %rd32;
	cvta.to.global.u64 	%rd49, %rd31;
	mov.u32 	%r36, %tid.x;
	setp.ge.s32 	%p1, %r36, %r12;
	@%p1 bra 	$L__BB133_7;

	not.b32 	%r14, %r36;
	add.s32 	%r2, %r14, %r12;
	shr.u32 	%r15, %r2, 10;
	add.s32 	%r16, %r15, 1;
	and.b32  	%r35, %r16, 3;
	setp.eq.s32 	%p2, %r35, 0;
	@%p2 bra 	$L__BB133_4;

	mul.lo.s32 	%r17, %r36, %r13;
	cvt.s64.s32 	%rd33, %r17;
	add.s64 	%rd44, %rd1, %rd33;
	shl.b32 	%r18, %r13, 10;
	cvt.s64.s32 	%rd4, %r18;
	mul.lo.s32 	%r19, %r36, %r11;
	cvt.s64.s32 	%rd34, %r19;
	add.s64 	%rd43, %rd49, %rd34;
	shl.b32 	%r20, %r11, 10;
	cvt.s64.s32 	%rd6, %r20;

$L__BB133_3:
	.pragma "nounroll";
	ld.global.u8 	%rs1, [%rd43];
	st.global.u8 	[%rd44], %rs1;
	add.s32 	%r36, %r36, 1024;
	add.s64 	%rd44, %rd44, %rd4;
	add.s64 	%rd43, %rd43, %rd6;
	add.s32 	%r35, %r35, -1;
	setp.ne.s32 	%p3, %r35, 0;
	@%p3 bra 	$L__BB133_3;

$L__BB133_4:
	setp.lt.u32 	%p4, %r2, 3072;
	@%p4 bra 	$L__BB133_7;

	add.s32 	%r21, %r36, 1024;
	mul.lo.s32 	%r22, %r11, %r21;
	cvt.s64.s32 	%rd11, %r22;
	shl.b32 	%r23, %r11, 12;
	cvt.s64.s32 	%rd12, %r23;
	add.s32 	%r24, %r36, 2048;
	mul.lo.s32 	%r25, %r11, %r24;
	cvt.s64.s32 	%rd13, %r25;
	add.s32 	%r26, %r36, 3072;
	mul.lo.s32 	%r27, %r11, %r26;
	cvt.s64.s32 	%rd14, %r27;
	mul.lo.s32 	%r28, %r36, %r11;
	cvt.s64.s32 	%rd15, %r28;
	mul.lo.s32 	%r29, %r13, %r21;
	cvt.s64.s32 	%rd35, %r29;
	add.s64 	%rd48, %rd1, %rd35;
	shl.b32 	%r30, %r13, 12;
	cvt.s64.s32 	%rd17, %r30;
	mul.lo.s32 	%r31, %r13, %r24;
	cvt.s64.s32 	%rd36, %r31;
	add.s64 	%rd47, %rd1, %rd36;
	mul.lo.s32 	%r32, %r13, %r26;
	cvt.s64.s32 	%rd37, %r32;
	add.s64 	%rd46, %rd1, %rd37;
	mul.lo.s32 	%r33, %r36, %r13;
	cvt.s64.s32 	%rd38, %r33;
	add.s64 	%rd45, %rd1, %rd38;

$L__BB133_6:
	add.s64 	%rd39, %rd49, %rd15;
	ld.global.u8 	%rs2, [%rd39];
	st.global.u8 	[%rd45], %rs2;
	add.s64 	%rd40, %rd49, %rd11;
	ld.global.u8 	%rs3, [%rd40];
	st.global.u8 	[%rd48], %rs3;
	add.s64 	%rd41, %rd49, %rd13;
	ld.global.u8 	%rs4, [%rd41];
	st.global.u8 	[%rd47], %rs4;
	add.s64 	%rd42, %rd49, %rd14;
	ld.global.u8 	%rs5, [%rd42];
	st.global.u8 	[%rd46], %rs5;
	add.s64 	%rd49, %rd49, %rd12;
	add.s64 	%rd48, %rd48, %rd17;
	add.s64 	%rd47, %rd47, %rd17;
	add.s64 	%rd46, %rd46, %rd17;
	add.s64 	%rd45, %rd45, %rd17;
	add.s32 	%r36, %r36, 4096;
	setp.lt.s32 	%p5, %r36, %r12;
	@%p5 bra 	$L__BB133_6;

$L__BB133_7:
	ret;

}
	// .globl	copy_nd2_u8
.visible .entry copy_nd2_u8(
	.param .u64 copy_nd2_u8_param_0,
	.param .u64 copy_nd2_u8_param_1,
	.param .u32 copy_nd2_u8_param_2,
	.param .u32 copy_nd2_u8_param_3,
	.param .u32 copy_nd2_u8_param_4,
	.param .u32 copy_nd2_u8_param_5,
	.param .u32 copy_nd2_u8_param_6,
	.param .u32 copy_nd2_u8_param_7
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<43>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd31, [copy_nd2_u8_param_0];
	ld.param.u64 	%rd32, [copy_nd2_u8_param_1];
	ld.param.u32 	%r16, [copy_nd2_u8_param_2];
	ld.param.u32 	%r13, [copy_nd2_u8_param_3];
	ld.param.u32 	%r14, [copy_nd2_u8_param_5];
	ld.param.u32 	%r17, [copy_nd2_u8_param_6];
	ld.param.u32 	%r15, [copy_nd2_u8_param_7];
	cvta.to.global.u64 	%rd1, %rd32;
	cvta.to.global.u64 	%rd49, %rd31;
	mov.u32 	%r18, %ctaid.x;
	mul.lo.s32 	%r1, %r18, %r16;
	mul.lo.s32 	%r2, %r18, %r17;
	mov.u32 	%r41, %tid.x;
	setp.ge.s32 	%p1, %r41, %r14;
	@%p1 bra 	$L__BB134_7;

	not.b32 	%r19, %r41;
	add.s32 	%r4, %r19, %r14;
	shr.u32 	%r20, %r4, 10;
	add.s32 	%r21, %r20, 1;
	and.b32  	%r40, %r21, 3;
	setp.eq.s32 	%p2, %r40, 0;
	@%p2 bra 	$L__BB134_4;

	mad.lo.s32 	%r22, %r41, %r15, %r2;
	cvt.s64.s32 	%rd33, %r22;
	add.s64 	%rd44, %rd1, %rd33;
	shl.b32 	%r23, %r15, 10;
	cvt.s64.s32 	%rd4, %r23;
	mad.lo.s32 	%r24, %r41, %r13, %r1;
	cvt.s64.s32 	%rd34, %r24;
	add.s64 	%rd43, %rd49, %rd34;
	shl.b32 	%r25, %r13, 10;
	cvt.s64.s32 	%rd6, %r25;

$L__BB134_3:
	.pragma "nounroll";
	ld.global.u8 	%rs1, [%rd43];
	st.global.u8 	[%rd44], %rs1;
	add.s32 	%r41, %r41, 1024;
	add.s64 	%rd44, %rd44, %rd4;
	add.s64 	%rd43, %rd43, %rd6;
	add.s32 	%r40, %r40, -1;
	setp.ne.s32 	%p3, %r40, 0;
	@%p3 bra 	$L__BB134_3;

$L__BB134_4:
	setp.lt.u32 	%p4, %r4, 3072;
	@%p4 bra 	$L__BB134_7;

	add.s32 	%r26, %r41, 1024;
	mad.lo.s32 	%r27, %r13, %r26, %r1;
	cvt.s64.s32 	%rd11, %r27;
	shl.b32 	%r28, %r13, 12;
	cvt.s64.s32 	%rd12, %r28;
	add.s32 	%r29, %r41, 2048;
	mad.lo.s32 	%r30, %r13, %r29, %r1;
	cvt.s64.s32 	%rd13, %r30;
	add.s32 	%r31, %r41, 3072;
	mad.lo.s32 	%r32, %r13, %r31, %r1;
	cvt.s64.s32 	%rd14, %r32;
	mad.lo.s32 	%r33, %r41, %r13, %r1;
	cvt.s64.s32 	%rd15, %r33;
	mad.lo.s32 	%r34, %r15, %r26, %r2;
	cvt.s64.s32 	%rd35, %r34;
	add.s64 	%rd48, %rd1, %rd35;
	shl.b32 	%r35, %r15, 12;
	cvt.s64.s32 	%rd17, %r35;
	mad.lo.s32 	%r36, %r15, %r29, %r2;
	cvt.s64.s32 	%rd36, %r36;
	add.s64 	%rd47, %rd1, %rd36;
	mad.lo.s32 	%r37, %r15, %r31, %r2;
	cvt.s64.s32 	%rd37, %r37;
	add.s64 	%rd46, %rd1, %rd37;
	mad.lo.s32 	%r38, %r41, %r15, %r2;
	cvt.s64.s32 	%rd38, %r38;
	add.s64 	%rd45, %rd1, %rd38;

$L__BB134_6:
	add.s64 	%rd39, %rd49, %rd15;
	ld.global.u8 	%rs2, [%rd39];
	st.global.u8 	[%rd45], %rs2;
	add.s64 	%rd40, %rd49, %rd11;
	ld.global.u8 	%rs3, [%rd40];
	st.global.u8 	[%rd48], %rs3;
	add.s64 	%rd41, %rd49, %rd13;
	ld.global.u8 	%rs4, [%rd41];
	st.global.u8 	[%rd47], %rs4;
	add.s64 	%rd42, %rd49, %rd14;
	ld.global.u8 	%rs5, [%rd42];
	st.global.u8 	[%rd46], %rs5;
	add.s64 	%rd49, %rd49, %rd12;
	add.s64 	%rd48, %rd48, %rd17;
	add.s64 	%rd47, %rd47, %rd17;
	add.s64 	%rd46, %rd46, %rd17;
	add.s64 	%rd45, %rd45, %rd17;
	add.s32 	%r41, %r41, 4096;
	setp.lt.s32 	%p5, %r41, %r14;
	@%p5 bra 	$L__BB134_6;

$L__BB134_7:
	ret;

}
	// .globl	copy_nd3_u8
.visible .entry copy_nd3_u8(
	.param .u64 copy_nd3_u8_param_0,
	.param .u64 copy_nd3_u8_param_1,
	.param .u32 copy_nd3_u8_param_2,
	.param .u32 copy_nd3_u8_param_3,
	.param .u32 copy_nd3_u8_param_4,
	.param .u32 copy_nd3_u8_param_5,
	.param .u32 copy_nd3_u8_param_6,
	.param .u32 copy_nd3_u8_param_7,
	.param .u32 copy_nd3_u8_param_8,
	.param .u32 copy_nd3_u8_param_9,
	.param .u32 copy_nd3_u8_param_10
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<54>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd31, [copy_nd3_u8_param_0];
	ld.param.u64 	%rd32, [copy_nd3_u8_param_1];
	ld.param.u32 	%r18, [copy_nd3_u8_param_2];
	ld.param.u32 	%r19, [copy_nd3_u8_param_3];
	ld.param.u32 	%r15, [copy_nd3_u8_param_4];
	ld.param.u32 	%r16, [copy_nd3_u8_param_7];
	ld.param.u32 	%r20, [copy_nd3_u8_param_8];
	ld.param.u32 	%r21, [copy_nd3_u8_param_9];
	ld.param.u32 	%r17, [copy_nd3_u8_param_10];
	cvta.to.global.u64 	%rd1, %rd32;
	cvta.to.global.u64 	%rd49, %rd31;
	mov.u32 	%r22, %ctaid.x;
	mul.lo.s32 	%r1, %r22, %r19;
	mov.u32 	%r23, %ctaid.y;
	mul.lo.s32 	%r2, %r23, %r18;
	mul.lo.s32 	%r3, %r22, %r21;
	mul.lo.s32 	%r4, %r23, %r20;
	mov.u32 	%r52, %tid.x;
	setp.ge.s32 	%p1, %r52, %r16;
	@%p1 bra 	$L__BB135_7;

	not.b32 	%r24, %r52;
	add.s32 	%r6, %r24, %r16;
	shr.u32 	%r25, %r6, 10;
	add.s32 	%r26, %r25, 1;
	and.b32  	%r51, %r26, 3;
	setp.eq.s32 	%p2, %r51, 0;
	@%p2 bra 	$L__BB135_4;

	mad.lo.s32 	%r27, %r52, %r17, %r3;
	add.s32 	%r28, %r27, %r4;
	cvt.s64.s32 	%rd33, %r28;
	add.s64 	%rd44, %rd1, %rd33;
	shl.b32 	%r29, %r17, 10;
	cvt.s64.s32 	%rd4, %r29;
	mad.lo.s32 	%r30, %r52, %r15, %r1;
	add.s32 	%r31, %r30, %r2;
	cvt.s64.s32 	%rd34, %r31;
	add.s64 	%rd43, %rd49, %rd34;
	shl.b32 	%r32, %r15, 10;
	cvt.s64.s32 	%rd6, %r32;

$L__BB135_3:
	.pragma "nounroll";
	ld.global.u8 	%rs1, [%rd43];
	st.global.u8 	[%rd44], %rs1;
	add.s32 	%r52, %r52, 1024;
	add.s64 	%rd44, %rd44, %rd4;
	add.s64 	%rd43, %rd43, %rd6;
	add.s32 	%r51, %r51, -1;
	setp.ne.s32 	%p3, %r51, 0;
	@%p3 bra 	$L__BB135_3;

$L__BB135_4:
	setp.lt.u32 	%p4, %r6, 3072;
	@%p4 bra 	$L__BB135_7;

	add.s32 	%r33, %r1, %r2;
	add.s32 	%r34, %r52, 1024;
	mad.lo.s32 	%r35, %r15, %r34, %r33;
	cvt.s64.s32 	%rd11, %r35;
	shl.b32 	%r36, %r15, 12;
	cvt.s64.s32 	%rd12, %r36;
	add.s32 	%r37, %r52, 2048;
	mad.lo.s32 	%r38, %r15, %r37, %r33;
	cvt.s64.s32 	%rd13, %r38;
	add.s32 	%r39, %r52, 3072;
	mad.lo.s32 	%r40, %r15, %r39, %r33;
	cvt.s64.s32 	%rd14, %r40;
	mad.lo.s32 	%r41, %r52, %r15, %r1;
	add.s32 	%r42, %r41, %r2;
	cvt.s64.s32 	%rd15, %r42;
	add.s32 	%r43, %r3, %r4;
	mad.lo.s32 	%r44, %r17, %r34, %r43;
	cvt.s64.s32 	%rd35, %r44;
	add.s64 	%rd48, %rd1, %rd35;
	shl.b32 	%r45, %r17, 12;
	cvt.s64.s32 	%rd17, %r45;
	mad.lo.s32 	%r46, %r17, %r37, %r43;
	cvt.s64.s32 	%rd36, %r46;
	add.s64 	%rd47, %rd1, %rd36;
	mad.lo.s32 	%r47, %r17, %r39, %r43;
	cvt.s64.s32 	%rd37, %r47;
	add.s64 	%rd46, %rd1, %rd37;
	mad.lo.s32 	%r48, %r52, %r17, %r3;
	add.s32 	%r49, %r48, %r4;
	cvt.s64.s32 	%rd38, %r49;
	add.s64 	%rd45, %rd1, %rd38;

$L__BB135_6:
	add.s64 	%rd39, %rd49, %rd15;
	ld.global.u8 	%rs2, [%rd39];
	st.global.u8 	[%rd45], %rs2;
	add.s64 	%rd40, %rd49, %rd11;
	ld.global.u8 	%rs3, [%rd40];
	st.global.u8 	[%rd48], %rs3;
	add.s64 	%rd41, %rd49, %rd13;
	ld.global.u8 	%rs4, [%rd41];
	st.global.u8 	[%rd47], %rs4;
	add.s64 	%rd42, %rd49, %rd14;
	ld.global.u8 	%rs5, [%rd42];
	st.global.u8 	[%rd46], %rs5;
	add.s64 	%rd49, %rd49, %rd12;
	add.s64 	%rd48, %rd48, %rd17;
	add.s64 	%rd47, %rd47, %rd17;
	add.s64 	%rd46, %rd46, %rd17;
	add.s64 	%rd45, %rd45, %rd17;
	add.s32 	%r52, %r52, 4096;
	setp.lt.s32 	%p5, %r52, %r16;
	@%p5 bra 	$L__BB135_6;

$L__BB135_7:
	ret;

}
	// .globl	copy_nd4_u8
.visible .entry copy_nd4_u8(
	.param .u64 copy_nd4_u8_param_0,
	.param .u64 copy_nd4_u8_param_1,
	.param .u32 copy_nd4_u8_param_2,
	.param .u32 copy_nd4_u8_param_3,
	.param .u32 copy_nd4_u8_param_4,
	.param .u32 copy_nd4_u8_param_5,
	.param .u32 copy_nd4_u8_param_6,
	.param .u32 copy_nd4_u8_param_7,
	.param .u32 copy_nd4_u8_param_8,
	.param .u32 copy_nd4_u8_param_9,
	.param .u32 copy_nd4_u8_param_10,
	.param .u32 copy_nd4_u8_param_11,
	.param .u32 copy_nd4_u8_param_12,
	.param .u32 copy_nd4_u8_param_13
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<65>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd31, [copy_nd4_u8_param_0];
	ld.param.u64 	%rd32, [copy_nd4_u8_param_1];
	ld.param.u32 	%r20, [copy_nd4_u8_param_2];
	ld.param.u32 	%r21, [copy_nd4_u8_param_3];
	ld.param.u32 	%r22, [copy_nd4_u8_param_4];
	ld.param.u32 	%r17, [copy_nd4_u8_param_5];
	ld.param.u32 	%r18, [copy_nd4_u8_param_9];
	ld.param.u32 	%r23, [copy_nd4_u8_param_10];
	ld.param.u32 	%r24, [copy_nd4_u8_param_11];
	ld.param.u32 	%r25, [copy_nd4_u8_param_12];
	ld.param.u32 	%r19, [copy_nd4_u8_param_13];
	cvta.to.global.u64 	%rd1, %rd32;
	cvta.to.global.u64 	%rd49, %rd31;
	mov.u32 	%r26, %ctaid.x;
	mul.lo.s32 	%r1, %r26, %r22;
	mov.u32 	%r27, %ctaid.y;
	mul.lo.s32 	%r2, %r27, %r21;
	mov.u32 	%r28, %ctaid.z;
	mul.lo.s32 	%r3, %r28, %r20;
	mul.lo.s32 	%r4, %r26, %r25;
	mul.lo.s32 	%r5, %r27, %r24;
	mul.lo.s32 	%r6, %r28, %r23;
	mov.u32 	%r63, %tid.x;
	setp.ge.s32 	%p1, %r63, %r18;
	@%p1 bra 	$L__BB136_7;

	not.b32 	%r29, %r63;
	add.s32 	%r8, %r29, %r18;
	shr.u32 	%r30, %r8, 10;
	add.s32 	%r31, %r30, 1;
	and.b32  	%r62, %r31, 3;
	setp.eq.s32 	%p2, %r62, 0;
	@%p2 bra 	$L__BB136_4;

	mad.lo.s32 	%r32, %r63, %r19, %r4;
	add.s32 	%r33, %r32, %r5;
	add.s32 	%r34, %r33, %r6;
	cvt.s64.s32 	%rd33, %r34;
	add.s64 	%rd44, %rd1, %rd33;
	shl.b32 	%r35, %r19, 10;
	cvt.s64.s32 	%rd4, %r35;
	mad.lo.s32 	%r36, %r63, %r17, %r1;
	add.s32 	%r37, %r36, %r2;
	add.s32 	%r38, %r37, %r3;
	cvt.s64.s32 	%rd34, %r38;
	add.s64 	%rd43, %rd49, %rd34;
	shl.b32 	%r39, %r17, 10;
	cvt.s64.s32 	%rd6, %r39;

$L__BB136_3:
	.pragma "nounroll";
	ld.global.u8 	%rs1, [%rd43];
	st.global.u8 	[%rd44], %rs1;
	add.s32 	%r63, %r63, 1024;
	add.s64 	%rd44, %rd44, %rd4;
	add.s64 	%rd43, %rd43, %rd6;
	add.s32 	%r62, %r62, -1;
	setp.ne.s32 	%p3, %r62, 0;
	@%p3 bra 	$L__BB136_3;

$L__BB136_4:
	setp.lt.u32 	%p4, %r8, 3072;
	@%p4 bra 	$L__BB136_7;

	add.s32 	%r40, %r1, %r2;
	add.s32 	%r41, %r40, %r3;
	add.s32 	%r42, %r63, 1024;
	mad.lo.s32 	%r43, %r17, %r42, %r41;
	cvt.s64.s32 	%rd11, %r43;
	shl.b32 	%r44, %r17, 12;
	cvt.s64.s32 	%rd12, %r44;
	add.s32 	%r45, %r63, 2048;
	mad.lo.s32 	%r46, %r17, %r45, %r41;
	cvt.s64.s32 	%rd13, %r46;
	add.s32 	%r47, %r63, 3072;
	mad.lo.s32 	%r48, %r17, %r47, %r41;
	cvt.s64.s32 	%rd14, %r48;
	mad.lo.s32 	%r49, %r63, %r17, %r1;
	add.s32 	%r50, %r49, %r2;
	add.s32 	%r51, %r50, %r3;
	cvt.s64.s32 	%rd15, %r51;
	add.s32 	%r52, %r4, %r5;
	add.s32 	%r53, %r52, %r6;
	mad.lo.s32 	%r54, %r19, %r42, %r53;
	cvt.s64.s32 	%rd35, %r54;
	add.s64 	%rd48, %rd1, %rd35;
	shl.b32 	%r55, %r19, 12;
	cvt.s64.s32 	%rd17, %r55;
	mad.lo.s32 	%r56, %r19, %r45, %r53;
	cvt.s64.s32 	%rd36, %r56;
	add.s64 	%rd47, %rd1, %rd36;
	mad.lo.s32 	%r57, %r19, %r47, %r53;
	cvt.s64.s32 	%rd37, %r57;
	add.s64 	%rd46, %rd1, %rd37;
	mad.lo.s32 	%r58, %r63, %r19, %r4;
	add.s32 	%r59, %r58, %r5;
	add.s32 	%r60, %r59, %r6;
	cvt.s64.s32 	%rd38, %r60;
	add.s64 	%rd45, %rd1, %rd38;

$L__BB136_6:
	add.s64 	%rd39, %rd49, %rd15;
	ld.global.u8 	%rs2, [%rd39];
	st.global.u8 	[%rd45], %rs2;
	add.s64 	%rd40, %rd49, %rd11;
	ld.global.u8 	%rs3, [%rd40];
	st.global.u8 	[%rd48], %rs3;
	add.s64 	%rd41, %rd49, %rd13;
	ld.global.u8 	%rs4, [%rd41];
	st.global.u8 	[%rd47], %rs4;
	add.s64 	%rd42, %rd49, %rd14;
	ld.global.u8 	%rs5, [%rd42];
	st.global.u8 	[%rd46], %rs5;
	add.s64 	%rd49, %rd49, %rd12;
	add.s64 	%rd48, %rd48, %rd17;
	add.s64 	%rd47, %rd47, %rd17;
	add.s64 	%rd46, %rd46, %rd17;
	add.s64 	%rd45, %rd45, %rd17;
	add.s32 	%r63, %r63, 4096;
	setp.lt.s32 	%p5, %r63, %r18;
	@%p5 bra 	$L__BB136_6;

$L__BB136_7:
	ret;

}
	// .globl	copy_nd5_u8
.visible .entry copy_nd5_u8(
	.param .u64 copy_nd5_u8_param_0,
	.param .u64 copy_nd5_u8_param_1,
	.param .u32 copy_nd5_u8_param_2,
	.param .u32 copy_nd5_u8_param_3,
	.param .u32 copy_nd5_u8_param_4,
	.param .u32 copy_nd5_u8_param_5,
	.param .u32 copy_nd5_u8_param_6,
	.param .u32 copy_nd5_u8_param_7,
	.param .u32 copy_nd5_u8_param_8,
	.param .u32 copy_nd5_u8_param_9,
	.param .u32 copy_nd5_u8_param_10,
	.param .u32 copy_nd5_u8_param_11,
	.param .u32 copy_nd5_u8_param_12,
	.param .u32 copy_nd5_u8_param_13,
	.param .u32 copy_nd5_u8_param_14,
	.param .u32 copy_nd5_u8_param_15,
	.param .u32 copy_nd5_u8_param_16
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<81>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd31, [copy_nd5_u8_param_0];
	ld.param.u64 	%rd32, [copy_nd5_u8_param_1];
	ld.param.u32 	%r17, [copy_nd5_u8_param_2];
	ld.param.u32 	%r18, [copy_nd5_u8_param_3];
	ld.param.u32 	%r24, [copy_nd5_u8_param_4];
	ld.param.u32 	%r25, [copy_nd5_u8_param_5];
	ld.param.u32 	%r19, [copy_nd5_u8_param_6];
	ld.param.u32 	%r26, [copy_nd5_u8_param_7];
	ld.param.u32 	%r27, [copy_nd5_u8_param_8];
	ld.param.u32 	%r20, [copy_nd5_u8_param_11];
	ld.param.u32 	%r21, [copy_nd5_u8_param_12];
	ld.param.u32 	%r22, [copy_nd5_u8_param_13];
	ld.param.u32 	%r28, [copy_nd5_u8_param_14];
	ld.param.u32 	%r29, [copy_nd5_u8_param_15];
	ld.param.u32 	%r23, [copy_nd5_u8_param_16];
	cvta.to.global.u64 	%rd1, %rd32;
	cvta.to.global.u64 	%rd49, %rd31;
	mov.u32 	%r30, %ctaid.x;
	mul.lo.s32 	%r1, %r30, %r25;
	mov.u32 	%r31, %ctaid.y;
	mul.lo.s32 	%r2, %r31, %r24;
	mul.lo.s32 	%r3, %r30, %r29;
	mul.lo.s32 	%r4, %r31, %r28;
	mov.u32 	%r32, %ctaid.z;
	div.s32 	%r33, %r32, %r27;
	mul.lo.s32 	%r34, %r33, %r27;
	sub.s32 	%r5, %r32, %r34;
	rem.s32 	%r6, %r33, %r26;
	mov.u32 	%r79, %tid.x;
	setp.ge.s32 	%p1, %r79, %r20;
	@%p1 bra 	$L__BB137_7;

	not.b32 	%r35, %r79;
	add.s32 	%r8, %r35, %r20;
	shr.u32 	%r36, %r8, 10;
	add.s32 	%r37, %r36, 1;
	and.b32  	%r78, %r37, 3;
	setp.eq.s32 	%p2, %r78, 0;
	@%p2 bra 	$L__BB137_4;

	mad.lo.s32 	%r38, %r79, %r23, %r3;
	add.s32 	%r39, %r38, %r4;
	mad.lo.s32 	%r40, %r5, %r22, %r39;
	mad.lo.s32 	%r41, %r6, %r21, %r40;
	cvt.s64.s32 	%rd33, %r41;
	add.s64 	%rd44, %rd1, %rd33;
	shl.b32 	%r42, %r23, 10;
	cvt.s64.s32 	%rd4, %r42;
	mad.lo.s32 	%r43, %r79, %r19, %r1;
	add.s32 	%r44, %r43, %r2;
	mad.lo.s32 	%r45, %r5, %r18, %r44;
	mad.lo.s32 	%r46, %r6, %r17, %r45;
	cvt.s64.s32 	%rd34, %r46;
	add.s64 	%rd43, %rd49, %rd34;
	shl.b32 	%r47, %r19, 10;
	cvt.s64.s32 	%rd6, %r47;

$L__BB137_3:
	.pragma "nounroll";
	ld.global.u8 	%rs1, [%rd43];
	st.global.u8 	[%rd44], %rs1;
	add.s32 	%r79, %r79, 1024;
	add.s64 	%rd44, %rd44, %rd4;
	add.s64 	%rd43, %rd43, %rd6;
	add.s32 	%r78, %r78, -1;
	setp.ne.s32 	%p3, %r78, 0;
	@%p3 bra 	$L__BB137_3;

$L__BB137_4:
	setp.lt.u32 	%p4, %r8, 3072;
	@%p4 bra 	$L__BB137_7;

	add.s32 	%r48, %r1, %r2;
	mul.lo.s32 	%r49, %r5, %r18;
	add.s32 	%r50, %r48, %r49;
	mul.lo.s32 	%r51, %r6, %r17;
	add.s32 	%r52, %r50, %r51;
	add.s32 	%r53, %r79, 1024;
	mad.lo.s32 	%r54, %r19, %r53, %r52;
	cvt.s64.s32 	%rd11, %r54;
	shl.b32 	%r55, %r19, 12;
	cvt.s64.s32 	%rd12, %r55;
	add.s32 	%r56, %r79, 2048;
	mad.lo.s32 	%r57, %r19, %r56, %r52;
	cvt.s64.s32 	%rd13, %r57;
	add.s32 	%r58, %r79, 3072;
	mad.lo.s32 	%r59, %r19, %r58, %r52;
	cvt.s64.s32 	%rd14, %r59;
	mad.lo.s32 	%r60, %r79, %r19, %r1;
	add.s32 	%r61, %r60, %r2;
	add.s32 	%r62, %r61, %r49;
	add.s32 	%r63, %r62, %r51;
	cvt.s64.s32 	%rd15, %r63;
	mul.lo.s32 	%r64, %r5, %r22;
	add.s32 	%r65, %r3, %r4;
	add.s32 	%r66, %r65, %r64;
	mul.lo.s32 	%r67, %r6, %r21;
	add.s32 	%r68, %r66, %r67;
	mad.lo.s32 	%r69, %r23, %r53, %r68;
	cvt.s64.s32 	%rd35, %r69;
	add.s64 	%rd48, %rd1, %rd35;
	shl.b32 	%r70, %r23, 12;
	cvt.s64.s32 	%rd17, %r70;
	mad.lo.s32 	%r71, %r23, %r56, %r68;
	cvt.s64.s32 	%rd36, %r71;
	add.s64 	%rd47, %rd1, %rd36;
	mad.lo.s32 	%r72, %r23, %r58, %r68;
	cvt.s64.s32 	%rd37, %r72;
	add.s64 	%rd46, %rd1, %rd37;
	mad.lo.s32 	%r73, %r79, %r23, %r3;
	add.s32 	%r74, %r73, %r4;
	add.s32 	%r75, %r74, %r64;
	add.s32 	%r76, %r75, %r67;
	cvt.s64.s32 	%rd38, %r76;
	add.s64 	%rd45, %rd1, %rd38;

$L__BB137_6:
	add.s64 	%rd39, %rd49, %rd15;
	ld.global.u8 	%rs2, [%rd39];
	st.global.u8 	[%rd45], %rs2;
	add.s64 	%rd40, %rd49, %rd11;
	ld.global.u8 	%rs3, [%rd40];
	st.global.u8 	[%rd48], %rs3;
	add.s64 	%rd41, %rd49, %rd13;
	ld.global.u8 	%rs4, [%rd41];
	st.global.u8 	[%rd47], %rs4;
	add.s64 	%rd42, %rd49, %rd14;
	ld.global.u8 	%rs5, [%rd42];
	st.global.u8 	[%rd46], %rs5;
	add.s64 	%rd49, %rd49, %rd12;
	add.s64 	%rd48, %rd48, %rd17;
	add.s64 	%rd47, %rd47, %rd17;
	add.s64 	%rd46, %rd46, %rd17;
	add.s64 	%rd45, %rd45, %rd17;
	add.s32 	%r79, %r79, 4096;
	setp.lt.s32 	%p5, %r79, %r20;
	@%p5 bra 	$L__BB137_6;

$L__BB137_7:
	ret;

}
	// .globl	copy_nd6_u8
.visible .entry copy_nd6_u8(
	.param .u64 copy_nd6_u8_param_0,
	.param .u64 copy_nd6_u8_param_1,
	.param .u32 copy_nd6_u8_param_2,
	.param .u32 copy_nd6_u8_param_3,
	.param .u32 copy_nd6_u8_param_4,
	.param .u32 copy_nd6_u8_param_5,
	.param .u32 copy_nd6_u8_param_6,
	.param .u32 copy_nd6_u8_param_7,
	.param .u32 copy_nd6_u8_param_8,
	.param .u32 copy_nd6_u8_param_9,
	.param .u32 copy_nd6_u8_param_10,
	.param .u32 copy_nd6_u8_param_11,
	.param .u32 copy_nd6_u8_param_12,
	.param .u32 copy_nd6_u8_param_13,
	.param .u32 copy_nd6_u8_param_14,
	.param .u32 copy_nd6_u8_param_15,
	.param .u32 copy_nd6_u8_param_16,
	.param .u32 copy_nd6_u8_param_17,
	.param .u32 copy_nd6_u8_param_18,
	.param .u32 copy_nd6_u8_param_19
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<95>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd31, [copy_nd6_u8_param_0];
	ld.param.u64 	%rd32, [copy_nd6_u8_param_1];
	ld.param.u32 	%r18, [copy_nd6_u8_param_2];
	ld.param.u32 	%r19, [copy_nd6_u8_param_3];
	ld.param.u32 	%r20, [copy_nd6_u8_param_4];
	ld.param.u32 	%r27, [copy_nd6_u8_param_5];
	ld.param.u32 	%r28, [copy_nd6_u8_param_6];
	ld.param.u32 	%r21, [copy_nd6_u8_param_7];
	ld.param.u32 	%r29, [copy_nd6_u8_param_8];
	ld.param.u32 	%r30, [copy_nd6_u8_param_9];
	ld.param.u32 	%r31, [copy_nd6_u8_param_10];
	ld.param.u32 	%r22, [copy_nd6_u8_param_13];
	ld.param.u32 	%r23, [copy_nd6_u8_param_14];
	ld.param.u32 	%r24, [copy_nd6_u8_param_15];
	ld.param.u32 	%r25, [copy_nd6_u8_param_16];
	ld.param.u32 	%r32, [copy_nd6_u8_param_17];
	ld.param.u32 	%r33, [copy_nd6_u8_param_18];
	ld.param.u32 	%r26, [copy_nd6_u8_param_19];
	cvta.to.global.u64 	%rd1, %rd32;
	cvta.to.global.u64 	%rd49, %rd31;
	mov.u32 	%r34, %ctaid.x;
	mul.lo.s32 	%r1, %r34, %r28;
	mov.u32 	%r35, %ctaid.y;
	mul.lo.s32 	%r2, %r35, %r27;
	mul.lo.s32 	%r3, %r34, %r33;
	mul.lo.s32 	%r4, %r35, %r32;
	mov.u32 	%r36, %ctaid.z;
	div.s32 	%r37, %r36, %r31;
	mul.lo.s32 	%r38, %r37, %r31;
	sub.s32 	%r5, %r36, %r38;
	div.s32 	%r39, %r37, %r30;
	mul.lo.s32 	%r40, %r39, %r30;
	sub.s32 	%r6, %r37, %r40;
	rem.s32 	%r7, %r39, %r29;
	mov.u32 	%r93, %tid.x;
	setp.ge.s32 	%p1, %r93, %r22;
	@%p1 bra 	$L__BB138_7;

	not.b32 	%r41, %r93;
	add.s32 	%r9, %r41, %r22;
	shr.u32 	%r42, %r9, 10;
	add.s32 	%r43, %r42, 1;
	and.b32  	%r92, %r43, 3;
	setp.eq.s32 	%p2, %r92, 0;
	@%p2 bra 	$L__BB138_4;

	mad.lo.s32 	%r44, %r93, %r26, %r3;
	add.s32 	%r45, %r44, %r4;
	mad.lo.s32 	%r46, %r5, %r25, %r45;
	mad.lo.s32 	%r47, %r6, %r24, %r46;
	mad.lo.s32 	%r48, %r7, %r23, %r47;
	cvt.s64.s32 	%rd33, %r48;
	add.s64 	%rd44, %rd1, %rd33;
	shl.b32 	%r49, %r26, 10;
	cvt.s64.s32 	%rd4, %r49;
	mad.lo.s32 	%r50, %r93, %r21, %r1;
	add.s32 	%r51, %r50, %r2;
	mad.lo.s32 	%r52, %r5, %r20, %r51;
	mad.lo.s32 	%r53, %r6, %r19, %r52;
	mad.lo.s32 	%r54, %r7, %r18, %r53;
	cvt.s64.s32 	%rd34, %r54;
	add.s64 	%rd43, %rd49, %rd34;
	shl.b32 	%r55, %r21, 10;
	cvt.s64.s32 	%rd6, %r55;

$L__BB138_3:
	.pragma "nounroll";
	ld.global.u8 	%rs1, [%rd43];
	st.global.u8 	[%rd44], %rs1;
	add.s32 	%r93, %r93, 1024;
	add.s64 	%rd44, %rd44, %rd4;
	add.s64 	%rd43, %rd43, %rd6;
	add.s32 	%r92, %r92, -1;
	setp.ne.s32 	%p3, %r92, 0;
	@%p3 bra 	$L__BB138_3;

$L__BB138_4:
	setp.lt.u32 	%p4, %r9, 3072;
	@%p4 bra 	$L__BB138_7;

	add.s32 	%r56, %r1, %r2;
	mul.lo.s32 	%r57, %r5, %r20;
	add.s32 	%r58, %r56, %r57;
	mul.lo.s32 	%r59, %r6, %r19;
	add.s32 	%r60, %r58, %r59;
	mul.lo.s32 	%r61, %r7, %r18;
	add.s32 	%r62, %r60, %r61;
	add.s32 	%r63, %r93, 1024;
	mad.lo.s32 	%r64, %r21, %r63, %r62;
	cvt.s64.s32 	%rd11, %r64;
	shl.b32 	%r65, %r21, 12;
	cvt.s64.s32 	%rd12, %r65;
	add.s32 	%r66, %r93, 2048;
	mad.lo.s32 	%r67, %r21, %r66, %r62;
	cvt.s64.s32 	%rd13, %r67;
	add.s32 	%r68, %r93, 3072;
	mad.lo.s32 	%r69, %r21, %r68, %r62;
	cvt.s64.s32 	%rd14, %r69;
	mad.lo.s32 	%r70, %r93, %r21, %r1;
	add.s32 	%r71, %r70, %r2;
	add.s32 	%r72, %r71, %r57;
	add.s32 	%r73, %r72, %r59;
	add.s32 	%r74, %r73, %r61;
	cvt.s64.s32 	%rd15, %r74;
	mul.lo.s32 	%r75, %r5, %r25;
	add.s32 	%r76, %r3, %r4;
	add.s32 	%r77, %r76, %r75;
	mul.lo.s32 	%r78, %r6, %r24;
	add.s32 	%r79, %r77, %r78;
	mul.lo.s32 	%r80, %r7, %r23;
	add.s32 	%r81, %r79, %r80;
	mad.lo.s32 	%r82, %r26, %r63, %r81;
	cvt.s64.s32 	%rd35, %r82;
	add.s64 	%rd48, %rd1, %rd35;
	shl.b32 	%r83, %r26, 12;
	cvt.s64.s32 	%rd17, %r83;
	mad.lo.s32 	%r84, %r26, %r66, %r81;
	cvt.s64.s32 	%rd36, %r84;
	add.s64 	%rd47, %rd1, %rd36;
	mad.lo.s32 	%r85, %r26, %r68, %r81;
	cvt.s64.s32 	%rd37, %r85;
	add.s64 	%rd46, %rd1, %rd37;
	mad.lo.s32 	%r86, %r93, %r26, %r3;
	add.s32 	%r87, %r86, %r4;
	add.s32 	%r88, %r87, %r75;
	add.s32 	%r89, %r88, %r78;
	add.s32 	%r90, %r89, %r80;
	cvt.s64.s32 	%rd38, %r90;
	add.s64 	%rd45, %rd1, %rd38;

$L__BB138_6:
	add.s64 	%rd39, %rd49, %rd15;
	ld.global.u8 	%rs2, [%rd39];
	st.global.u8 	[%rd45], %rs2;
	add.s64 	%rd40, %rd49, %rd11;
	ld.global.u8 	%rs3, [%rd40];
	st.global.u8 	[%rd48], %rs3;
	add.s64 	%rd41, %rd49, %rd13;
	ld.global.u8 	%rs4, [%rd41];
	st.global.u8 	[%rd47], %rs4;
	add.s64 	%rd42, %rd49, %rd14;
	ld.global.u8 	%rs5, [%rd42];
	st.global.u8 	[%rd46], %rs5;
	add.s64 	%rd49, %rd49, %rd12;
	add.s64 	%rd48, %rd48, %rd17;
	add.s64 	%rd47, %rd47, %rd17;
	add.s64 	%rd46, %rd46, %rd17;
	add.s64 	%rd45, %rd45, %rd17;
	add.s32 	%r93, %r93, 4096;
	setp.lt.s32 	%p5, %r93, %r22;
	@%p5 bra 	$L__BB138_6;

$L__BB138_7:
	ret;

}
	// .globl	cast_u8_bool
.visible .entry cast_u8_bool(
	.param .u64 cast_u8_bool_param_0,
	.param .u64 cast_u8_bool_param_1,
	.param .u32 cast_u8_bool_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_u8_bool_param_0];
	ld.param.u64 	%rd2, [cast_u8_bool_param_1];
	ld.param.u32 	%r2, [cast_u8_bool_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB139_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u8 	%rs1, [%rd5];
	setp.ne.s16 	%p2, %rs1, 0;
	selp.u16 	%rs2, 1, 0, %p2;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u8 	[%rd7], %rs2;

$L__BB139_2:
	ret;

}
	// .globl	cast_u8_f32
.visible .entry cast_u8_f32(
	.param .u64 cast_u8_f32_param_0,
	.param .u64 cast_u8_f32_param_1,
	.param .u32 cast_u8_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_u8_f32_param_0];
	ld.param.u64 	%rd2, [cast_u8_f32_param_1];
	ld.param.u32 	%r2, [cast_u8_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB140_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u8 	%rs1, [%rd5];
	cvt.rn.f32.u16 	%f1, %rs1;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB140_2:
	ret;

}
	// .globl	cast_u8_f16
.visible .entry cast_u8_f16(
	.param .u64 cast_u8_f16_param_0,
	.param .u64 cast_u8_f16_param_1,
	.param .u32 cast_u8_f16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_u8_f16_param_0];
	ld.param.u64 	%rd2, [cast_u8_f16_param_1];
	ld.param.u32 	%r2, [cast_u8_f16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB141_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u8 	%r6, [%rd5];
	// begin inline asm
	cvt.rn.f16.s32 %rs1, %r6;
	// end inline asm
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 2;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u16 	[%rd8], %rs1;

$L__BB141_2:
	ret;

}
	// .globl	cast_u8_u8
.visible .entry cast_u8_u8(
	.param .u64 cast_u8_u8_param_0,
	.param .u64 cast_u8_u8_param_1,
	.param .u32 cast_u8_u8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_u8_u8_param_0];
	ld.param.u64 	%rd2, [cast_u8_u8_param_1];
	ld.param.u32 	%r2, [cast_u8_u8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB142_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u8 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u8 	[%rd7], %rs1;

$L__BB142_2:
	ret;

}
	// .globl	cast_u8_u16
.visible .entry cast_u8_u16(
	.param .u64 cast_u8_u16_param_0,
	.param .u64 cast_u8_u16_param_1,
	.param .u32 cast_u8_u16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_u8_u16_param_0];
	ld.param.u64 	%rd2, [cast_u8_u16_param_1];
	ld.param.u32 	%r2, [cast_u8_u16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB143_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u8 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 2;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u16 	[%rd8], %rs1;

$L__BB143_2:
	ret;

}
	// .globl	cast_u8_u32
.visible .entry cast_u8_u32(
	.param .u64 cast_u8_u32_param_0,
	.param .u64 cast_u8_u32_param_1,
	.param .u32 cast_u8_u32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_u8_u32_param_0];
	ld.param.u64 	%rd2, [cast_u8_u32_param_1];
	ld.param.u32 	%r2, [cast_u8_u32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB144_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u8 	%r6, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u32 	[%rd8], %r6;

$L__BB144_2:
	ret;

}
	// .globl	cast_u8_u64
.visible .entry cast_u8_u64(
	.param .u64 cast_u8_u64_param_0,
	.param .u64 cast_u8_u64_param_1,
	.param .u32 cast_u8_u64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_u8_u64_param_0];
	ld.param.u64 	%rd2, [cast_u8_u64_param_1];
	ld.param.u32 	%r2, [cast_u8_u64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB145_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u8 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u64 	[%rd9], %rd6;

$L__BB145_2:
	ret;

}
	// .globl	cast_u8_i8
.visible .entry cast_u8_i8(
	.param .u64 cast_u8_i8_param_0,
	.param .u64 cast_u8_i8_param_1,
	.param .u32 cast_u8_i8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_u8_i8_param_0];
	ld.param.u64 	%rd2, [cast_u8_i8_param_1];
	ld.param.u32 	%r2, [cast_u8_i8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB146_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u8 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u8 	[%rd7], %rs1;

$L__BB146_2:
	ret;

}
	// .globl	cast_u8_i16
.visible .entry cast_u8_i16(
	.param .u64 cast_u8_i16_param_0,
	.param .u64 cast_u8_i16_param_1,
	.param .u32 cast_u8_i16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_u8_i16_param_0];
	ld.param.u64 	%rd2, [cast_u8_i16_param_1];
	ld.param.u32 	%r2, [cast_u8_i16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB147_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u8 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 2;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u16 	[%rd8], %rs1;

$L__BB147_2:
	ret;

}
	// .globl	cast_u8_i32
.visible .entry cast_u8_i32(
	.param .u64 cast_u8_i32_param_0,
	.param .u64 cast_u8_i32_param_1,
	.param .u32 cast_u8_i32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_u8_i32_param_0];
	ld.param.u64 	%rd2, [cast_u8_i32_param_1];
	ld.param.u32 	%r2, [cast_u8_i32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB148_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u8 	%r6, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u32 	[%rd8], %r6;

$L__BB148_2:
	ret;

}
	// .globl	cast_u8_i64
.visible .entry cast_u8_i64(
	.param .u64 cast_u8_i64_param_0,
	.param .u64 cast_u8_i64_param_1,
	.param .u32 cast_u8_i64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_u8_i64_param_0];
	ld.param.u64 	%rd2, [cast_u8_i64_param_1];
	ld.param.u32 	%r2, [cast_u8_i64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB149_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u8 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u64 	[%rd9], %rd6;

$L__BB149_2:
	ret;

}
	// .globl	copy_unicast_u16
.visible .entry copy_unicast_u16(
	.param .u64 copy_unicast_u16_param_0,
	.param .u64 copy_unicast_u16_param_1,
	.param .u32 copy_unicast_u16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [copy_unicast_u16_param_0];
	ld.param.u64 	%rd2, [copy_unicast_u16_param_1];
	ld.param.u32 	%r2, [copy_unicast_u16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB150_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u16 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u16 	[%rd7], %rs1;

$L__BB150_2:
	ret;

}
	// .globl	copy_nd1_u16
.visible .entry copy_nd1_u16(
	.param .u64 copy_nd1_u16_param_0,
	.param .u64 copy_nd1_u16_param_1,
	.param .u32 copy_nd1_u16_param_2,
	.param .u32 copy_nd1_u16_param_3,
	.param .u32 copy_nd1_u16_param_4
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<29>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd1_u16_param_0];
	ld.param.u64 	%rd20, [copy_nd1_u16_param_1];
	ld.param.u32 	%r11, [copy_nd1_u16_param_2];
	ld.param.u32 	%r12, [copy_nd1_u16_param_3];
	ld.param.u32 	%r13, [copy_nd1_u16_param_4];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r27, %tid.x;
	setp.ge.s32 	%p1, %r27, %r12;
	@%p1 bra 	$L__BB151_7;

	not.b32 	%r14, %r27;
	add.s32 	%r2, %r14, %r12;
	shr.u32 	%r15, %r2, 10;
	add.s32 	%r16, %r15, 1;
	and.b32  	%r26, %r16, 3;
	setp.eq.s32 	%p2, %r26, 0;
	@%p2 bra 	$L__BB151_4;

	mul.lo.s32 	%r17, %r27, %r13;
	mul.wide.s32 	%rd21, %r17, 2;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r18, %r13, 10;
	mul.wide.s32 	%rd4, %r18, 2;
	mul.lo.s32 	%r19, %r27, %r11;
	mul.wide.s32 	%rd22, %r19, 2;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r20, %r11, 10;
	mul.wide.s32 	%rd6, %r20, 2;

$L__BB151_3:
	.pragma "nounroll";
	ld.global.u16 	%rs1, [%rd31];
	st.global.u16 	[%rd32], %rs1;
	add.s32 	%r27, %r27, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r26, %r26, -1;
	setp.ne.s32 	%p3, %r26, 0;
	@%p3 bra 	$L__BB151_3;

$L__BB151_4:
	setp.lt.u32 	%p4, %r2, 3072;
	@%p4 bra 	$L__BB151_7;

	mul.lo.s32 	%r21, %r27, %r11;
	mul.lo.s32 	%r22, %r27, %r13;
	mul.wide.s32 	%rd23, %r22, 2;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r21, 2;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r23, %r11, 10;
	mul.wide.s32 	%rd13, %r23, 2;
	shl.b32 	%r24, %r13, 10;
	mul.wide.s32 	%rd14, %r24, 2;

$L__BB151_6:
	ld.global.u16 	%rs2, [%rd34];
	st.global.u16 	[%rd33], %rs2;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u16 	%rs3, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u16 	[%rd26], %rs3;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u16 	%rs4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u16 	[%rd28], %rs4;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u16 	%rs5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u16 	[%rd30], %rs5;
	add.s32 	%r27, %r27, 4096;
	setp.lt.s32 	%p5, %r27, %r12;
	@%p5 bra 	$L__BB151_6;

$L__BB151_7:
	ret;

}
	// .globl	copy_nd2_u16
.visible .entry copy_nd2_u16(
	.param .u64 copy_nd2_u16_param_0,
	.param .u64 copy_nd2_u16_param_1,
	.param .u32 copy_nd2_u16_param_2,
	.param .u32 copy_nd2_u16_param_3,
	.param .u32 copy_nd2_u16_param_4,
	.param .u32 copy_nd2_u16_param_5,
	.param .u32 copy_nd2_u16_param_6,
	.param .u32 copy_nd2_u16_param_7
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<34>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd2_u16_param_0];
	ld.param.u64 	%rd20, [copy_nd2_u16_param_1];
	ld.param.u32 	%r16, [copy_nd2_u16_param_2];
	ld.param.u32 	%r13, [copy_nd2_u16_param_3];
	ld.param.u32 	%r14, [copy_nd2_u16_param_5];
	ld.param.u32 	%r17, [copy_nd2_u16_param_6];
	ld.param.u32 	%r15, [copy_nd2_u16_param_7];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r18, %ctaid.x;
	mul.lo.s32 	%r1, %r18, %r16;
	mul.lo.s32 	%r2, %r18, %r17;
	mov.u32 	%r32, %tid.x;
	setp.ge.s32 	%p1, %r32, %r14;
	@%p1 bra 	$L__BB152_7;

	not.b32 	%r19, %r32;
	add.s32 	%r4, %r19, %r14;
	shr.u32 	%r20, %r4, 10;
	add.s32 	%r21, %r20, 1;
	and.b32  	%r31, %r21, 3;
	setp.eq.s32 	%p2, %r31, 0;
	@%p2 bra 	$L__BB152_4;

	mad.lo.s32 	%r22, %r32, %r15, %r2;
	mul.wide.s32 	%rd21, %r22, 2;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r23, %r15, 10;
	mul.wide.s32 	%rd4, %r23, 2;
	mad.lo.s32 	%r24, %r32, %r13, %r1;
	mul.wide.s32 	%rd22, %r24, 2;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r25, %r13, 10;
	mul.wide.s32 	%rd6, %r25, 2;

$L__BB152_3:
	.pragma "nounroll";
	ld.global.u16 	%rs1, [%rd31];
	st.global.u16 	[%rd32], %rs1;
	add.s32 	%r32, %r32, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r31, %r31, -1;
	setp.ne.s32 	%p3, %r31, 0;
	@%p3 bra 	$L__BB152_3;

$L__BB152_4:
	setp.lt.u32 	%p4, %r4, 3072;
	@%p4 bra 	$L__BB152_7;

	mad.lo.s32 	%r26, %r32, %r13, %r1;
	mad.lo.s32 	%r27, %r32, %r15, %r2;
	mul.wide.s32 	%rd23, %r27, 2;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r26, 2;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r28, %r13, 10;
	mul.wide.s32 	%rd13, %r28, 2;
	shl.b32 	%r29, %r15, 10;
	mul.wide.s32 	%rd14, %r29, 2;

$L__BB152_6:
	ld.global.u16 	%rs2, [%rd34];
	st.global.u16 	[%rd33], %rs2;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u16 	%rs3, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u16 	[%rd26], %rs3;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u16 	%rs4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u16 	[%rd28], %rs4;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u16 	%rs5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u16 	[%rd30], %rs5;
	add.s32 	%r32, %r32, 4096;
	setp.lt.s32 	%p5, %r32, %r14;
	@%p5 bra 	$L__BB152_6;

$L__BB152_7:
	ret;

}
	// .globl	copy_nd3_u16
.visible .entry copy_nd3_u16(
	.param .u64 copy_nd3_u16_param_0,
	.param .u64 copy_nd3_u16_param_1,
	.param .u32 copy_nd3_u16_param_2,
	.param .u32 copy_nd3_u16_param_3,
	.param .u32 copy_nd3_u16_param_4,
	.param .u32 copy_nd3_u16_param_5,
	.param .u32 copy_nd3_u16_param_6,
	.param .u32 copy_nd3_u16_param_7,
	.param .u32 copy_nd3_u16_param_8,
	.param .u32 copy_nd3_u16_param_9,
	.param .u32 copy_nd3_u16_param_10
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<43>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd3_u16_param_0];
	ld.param.u64 	%rd20, [copy_nd3_u16_param_1];
	ld.param.u32 	%r18, [copy_nd3_u16_param_2];
	ld.param.u32 	%r19, [copy_nd3_u16_param_3];
	ld.param.u32 	%r15, [copy_nd3_u16_param_4];
	ld.param.u32 	%r16, [copy_nd3_u16_param_7];
	ld.param.u32 	%r20, [copy_nd3_u16_param_8];
	ld.param.u32 	%r21, [copy_nd3_u16_param_9];
	ld.param.u32 	%r17, [copy_nd3_u16_param_10];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r22, %ctaid.x;
	mul.lo.s32 	%r1, %r22, %r19;
	mov.u32 	%r23, %ctaid.y;
	mul.lo.s32 	%r2, %r23, %r18;
	mul.lo.s32 	%r3, %r22, %r21;
	mul.lo.s32 	%r4, %r23, %r20;
	mov.u32 	%r41, %tid.x;
	setp.ge.s32 	%p1, %r41, %r16;
	@%p1 bra 	$L__BB153_7;

	not.b32 	%r24, %r41;
	add.s32 	%r6, %r24, %r16;
	shr.u32 	%r25, %r6, 10;
	add.s32 	%r26, %r25, 1;
	and.b32  	%r40, %r26, 3;
	setp.eq.s32 	%p2, %r40, 0;
	@%p2 bra 	$L__BB153_4;

	mad.lo.s32 	%r27, %r41, %r17, %r3;
	add.s32 	%r28, %r27, %r4;
	mul.wide.s32 	%rd21, %r28, 2;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r29, %r17, 10;
	mul.wide.s32 	%rd4, %r29, 2;
	mad.lo.s32 	%r30, %r41, %r15, %r1;
	add.s32 	%r31, %r30, %r2;
	mul.wide.s32 	%rd22, %r31, 2;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r32, %r15, 10;
	mul.wide.s32 	%rd6, %r32, 2;

$L__BB153_3:
	.pragma "nounroll";
	ld.global.u16 	%rs1, [%rd31];
	st.global.u16 	[%rd32], %rs1;
	add.s32 	%r41, %r41, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r40, %r40, -1;
	setp.ne.s32 	%p3, %r40, 0;
	@%p3 bra 	$L__BB153_3;

$L__BB153_4:
	setp.lt.u32 	%p4, %r6, 3072;
	@%p4 bra 	$L__BB153_7;

	mad.lo.s32 	%r33, %r41, %r15, %r1;
	add.s32 	%r34, %r33, %r2;
	mad.lo.s32 	%r35, %r41, %r17, %r3;
	add.s32 	%r36, %r35, %r4;
	mul.wide.s32 	%rd23, %r36, 2;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r34, 2;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r37, %r15, 10;
	mul.wide.s32 	%rd13, %r37, 2;
	shl.b32 	%r38, %r17, 10;
	mul.wide.s32 	%rd14, %r38, 2;

$L__BB153_6:
	ld.global.u16 	%rs2, [%rd34];
	st.global.u16 	[%rd33], %rs2;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u16 	%rs3, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u16 	[%rd26], %rs3;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u16 	%rs4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u16 	[%rd28], %rs4;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u16 	%rs5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u16 	[%rd30], %rs5;
	add.s32 	%r41, %r41, 4096;
	setp.lt.s32 	%p5, %r41, %r16;
	@%p5 bra 	$L__BB153_6;

$L__BB153_7:
	ret;

}
	// .globl	copy_nd4_u16
.visible .entry copy_nd4_u16(
	.param .u64 copy_nd4_u16_param_0,
	.param .u64 copy_nd4_u16_param_1,
	.param .u32 copy_nd4_u16_param_2,
	.param .u32 copy_nd4_u16_param_3,
	.param .u32 copy_nd4_u16_param_4,
	.param .u32 copy_nd4_u16_param_5,
	.param .u32 copy_nd4_u16_param_6,
	.param .u32 copy_nd4_u16_param_7,
	.param .u32 copy_nd4_u16_param_8,
	.param .u32 copy_nd4_u16_param_9,
	.param .u32 copy_nd4_u16_param_10,
	.param .u32 copy_nd4_u16_param_11,
	.param .u32 copy_nd4_u16_param_12,
	.param .u32 copy_nd4_u16_param_13
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<52>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd4_u16_param_0];
	ld.param.u64 	%rd20, [copy_nd4_u16_param_1];
	ld.param.u32 	%r20, [copy_nd4_u16_param_2];
	ld.param.u32 	%r21, [copy_nd4_u16_param_3];
	ld.param.u32 	%r22, [copy_nd4_u16_param_4];
	ld.param.u32 	%r17, [copy_nd4_u16_param_5];
	ld.param.u32 	%r18, [copy_nd4_u16_param_9];
	ld.param.u32 	%r23, [copy_nd4_u16_param_10];
	ld.param.u32 	%r24, [copy_nd4_u16_param_11];
	ld.param.u32 	%r25, [copy_nd4_u16_param_12];
	ld.param.u32 	%r19, [copy_nd4_u16_param_13];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r26, %ctaid.x;
	mul.lo.s32 	%r1, %r26, %r22;
	mov.u32 	%r27, %ctaid.y;
	mul.lo.s32 	%r2, %r27, %r21;
	mov.u32 	%r28, %ctaid.z;
	mul.lo.s32 	%r3, %r28, %r20;
	mul.lo.s32 	%r4, %r26, %r25;
	mul.lo.s32 	%r5, %r27, %r24;
	mul.lo.s32 	%r6, %r28, %r23;
	mov.u32 	%r50, %tid.x;
	setp.ge.s32 	%p1, %r50, %r18;
	@%p1 bra 	$L__BB154_7;

	not.b32 	%r29, %r50;
	add.s32 	%r8, %r29, %r18;
	shr.u32 	%r30, %r8, 10;
	add.s32 	%r31, %r30, 1;
	and.b32  	%r49, %r31, 3;
	setp.eq.s32 	%p2, %r49, 0;
	@%p2 bra 	$L__BB154_4;

	mad.lo.s32 	%r32, %r50, %r19, %r4;
	add.s32 	%r33, %r32, %r5;
	add.s32 	%r34, %r33, %r6;
	mul.wide.s32 	%rd21, %r34, 2;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r35, %r19, 10;
	mul.wide.s32 	%rd4, %r35, 2;
	mad.lo.s32 	%r36, %r50, %r17, %r1;
	add.s32 	%r37, %r36, %r2;
	add.s32 	%r38, %r37, %r3;
	mul.wide.s32 	%rd22, %r38, 2;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r39, %r17, 10;
	mul.wide.s32 	%rd6, %r39, 2;

$L__BB154_3:
	.pragma "nounroll";
	ld.global.u16 	%rs1, [%rd31];
	st.global.u16 	[%rd32], %rs1;
	add.s32 	%r50, %r50, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r49, %r49, -1;
	setp.ne.s32 	%p3, %r49, 0;
	@%p3 bra 	$L__BB154_3;

$L__BB154_4:
	setp.lt.u32 	%p4, %r8, 3072;
	@%p4 bra 	$L__BB154_7;

	mad.lo.s32 	%r40, %r50, %r17, %r1;
	add.s32 	%r41, %r40, %r2;
	add.s32 	%r42, %r41, %r3;
	mad.lo.s32 	%r43, %r50, %r19, %r4;
	add.s32 	%r44, %r43, %r5;
	add.s32 	%r45, %r44, %r6;
	mul.wide.s32 	%rd23, %r45, 2;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r42, 2;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r46, %r17, 10;
	mul.wide.s32 	%rd13, %r46, 2;
	shl.b32 	%r47, %r19, 10;
	mul.wide.s32 	%rd14, %r47, 2;

$L__BB154_6:
	ld.global.u16 	%rs2, [%rd34];
	st.global.u16 	[%rd33], %rs2;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u16 	%rs3, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u16 	[%rd26], %rs3;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u16 	%rs4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u16 	[%rd28], %rs4;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u16 	%rs5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u16 	[%rd30], %rs5;
	add.s32 	%r50, %r50, 4096;
	setp.lt.s32 	%p5, %r50, %r18;
	@%p5 bra 	$L__BB154_6;

$L__BB154_7:
	ret;

}
	// .globl	copy_nd5_u16
.visible .entry copy_nd5_u16(
	.param .u64 copy_nd5_u16_param_0,
	.param .u64 copy_nd5_u16_param_1,
	.param .u32 copy_nd5_u16_param_2,
	.param .u32 copy_nd5_u16_param_3,
	.param .u32 copy_nd5_u16_param_4,
	.param .u32 copy_nd5_u16_param_5,
	.param .u32 copy_nd5_u16_param_6,
	.param .u32 copy_nd5_u16_param_7,
	.param .u32 copy_nd5_u16_param_8,
	.param .u32 copy_nd5_u16_param_9,
	.param .u32 copy_nd5_u16_param_10,
	.param .u32 copy_nd5_u16_param_11,
	.param .u32 copy_nd5_u16_param_12,
	.param .u32 copy_nd5_u16_param_13,
	.param .u32 copy_nd5_u16_param_14,
	.param .u32 copy_nd5_u16_param_15,
	.param .u32 copy_nd5_u16_param_16
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<62>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd5_u16_param_0];
	ld.param.u64 	%rd20, [copy_nd5_u16_param_1];
	ld.param.u32 	%r17, [copy_nd5_u16_param_2];
	ld.param.u32 	%r18, [copy_nd5_u16_param_3];
	ld.param.u32 	%r24, [copy_nd5_u16_param_4];
	ld.param.u32 	%r25, [copy_nd5_u16_param_5];
	ld.param.u32 	%r19, [copy_nd5_u16_param_6];
	ld.param.u32 	%r26, [copy_nd5_u16_param_7];
	ld.param.u32 	%r27, [copy_nd5_u16_param_8];
	ld.param.u32 	%r20, [copy_nd5_u16_param_11];
	ld.param.u32 	%r21, [copy_nd5_u16_param_12];
	ld.param.u32 	%r22, [copy_nd5_u16_param_13];
	ld.param.u32 	%r28, [copy_nd5_u16_param_14];
	ld.param.u32 	%r29, [copy_nd5_u16_param_15];
	ld.param.u32 	%r23, [copy_nd5_u16_param_16];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r30, %ctaid.x;
	mul.lo.s32 	%r1, %r30, %r25;
	mov.u32 	%r31, %ctaid.y;
	mul.lo.s32 	%r2, %r31, %r24;
	mul.lo.s32 	%r3, %r30, %r29;
	mul.lo.s32 	%r4, %r31, %r28;
	mov.u32 	%r32, %ctaid.z;
	div.s32 	%r33, %r32, %r27;
	mul.lo.s32 	%r34, %r33, %r27;
	sub.s32 	%r5, %r32, %r34;
	rem.s32 	%r6, %r33, %r26;
	mov.u32 	%r60, %tid.x;
	setp.ge.s32 	%p1, %r60, %r20;
	@%p1 bra 	$L__BB155_7;

	not.b32 	%r35, %r60;
	add.s32 	%r8, %r35, %r20;
	shr.u32 	%r36, %r8, 10;
	add.s32 	%r37, %r36, 1;
	and.b32  	%r59, %r37, 3;
	setp.eq.s32 	%p2, %r59, 0;
	@%p2 bra 	$L__BB155_4;

	mad.lo.s32 	%r38, %r60, %r23, %r3;
	add.s32 	%r39, %r38, %r4;
	mad.lo.s32 	%r40, %r5, %r22, %r39;
	mad.lo.s32 	%r41, %r6, %r21, %r40;
	mul.wide.s32 	%rd21, %r41, 2;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r42, %r23, 10;
	mul.wide.s32 	%rd4, %r42, 2;
	mad.lo.s32 	%r43, %r60, %r19, %r1;
	add.s32 	%r44, %r43, %r2;
	mad.lo.s32 	%r45, %r5, %r18, %r44;
	mad.lo.s32 	%r46, %r6, %r17, %r45;
	mul.wide.s32 	%rd22, %r46, 2;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r47, %r19, 10;
	mul.wide.s32 	%rd6, %r47, 2;

$L__BB155_3:
	.pragma "nounroll";
	ld.global.u16 	%rs1, [%rd31];
	st.global.u16 	[%rd32], %rs1;
	add.s32 	%r60, %r60, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r59, %r59, -1;
	setp.ne.s32 	%p3, %r59, 0;
	@%p3 bra 	$L__BB155_3;

$L__BB155_4:
	setp.lt.u32 	%p4, %r8, 3072;
	@%p4 bra 	$L__BB155_7;

	mad.lo.s32 	%r48, %r60, %r19, %r1;
	add.s32 	%r49, %r48, %r2;
	mad.lo.s32 	%r50, %r5, %r18, %r49;
	mad.lo.s32 	%r51, %r6, %r17, %r50;
	mad.lo.s32 	%r52, %r60, %r23, %r3;
	add.s32 	%r53, %r52, %r4;
	mad.lo.s32 	%r54, %r5, %r22, %r53;
	mad.lo.s32 	%r55, %r6, %r21, %r54;
	mul.wide.s32 	%rd23, %r55, 2;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r51, 2;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r56, %r19, 10;
	mul.wide.s32 	%rd13, %r56, 2;
	shl.b32 	%r57, %r23, 10;
	mul.wide.s32 	%rd14, %r57, 2;

$L__BB155_6:
	ld.global.u16 	%rs2, [%rd34];
	st.global.u16 	[%rd33], %rs2;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u16 	%rs3, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u16 	[%rd26], %rs3;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u16 	%rs4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u16 	[%rd28], %rs4;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u16 	%rs5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u16 	[%rd30], %rs5;
	add.s32 	%r60, %r60, 4096;
	setp.lt.s32 	%p5, %r60, %r20;
	@%p5 bra 	$L__BB155_6;

$L__BB155_7:
	ret;

}
	// .globl	copy_nd6_u16
.visible .entry copy_nd6_u16(
	.param .u64 copy_nd6_u16_param_0,
	.param .u64 copy_nd6_u16_param_1,
	.param .u32 copy_nd6_u16_param_2,
	.param .u32 copy_nd6_u16_param_3,
	.param .u32 copy_nd6_u16_param_4,
	.param .u32 copy_nd6_u16_param_5,
	.param .u32 copy_nd6_u16_param_6,
	.param .u32 copy_nd6_u16_param_7,
	.param .u32 copy_nd6_u16_param_8,
	.param .u32 copy_nd6_u16_param_9,
	.param .u32 copy_nd6_u16_param_10,
	.param .u32 copy_nd6_u16_param_11,
	.param .u32 copy_nd6_u16_param_12,
	.param .u32 copy_nd6_u16_param_13,
	.param .u32 copy_nd6_u16_param_14,
	.param .u32 copy_nd6_u16_param_15,
	.param .u32 copy_nd6_u16_param_16,
	.param .u32 copy_nd6_u16_param_17,
	.param .u32 copy_nd6_u16_param_18,
	.param .u32 copy_nd6_u16_param_19
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<72>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd6_u16_param_0];
	ld.param.u64 	%rd20, [copy_nd6_u16_param_1];
	ld.param.u32 	%r18, [copy_nd6_u16_param_2];
	ld.param.u32 	%r19, [copy_nd6_u16_param_3];
	ld.param.u32 	%r20, [copy_nd6_u16_param_4];
	ld.param.u32 	%r27, [copy_nd6_u16_param_5];
	ld.param.u32 	%r28, [copy_nd6_u16_param_6];
	ld.param.u32 	%r21, [copy_nd6_u16_param_7];
	ld.param.u32 	%r29, [copy_nd6_u16_param_8];
	ld.param.u32 	%r30, [copy_nd6_u16_param_9];
	ld.param.u32 	%r31, [copy_nd6_u16_param_10];
	ld.param.u32 	%r22, [copy_nd6_u16_param_13];
	ld.param.u32 	%r23, [copy_nd6_u16_param_14];
	ld.param.u32 	%r24, [copy_nd6_u16_param_15];
	ld.param.u32 	%r25, [copy_nd6_u16_param_16];
	ld.param.u32 	%r32, [copy_nd6_u16_param_17];
	ld.param.u32 	%r33, [copy_nd6_u16_param_18];
	ld.param.u32 	%r26, [copy_nd6_u16_param_19];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r34, %ctaid.x;
	mul.lo.s32 	%r1, %r34, %r28;
	mov.u32 	%r35, %ctaid.y;
	mul.lo.s32 	%r2, %r35, %r27;
	mul.lo.s32 	%r3, %r34, %r33;
	mul.lo.s32 	%r4, %r35, %r32;
	mov.u32 	%r36, %ctaid.z;
	div.s32 	%r37, %r36, %r31;
	mul.lo.s32 	%r38, %r37, %r31;
	sub.s32 	%r5, %r36, %r38;
	div.s32 	%r39, %r37, %r30;
	mul.lo.s32 	%r40, %r39, %r30;
	sub.s32 	%r6, %r37, %r40;
	rem.s32 	%r7, %r39, %r29;
	mov.u32 	%r70, %tid.x;
	setp.ge.s32 	%p1, %r70, %r22;
	@%p1 bra 	$L__BB156_7;

	not.b32 	%r41, %r70;
	add.s32 	%r9, %r41, %r22;
	shr.u32 	%r42, %r9, 10;
	add.s32 	%r43, %r42, 1;
	and.b32  	%r69, %r43, 3;
	setp.eq.s32 	%p2, %r69, 0;
	@%p2 bra 	$L__BB156_4;

	mad.lo.s32 	%r44, %r70, %r26, %r3;
	add.s32 	%r45, %r44, %r4;
	mad.lo.s32 	%r46, %r5, %r25, %r45;
	mad.lo.s32 	%r47, %r6, %r24, %r46;
	mad.lo.s32 	%r48, %r7, %r23, %r47;
	mul.wide.s32 	%rd21, %r48, 2;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r49, %r26, 10;
	mul.wide.s32 	%rd4, %r49, 2;
	mad.lo.s32 	%r50, %r70, %r21, %r1;
	add.s32 	%r51, %r50, %r2;
	mad.lo.s32 	%r52, %r5, %r20, %r51;
	mad.lo.s32 	%r53, %r6, %r19, %r52;
	mad.lo.s32 	%r54, %r7, %r18, %r53;
	mul.wide.s32 	%rd22, %r54, 2;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r55, %r21, 10;
	mul.wide.s32 	%rd6, %r55, 2;

$L__BB156_3:
	.pragma "nounroll";
	ld.global.u16 	%rs1, [%rd31];
	st.global.u16 	[%rd32], %rs1;
	add.s32 	%r70, %r70, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r69, %r69, -1;
	setp.ne.s32 	%p3, %r69, 0;
	@%p3 bra 	$L__BB156_3;

$L__BB156_4:
	setp.lt.u32 	%p4, %r9, 3072;
	@%p4 bra 	$L__BB156_7;

	mad.lo.s32 	%r56, %r70, %r21, %r1;
	add.s32 	%r57, %r56, %r2;
	mad.lo.s32 	%r58, %r5, %r20, %r57;
	mad.lo.s32 	%r59, %r6, %r19, %r58;
	mad.lo.s32 	%r60, %r7, %r18, %r59;
	mad.lo.s32 	%r61, %r70, %r26, %r3;
	add.s32 	%r62, %r61, %r4;
	mad.lo.s32 	%r63, %r5, %r25, %r62;
	mad.lo.s32 	%r64, %r6, %r24, %r63;
	mad.lo.s32 	%r65, %r7, %r23, %r64;
	mul.wide.s32 	%rd23, %r65, 2;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r60, 2;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r66, %r21, 10;
	mul.wide.s32 	%rd13, %r66, 2;
	shl.b32 	%r67, %r26, 10;
	mul.wide.s32 	%rd14, %r67, 2;

$L__BB156_6:
	ld.global.u16 	%rs2, [%rd34];
	st.global.u16 	[%rd33], %rs2;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u16 	%rs3, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u16 	[%rd26], %rs3;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u16 	%rs4, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u16 	[%rd28], %rs4;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u16 	%rs5, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u16 	[%rd30], %rs5;
	add.s32 	%r70, %r70, 4096;
	setp.lt.s32 	%p5, %r70, %r22;
	@%p5 bra 	$L__BB156_6;

$L__BB156_7:
	ret;

}
	// .globl	cast_u16_bool
.visible .entry cast_u16_bool(
	.param .u64 cast_u16_bool_param_0,
	.param .u64 cast_u16_bool_param_1,
	.param .u32 cast_u16_bool_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_u16_bool_param_0];
	ld.param.u64 	%rd2, [cast_u16_bool_param_1];
	ld.param.u32 	%r2, [cast_u16_bool_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB157_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 2;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u16 	%rs1, [%rd6];
	setp.ne.s16 	%p2, %rs1, 0;
	selp.u16 	%rs2, 1, 0, %p2;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u8 	[%rd8], %rs2;

$L__BB157_2:
	ret;

}
	// .globl	cast_u16_f32
.visible .entry cast_u16_f32(
	.param .u64 cast_u16_f32_param_0,
	.param .u64 cast_u16_f32_param_1,
	.param .u32 cast_u16_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_u16_f32_param_0];
	ld.param.u64 	%rd2, [cast_u16_f32_param_1];
	ld.param.u32 	%r2, [cast_u16_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB158_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u16 	%rs1, [%rd5];
	cvt.rn.f32.u16 	%f1, %rs1;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB158_2:
	ret;

}
	// .globl	cast_u16_f16
.visible .entry cast_u16_f16(
	.param .u64 cast_u16_f16_param_0,
	.param .u64 cast_u16_f16_param_1,
	.param .u32 cast_u16_f16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_u16_f16_param_0];
	ld.param.u64 	%rd2, [cast_u16_f16_param_1];
	ld.param.u32 	%r2, [cast_u16_f16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB159_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u16 	%rs2, [%rd5];
	// begin inline asm
	cvt.rn.f16.u16 %rs1, %rs2;
	// end inline asm
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u16 	[%rd7], %rs1;

$L__BB159_2:
	ret;

}
	// .globl	cast_u16_u8
.visible .entry cast_u16_u8(
	.param .u64 cast_u16_u8_param_0,
	.param .u64 cast_u16_u8_param_1,
	.param .u32 cast_u16_u8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_u16_u8_param_0];
	ld.param.u64 	%rd2, [cast_u16_u8_param_1];
	ld.param.u32 	%r2, [cast_u16_u8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB160_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 2;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u16 	%rs1, [%rd6];
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u8 	[%rd8], %rs1;

$L__BB160_2:
	ret;

}
	// .globl	cast_u16_u16
.visible .entry cast_u16_u16(
	.param .u64 cast_u16_u16_param_0,
	.param .u64 cast_u16_u16_param_1,
	.param .u32 cast_u16_u16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_u16_u16_param_0];
	ld.param.u64 	%rd2, [cast_u16_u16_param_1];
	ld.param.u32 	%r2, [cast_u16_u16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB161_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u16 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u16 	[%rd7], %rs1;

$L__BB161_2:
	ret;

}
	// .globl	cast_u16_u32
.visible .entry cast_u16_u32(
	.param .u64 cast_u16_u32_param_0,
	.param .u64 cast_u16_u32_param_1,
	.param .u32 cast_u16_u32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_u16_u32_param_0];
	ld.param.u64 	%rd2, [cast_u16_u32_param_1];
	ld.param.u32 	%r2, [cast_u16_u32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB162_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u16 	%r6, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u32 	[%rd8], %r6;

$L__BB162_2:
	ret;

}
	// .globl	cast_u16_u64
.visible .entry cast_u16_u64(
	.param .u64 cast_u16_u64_param_0,
	.param .u64 cast_u16_u64_param_1,
	.param .u32 cast_u16_u64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_u16_u64_param_0];
	ld.param.u64 	%rd2, [cast_u16_u64_param_1];
	ld.param.u32 	%r2, [cast_u16_u64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB163_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u16 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u64 	[%rd9], %rd6;

$L__BB163_2:
	ret;

}
	// .globl	cast_u16_i8
.visible .entry cast_u16_i8(
	.param .u64 cast_u16_i8_param_0,
	.param .u64 cast_u16_i8_param_1,
	.param .u32 cast_u16_i8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_u16_i8_param_0];
	ld.param.u64 	%rd2, [cast_u16_i8_param_1];
	ld.param.u32 	%r2, [cast_u16_i8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB164_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 2;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u16 	%rs1, [%rd6];
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u8 	[%rd8], %rs1;

$L__BB164_2:
	ret;

}
	// .globl	cast_u16_i16
.visible .entry cast_u16_i16(
	.param .u64 cast_u16_i16_param_0,
	.param .u64 cast_u16_i16_param_1,
	.param .u32 cast_u16_i16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_u16_i16_param_0];
	ld.param.u64 	%rd2, [cast_u16_i16_param_1];
	ld.param.u32 	%r2, [cast_u16_i16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB165_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u16 	%rs1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u16 	[%rd7], %rs1;

$L__BB165_2:
	ret;

}
	// .globl	cast_u16_i32
.visible .entry cast_u16_i32(
	.param .u64 cast_u16_i32_param_0,
	.param .u64 cast_u16_i32_param_1,
	.param .u32 cast_u16_i32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_u16_i32_param_0];
	ld.param.u64 	%rd2, [cast_u16_i32_param_1];
	ld.param.u32 	%r2, [cast_u16_i32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB166_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u16 	%r6, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u32 	[%rd8], %r6;

$L__BB166_2:
	ret;

}
	// .globl	cast_u16_i64
.visible .entry cast_u16_i64(
	.param .u64 cast_u16_i64_param_0,
	.param .u64 cast_u16_i64_param_1,
	.param .u32 cast_u16_i64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_u16_i64_param_0];
	ld.param.u64 	%rd2, [cast_u16_i64_param_1];
	ld.param.u32 	%r2, [cast_u16_i64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB167_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 2;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u16 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u64 	[%rd9], %rd6;

$L__BB167_2:
	ret;

}
	// .globl	copy_unicast_u32
.visible .entry copy_unicast_u32(
	.param .u64 copy_unicast_u32_param_0,
	.param .u64 copy_unicast_u32_param_1,
	.param .u32 copy_unicast_u32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [copy_unicast_u32_param_0];
	ld.param.u64 	%rd2, [copy_unicast_u32_param_1];
	ld.param.u32 	%r2, [copy_unicast_u32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB168_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u32 	%r6, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u32 	[%rd7], %r6;

$L__BB168_2:
	ret;

}
	// .globl	copy_nd1_u32
.visible .entry copy_nd1_u32(
	.param .u64 copy_nd1_u32_param_0,
	.param .u64 copy_nd1_u32_param_1,
	.param .u32 copy_nd1_u32_param_2,
	.param .u32 copy_nd1_u32_param_3,
	.param .u32 copy_nd1_u32_param_4
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<34>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd1_u32_param_0];
	ld.param.u64 	%rd20, [copy_nd1_u32_param_1];
	ld.param.u32 	%r11, [copy_nd1_u32_param_2];
	ld.param.u32 	%r12, [copy_nd1_u32_param_3];
	ld.param.u32 	%r13, [copy_nd1_u32_param_4];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r32, %tid.x;
	setp.ge.s32 	%p1, %r32, %r12;
	@%p1 bra 	$L__BB169_7;

	not.b32 	%r14, %r32;
	add.s32 	%r2, %r14, %r12;
	shr.u32 	%r15, %r2, 10;
	add.s32 	%r16, %r15, 1;
	and.b32  	%r31, %r16, 3;
	setp.eq.s32 	%p2, %r31, 0;
	@%p2 bra 	$L__BB169_4;

	mul.lo.s32 	%r17, %r32, %r13;
	mul.wide.s32 	%rd21, %r17, 4;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r18, %r13, 10;
	mul.wide.s32 	%rd4, %r18, 4;
	mul.lo.s32 	%r19, %r32, %r11;
	mul.wide.s32 	%rd22, %r19, 4;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r20, %r11, 10;
	mul.wide.s32 	%rd6, %r20, 4;

$L__BB169_3:
	.pragma "nounroll";
	ld.global.u32 	%r21, [%rd31];
	st.global.u32 	[%rd32], %r21;
	add.s32 	%r32, %r32, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r31, %r31, -1;
	setp.ne.s32 	%p3, %r31, 0;
	@%p3 bra 	$L__BB169_3;

$L__BB169_4:
	setp.lt.u32 	%p4, %r2, 3072;
	@%p4 bra 	$L__BB169_7;

	mul.lo.s32 	%r22, %r32, %r11;
	mul.lo.s32 	%r23, %r32, %r13;
	mul.wide.s32 	%rd23, %r23, 4;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r22, 4;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r24, %r11, 10;
	mul.wide.s32 	%rd13, %r24, 4;
	shl.b32 	%r25, %r13, 10;
	mul.wide.s32 	%rd14, %r25, 4;

$L__BB169_6:
	ld.global.u32 	%r26, [%rd34];
	st.global.u32 	[%rd33], %r26;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u32 	%r27, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u32 	[%rd26], %r27;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u32 	%r28, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u32 	[%rd28], %r28;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u32 	%r29, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u32 	[%rd30], %r29;
	add.s32 	%r32, %r32, 4096;
	setp.lt.s32 	%p5, %r32, %r12;
	@%p5 bra 	$L__BB169_6;

$L__BB169_7:
	ret;

}
	// .globl	copy_nd2_u32
.visible .entry copy_nd2_u32(
	.param .u64 copy_nd2_u32_param_0,
	.param .u64 copy_nd2_u32_param_1,
	.param .u32 copy_nd2_u32_param_2,
	.param .u32 copy_nd2_u32_param_3,
	.param .u32 copy_nd2_u32_param_4,
	.param .u32 copy_nd2_u32_param_5,
	.param .u32 copy_nd2_u32_param_6,
	.param .u32 copy_nd2_u32_param_7
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<39>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd2_u32_param_0];
	ld.param.u64 	%rd20, [copy_nd2_u32_param_1];
	ld.param.u32 	%r16, [copy_nd2_u32_param_2];
	ld.param.u32 	%r13, [copy_nd2_u32_param_3];
	ld.param.u32 	%r14, [copy_nd2_u32_param_5];
	ld.param.u32 	%r17, [copy_nd2_u32_param_6];
	ld.param.u32 	%r15, [copy_nd2_u32_param_7];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r18, %ctaid.x;
	mul.lo.s32 	%r1, %r18, %r16;
	mul.lo.s32 	%r2, %r18, %r17;
	mov.u32 	%r37, %tid.x;
	setp.ge.s32 	%p1, %r37, %r14;
	@%p1 bra 	$L__BB170_7;

	not.b32 	%r19, %r37;
	add.s32 	%r4, %r19, %r14;
	shr.u32 	%r20, %r4, 10;
	add.s32 	%r21, %r20, 1;
	and.b32  	%r36, %r21, 3;
	setp.eq.s32 	%p2, %r36, 0;
	@%p2 bra 	$L__BB170_4;

	mad.lo.s32 	%r22, %r37, %r15, %r2;
	mul.wide.s32 	%rd21, %r22, 4;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r23, %r15, 10;
	mul.wide.s32 	%rd4, %r23, 4;
	mad.lo.s32 	%r24, %r37, %r13, %r1;
	mul.wide.s32 	%rd22, %r24, 4;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r25, %r13, 10;
	mul.wide.s32 	%rd6, %r25, 4;

$L__BB170_3:
	.pragma "nounroll";
	ld.global.u32 	%r26, [%rd31];
	st.global.u32 	[%rd32], %r26;
	add.s32 	%r37, %r37, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r36, %r36, -1;
	setp.ne.s32 	%p3, %r36, 0;
	@%p3 bra 	$L__BB170_3;

$L__BB170_4:
	setp.lt.u32 	%p4, %r4, 3072;
	@%p4 bra 	$L__BB170_7;

	mad.lo.s32 	%r27, %r37, %r13, %r1;
	mad.lo.s32 	%r28, %r37, %r15, %r2;
	mul.wide.s32 	%rd23, %r28, 4;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r27, 4;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r29, %r13, 10;
	mul.wide.s32 	%rd13, %r29, 4;
	shl.b32 	%r30, %r15, 10;
	mul.wide.s32 	%rd14, %r30, 4;

$L__BB170_6:
	ld.global.u32 	%r31, [%rd34];
	st.global.u32 	[%rd33], %r31;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u32 	%r32, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u32 	[%rd26], %r32;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u32 	%r33, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u32 	[%rd28], %r33;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u32 	%r34, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u32 	[%rd30], %r34;
	add.s32 	%r37, %r37, 4096;
	setp.lt.s32 	%p5, %r37, %r14;
	@%p5 bra 	$L__BB170_6;

$L__BB170_7:
	ret;

}
	// .globl	copy_nd3_u32
.visible .entry copy_nd3_u32(
	.param .u64 copy_nd3_u32_param_0,
	.param .u64 copy_nd3_u32_param_1,
	.param .u32 copy_nd3_u32_param_2,
	.param .u32 copy_nd3_u32_param_3,
	.param .u32 copy_nd3_u32_param_4,
	.param .u32 copy_nd3_u32_param_5,
	.param .u32 copy_nd3_u32_param_6,
	.param .u32 copy_nd3_u32_param_7,
	.param .u32 copy_nd3_u32_param_8,
	.param .u32 copy_nd3_u32_param_9,
	.param .u32 copy_nd3_u32_param_10
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<48>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd3_u32_param_0];
	ld.param.u64 	%rd20, [copy_nd3_u32_param_1];
	ld.param.u32 	%r18, [copy_nd3_u32_param_2];
	ld.param.u32 	%r19, [copy_nd3_u32_param_3];
	ld.param.u32 	%r15, [copy_nd3_u32_param_4];
	ld.param.u32 	%r16, [copy_nd3_u32_param_7];
	ld.param.u32 	%r20, [copy_nd3_u32_param_8];
	ld.param.u32 	%r21, [copy_nd3_u32_param_9];
	ld.param.u32 	%r17, [copy_nd3_u32_param_10];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r22, %ctaid.x;
	mul.lo.s32 	%r1, %r22, %r19;
	mov.u32 	%r23, %ctaid.y;
	mul.lo.s32 	%r2, %r23, %r18;
	mul.lo.s32 	%r3, %r22, %r21;
	mul.lo.s32 	%r4, %r23, %r20;
	mov.u32 	%r46, %tid.x;
	setp.ge.s32 	%p1, %r46, %r16;
	@%p1 bra 	$L__BB171_7;

	not.b32 	%r24, %r46;
	add.s32 	%r6, %r24, %r16;
	shr.u32 	%r25, %r6, 10;
	add.s32 	%r26, %r25, 1;
	and.b32  	%r45, %r26, 3;
	setp.eq.s32 	%p2, %r45, 0;
	@%p2 bra 	$L__BB171_4;

	mad.lo.s32 	%r27, %r46, %r17, %r3;
	add.s32 	%r28, %r27, %r4;
	mul.wide.s32 	%rd21, %r28, 4;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r29, %r17, 10;
	mul.wide.s32 	%rd4, %r29, 4;
	mad.lo.s32 	%r30, %r46, %r15, %r1;
	add.s32 	%r31, %r30, %r2;
	mul.wide.s32 	%rd22, %r31, 4;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r32, %r15, 10;
	mul.wide.s32 	%rd6, %r32, 4;

$L__BB171_3:
	.pragma "nounroll";
	ld.global.u32 	%r33, [%rd31];
	st.global.u32 	[%rd32], %r33;
	add.s32 	%r46, %r46, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r45, %r45, -1;
	setp.ne.s32 	%p3, %r45, 0;
	@%p3 bra 	$L__BB171_3;

$L__BB171_4:
	setp.lt.u32 	%p4, %r6, 3072;
	@%p4 bra 	$L__BB171_7;

	mad.lo.s32 	%r34, %r46, %r15, %r1;
	add.s32 	%r35, %r34, %r2;
	mad.lo.s32 	%r36, %r46, %r17, %r3;
	add.s32 	%r37, %r36, %r4;
	mul.wide.s32 	%rd23, %r37, 4;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r35, 4;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r38, %r15, 10;
	mul.wide.s32 	%rd13, %r38, 4;
	shl.b32 	%r39, %r17, 10;
	mul.wide.s32 	%rd14, %r39, 4;

$L__BB171_6:
	ld.global.u32 	%r40, [%rd34];
	st.global.u32 	[%rd33], %r40;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u32 	%r41, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u32 	[%rd26], %r41;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u32 	%r42, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u32 	[%rd28], %r42;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u32 	%r43, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u32 	[%rd30], %r43;
	add.s32 	%r46, %r46, 4096;
	setp.lt.s32 	%p5, %r46, %r16;
	@%p5 bra 	$L__BB171_6;

$L__BB171_7:
	ret;

}
	// .globl	copy_nd4_u32
.visible .entry copy_nd4_u32(
	.param .u64 copy_nd4_u32_param_0,
	.param .u64 copy_nd4_u32_param_1,
	.param .u32 copy_nd4_u32_param_2,
	.param .u32 copy_nd4_u32_param_3,
	.param .u32 copy_nd4_u32_param_4,
	.param .u32 copy_nd4_u32_param_5,
	.param .u32 copy_nd4_u32_param_6,
	.param .u32 copy_nd4_u32_param_7,
	.param .u32 copy_nd4_u32_param_8,
	.param .u32 copy_nd4_u32_param_9,
	.param .u32 copy_nd4_u32_param_10,
	.param .u32 copy_nd4_u32_param_11,
	.param .u32 copy_nd4_u32_param_12,
	.param .u32 copy_nd4_u32_param_13
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<57>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd4_u32_param_0];
	ld.param.u64 	%rd20, [copy_nd4_u32_param_1];
	ld.param.u32 	%r20, [copy_nd4_u32_param_2];
	ld.param.u32 	%r21, [copy_nd4_u32_param_3];
	ld.param.u32 	%r22, [copy_nd4_u32_param_4];
	ld.param.u32 	%r17, [copy_nd4_u32_param_5];
	ld.param.u32 	%r18, [copy_nd4_u32_param_9];
	ld.param.u32 	%r23, [copy_nd4_u32_param_10];
	ld.param.u32 	%r24, [copy_nd4_u32_param_11];
	ld.param.u32 	%r25, [copy_nd4_u32_param_12];
	ld.param.u32 	%r19, [copy_nd4_u32_param_13];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r26, %ctaid.x;
	mul.lo.s32 	%r1, %r26, %r22;
	mov.u32 	%r27, %ctaid.y;
	mul.lo.s32 	%r2, %r27, %r21;
	mov.u32 	%r28, %ctaid.z;
	mul.lo.s32 	%r3, %r28, %r20;
	mul.lo.s32 	%r4, %r26, %r25;
	mul.lo.s32 	%r5, %r27, %r24;
	mul.lo.s32 	%r6, %r28, %r23;
	mov.u32 	%r55, %tid.x;
	setp.ge.s32 	%p1, %r55, %r18;
	@%p1 bra 	$L__BB172_7;

	not.b32 	%r29, %r55;
	add.s32 	%r8, %r29, %r18;
	shr.u32 	%r30, %r8, 10;
	add.s32 	%r31, %r30, 1;
	and.b32  	%r54, %r31, 3;
	setp.eq.s32 	%p2, %r54, 0;
	@%p2 bra 	$L__BB172_4;

	mad.lo.s32 	%r32, %r55, %r19, %r4;
	add.s32 	%r33, %r32, %r5;
	add.s32 	%r34, %r33, %r6;
	mul.wide.s32 	%rd21, %r34, 4;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r35, %r19, 10;
	mul.wide.s32 	%rd4, %r35, 4;
	mad.lo.s32 	%r36, %r55, %r17, %r1;
	add.s32 	%r37, %r36, %r2;
	add.s32 	%r38, %r37, %r3;
	mul.wide.s32 	%rd22, %r38, 4;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r39, %r17, 10;
	mul.wide.s32 	%rd6, %r39, 4;

$L__BB172_3:
	.pragma "nounroll";
	ld.global.u32 	%r40, [%rd31];
	st.global.u32 	[%rd32], %r40;
	add.s32 	%r55, %r55, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r54, %r54, -1;
	setp.ne.s32 	%p3, %r54, 0;
	@%p3 bra 	$L__BB172_3;

$L__BB172_4:
	setp.lt.u32 	%p4, %r8, 3072;
	@%p4 bra 	$L__BB172_7;

	mad.lo.s32 	%r41, %r55, %r17, %r1;
	add.s32 	%r42, %r41, %r2;
	add.s32 	%r43, %r42, %r3;
	mad.lo.s32 	%r44, %r55, %r19, %r4;
	add.s32 	%r45, %r44, %r5;
	add.s32 	%r46, %r45, %r6;
	mul.wide.s32 	%rd23, %r46, 4;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r43, 4;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r47, %r17, 10;
	mul.wide.s32 	%rd13, %r47, 4;
	shl.b32 	%r48, %r19, 10;
	mul.wide.s32 	%rd14, %r48, 4;

$L__BB172_6:
	ld.global.u32 	%r49, [%rd34];
	st.global.u32 	[%rd33], %r49;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u32 	%r50, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u32 	[%rd26], %r50;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u32 	%r51, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u32 	[%rd28], %r51;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u32 	%r52, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u32 	[%rd30], %r52;
	add.s32 	%r55, %r55, 4096;
	setp.lt.s32 	%p5, %r55, %r18;
	@%p5 bra 	$L__BB172_6;

$L__BB172_7:
	ret;

}
	// .globl	copy_nd5_u32
.visible .entry copy_nd5_u32(
	.param .u64 copy_nd5_u32_param_0,
	.param .u64 copy_nd5_u32_param_1,
	.param .u32 copy_nd5_u32_param_2,
	.param .u32 copy_nd5_u32_param_3,
	.param .u32 copy_nd5_u32_param_4,
	.param .u32 copy_nd5_u32_param_5,
	.param .u32 copy_nd5_u32_param_6,
	.param .u32 copy_nd5_u32_param_7,
	.param .u32 copy_nd5_u32_param_8,
	.param .u32 copy_nd5_u32_param_9,
	.param .u32 copy_nd5_u32_param_10,
	.param .u32 copy_nd5_u32_param_11,
	.param .u32 copy_nd5_u32_param_12,
	.param .u32 copy_nd5_u32_param_13,
	.param .u32 copy_nd5_u32_param_14,
	.param .u32 copy_nd5_u32_param_15,
	.param .u32 copy_nd5_u32_param_16
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<67>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd5_u32_param_0];
	ld.param.u64 	%rd20, [copy_nd5_u32_param_1];
	ld.param.u32 	%r17, [copy_nd5_u32_param_2];
	ld.param.u32 	%r18, [copy_nd5_u32_param_3];
	ld.param.u32 	%r24, [copy_nd5_u32_param_4];
	ld.param.u32 	%r25, [copy_nd5_u32_param_5];
	ld.param.u32 	%r19, [copy_nd5_u32_param_6];
	ld.param.u32 	%r26, [copy_nd5_u32_param_7];
	ld.param.u32 	%r27, [copy_nd5_u32_param_8];
	ld.param.u32 	%r20, [copy_nd5_u32_param_11];
	ld.param.u32 	%r21, [copy_nd5_u32_param_12];
	ld.param.u32 	%r22, [copy_nd5_u32_param_13];
	ld.param.u32 	%r28, [copy_nd5_u32_param_14];
	ld.param.u32 	%r29, [copy_nd5_u32_param_15];
	ld.param.u32 	%r23, [copy_nd5_u32_param_16];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r30, %ctaid.x;
	mul.lo.s32 	%r1, %r30, %r25;
	mov.u32 	%r31, %ctaid.y;
	mul.lo.s32 	%r2, %r31, %r24;
	mul.lo.s32 	%r3, %r30, %r29;
	mul.lo.s32 	%r4, %r31, %r28;
	mov.u32 	%r32, %ctaid.z;
	div.s32 	%r33, %r32, %r27;
	mul.lo.s32 	%r34, %r33, %r27;
	sub.s32 	%r5, %r32, %r34;
	rem.s32 	%r6, %r33, %r26;
	mov.u32 	%r65, %tid.x;
	setp.ge.s32 	%p1, %r65, %r20;
	@%p1 bra 	$L__BB173_7;

	not.b32 	%r35, %r65;
	add.s32 	%r8, %r35, %r20;
	shr.u32 	%r36, %r8, 10;
	add.s32 	%r37, %r36, 1;
	and.b32  	%r64, %r37, 3;
	setp.eq.s32 	%p2, %r64, 0;
	@%p2 bra 	$L__BB173_4;

	mad.lo.s32 	%r38, %r65, %r23, %r3;
	add.s32 	%r39, %r38, %r4;
	mad.lo.s32 	%r40, %r5, %r22, %r39;
	mad.lo.s32 	%r41, %r6, %r21, %r40;
	mul.wide.s32 	%rd21, %r41, 4;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r42, %r23, 10;
	mul.wide.s32 	%rd4, %r42, 4;
	mad.lo.s32 	%r43, %r65, %r19, %r1;
	add.s32 	%r44, %r43, %r2;
	mad.lo.s32 	%r45, %r5, %r18, %r44;
	mad.lo.s32 	%r46, %r6, %r17, %r45;
	mul.wide.s32 	%rd22, %r46, 4;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r47, %r19, 10;
	mul.wide.s32 	%rd6, %r47, 4;

$L__BB173_3:
	.pragma "nounroll";
	ld.global.u32 	%r48, [%rd31];
	st.global.u32 	[%rd32], %r48;
	add.s32 	%r65, %r65, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r64, %r64, -1;
	setp.ne.s32 	%p3, %r64, 0;
	@%p3 bra 	$L__BB173_3;

$L__BB173_4:
	setp.lt.u32 	%p4, %r8, 3072;
	@%p4 bra 	$L__BB173_7;

	mad.lo.s32 	%r49, %r65, %r19, %r1;
	add.s32 	%r50, %r49, %r2;
	mad.lo.s32 	%r51, %r5, %r18, %r50;
	mad.lo.s32 	%r52, %r6, %r17, %r51;
	mad.lo.s32 	%r53, %r65, %r23, %r3;
	add.s32 	%r54, %r53, %r4;
	mad.lo.s32 	%r55, %r5, %r22, %r54;
	mad.lo.s32 	%r56, %r6, %r21, %r55;
	mul.wide.s32 	%rd23, %r56, 4;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r52, 4;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r57, %r19, 10;
	mul.wide.s32 	%rd13, %r57, 4;
	shl.b32 	%r58, %r23, 10;
	mul.wide.s32 	%rd14, %r58, 4;

$L__BB173_6:
	ld.global.u32 	%r59, [%rd34];
	st.global.u32 	[%rd33], %r59;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u32 	%r60, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u32 	[%rd26], %r60;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u32 	%r61, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u32 	[%rd28], %r61;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u32 	%r62, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u32 	[%rd30], %r62;
	add.s32 	%r65, %r65, 4096;
	setp.lt.s32 	%p5, %r65, %r20;
	@%p5 bra 	$L__BB173_6;

$L__BB173_7:
	ret;

}
	// .globl	copy_nd6_u32
.visible .entry copy_nd6_u32(
	.param .u64 copy_nd6_u32_param_0,
	.param .u64 copy_nd6_u32_param_1,
	.param .u32 copy_nd6_u32_param_2,
	.param .u32 copy_nd6_u32_param_3,
	.param .u32 copy_nd6_u32_param_4,
	.param .u32 copy_nd6_u32_param_5,
	.param .u32 copy_nd6_u32_param_6,
	.param .u32 copy_nd6_u32_param_7,
	.param .u32 copy_nd6_u32_param_8,
	.param .u32 copy_nd6_u32_param_9,
	.param .u32 copy_nd6_u32_param_10,
	.param .u32 copy_nd6_u32_param_11,
	.param .u32 copy_nd6_u32_param_12,
	.param .u32 copy_nd6_u32_param_13,
	.param .u32 copy_nd6_u32_param_14,
	.param .u32 copy_nd6_u32_param_15,
	.param .u32 copy_nd6_u32_param_16,
	.param .u32 copy_nd6_u32_param_17,
	.param .u32 copy_nd6_u32_param_18,
	.param .u32 copy_nd6_u32_param_19
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<77>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd19, [copy_nd6_u32_param_0];
	ld.param.u64 	%rd20, [copy_nd6_u32_param_1];
	ld.param.u32 	%r18, [copy_nd6_u32_param_2];
	ld.param.u32 	%r19, [copy_nd6_u32_param_3];
	ld.param.u32 	%r20, [copy_nd6_u32_param_4];
	ld.param.u32 	%r27, [copy_nd6_u32_param_5];
	ld.param.u32 	%r28, [copy_nd6_u32_param_6];
	ld.param.u32 	%r21, [copy_nd6_u32_param_7];
	ld.param.u32 	%r29, [copy_nd6_u32_param_8];
	ld.param.u32 	%r30, [copy_nd6_u32_param_9];
	ld.param.u32 	%r31, [copy_nd6_u32_param_10];
	ld.param.u32 	%r22, [copy_nd6_u32_param_13];
	ld.param.u32 	%r23, [copy_nd6_u32_param_14];
	ld.param.u32 	%r24, [copy_nd6_u32_param_15];
	ld.param.u32 	%r25, [copy_nd6_u32_param_16];
	ld.param.u32 	%r32, [copy_nd6_u32_param_17];
	ld.param.u32 	%r33, [copy_nd6_u32_param_18];
	ld.param.u32 	%r26, [copy_nd6_u32_param_19];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r34, %ctaid.x;
	mul.lo.s32 	%r1, %r34, %r28;
	mov.u32 	%r35, %ctaid.y;
	mul.lo.s32 	%r2, %r35, %r27;
	mul.lo.s32 	%r3, %r34, %r33;
	mul.lo.s32 	%r4, %r35, %r32;
	mov.u32 	%r36, %ctaid.z;
	div.s32 	%r37, %r36, %r31;
	mul.lo.s32 	%r38, %r37, %r31;
	sub.s32 	%r5, %r36, %r38;
	div.s32 	%r39, %r37, %r30;
	mul.lo.s32 	%r40, %r39, %r30;
	sub.s32 	%r6, %r37, %r40;
	rem.s32 	%r7, %r39, %r29;
	mov.u32 	%r75, %tid.x;
	setp.ge.s32 	%p1, %r75, %r22;
	@%p1 bra 	$L__BB174_7;

	not.b32 	%r41, %r75;
	add.s32 	%r9, %r41, %r22;
	shr.u32 	%r42, %r9, 10;
	add.s32 	%r43, %r42, 1;
	and.b32  	%r74, %r43, 3;
	setp.eq.s32 	%p2, %r74, 0;
	@%p2 bra 	$L__BB174_4;

	mad.lo.s32 	%r44, %r75, %r26, %r3;
	add.s32 	%r45, %r44, %r4;
	mad.lo.s32 	%r46, %r5, %r25, %r45;
	mad.lo.s32 	%r47, %r6, %r24, %r46;
	mad.lo.s32 	%r48, %r7, %r23, %r47;
	mul.wide.s32 	%rd21, %r48, 4;
	add.s64 	%rd32, %rd1, %rd21;
	shl.b32 	%r49, %r26, 10;
	mul.wide.s32 	%rd4, %r49, 4;
	mad.lo.s32 	%r50, %r75, %r21, %r1;
	add.s32 	%r51, %r50, %r2;
	mad.lo.s32 	%r52, %r5, %r20, %r51;
	mad.lo.s32 	%r53, %r6, %r19, %r52;
	mad.lo.s32 	%r54, %r7, %r18, %r53;
	mul.wide.s32 	%rd22, %r54, 4;
	add.s64 	%rd31, %rd2, %rd22;
	shl.b32 	%r55, %r21, 10;
	mul.wide.s32 	%rd6, %r55, 4;

$L__BB174_3:
	.pragma "nounroll";
	ld.global.u32 	%r56, [%rd31];
	st.global.u32 	[%rd32], %r56;
	add.s32 	%r75, %r75, 1024;
	add.s64 	%rd32, %rd32, %rd4;
	add.s64 	%rd31, %rd31, %rd6;
	add.s32 	%r74, %r74, -1;
	setp.ne.s32 	%p3, %r74, 0;
	@%p3 bra 	$L__BB174_3;

$L__BB174_4:
	setp.lt.u32 	%p4, %r9, 3072;
	@%p4 bra 	$L__BB174_7;

	mad.lo.s32 	%r57, %r75, %r21, %r1;
	add.s32 	%r58, %r57, %r2;
	mad.lo.s32 	%r59, %r5, %r20, %r58;
	mad.lo.s32 	%r60, %r6, %r19, %r59;
	mad.lo.s32 	%r61, %r7, %r18, %r60;
	mad.lo.s32 	%r62, %r75, %r26, %r3;
	add.s32 	%r63, %r62, %r4;
	mad.lo.s32 	%r64, %r5, %r25, %r63;
	mad.lo.s32 	%r65, %r6, %r24, %r64;
	mad.lo.s32 	%r66, %r7, %r23, %r65;
	mul.wide.s32 	%rd23, %r66, 4;
	add.s64 	%rd33, %rd1, %rd23;
	mul.wide.s32 	%rd24, %r61, 4;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r67, %r21, 10;
	mul.wide.s32 	%rd13, %r67, 4;
	shl.b32 	%r68, %r26, 10;
	mul.wide.s32 	%rd14, %r68, 4;

$L__BB174_6:
	ld.global.u32 	%r69, [%rd34];
	st.global.u32 	[%rd33], %r69;
	add.s64 	%rd25, %rd34, %rd13;
	ld.global.u32 	%r70, [%rd25];
	add.s64 	%rd26, %rd33, %rd14;
	st.global.u32 	[%rd26], %r70;
	add.s64 	%rd27, %rd25, %rd13;
	ld.global.u32 	%r71, [%rd27];
	add.s64 	%rd28, %rd26, %rd14;
	st.global.u32 	[%rd28], %r71;
	add.s64 	%rd29, %rd27, %rd13;
	add.s64 	%rd34, %rd29, %rd13;
	ld.global.u32 	%r72, [%rd29];
	add.s64 	%rd30, %rd28, %rd14;
	add.s64 	%rd33, %rd30, %rd14;
	st.global.u32 	[%rd30], %r72;
	add.s32 	%r75, %r75, 4096;
	setp.lt.s32 	%p5, %r75, %r22;
	@%p5 bra 	$L__BB174_6;

$L__BB174_7:
	ret;

}
	// .globl	cast_u32_bool
.visible .entry cast_u32_bool(
	.param .u64 cast_u32_bool_param_0,
	.param .u64 cast_u32_bool_param_1,
	.param .u32 cast_u32_bool_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_u32_bool_param_0];
	ld.param.u64 	%rd2, [cast_u32_bool_param_1];
	ld.param.u32 	%r2, [cast_u32_bool_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB175_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u32 	%r6, [%rd6];
	setp.ne.s32 	%p2, %r6, 0;
	selp.u16 	%rs1, 1, 0, %p2;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u8 	[%rd8], %rs1;

$L__BB175_2:
	ret;

}
	// .globl	cast_u32_f32
.visible .entry cast_u32_f32(
	.param .u64 cast_u32_f32_param_0,
	.param .u64 cast_u32_f32_param_1,
	.param .u32 cast_u32_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_u32_f32_param_0];
	ld.param.u64 	%rd2, [cast_u32_f32_param_1];
	ld.param.u32 	%r2, [cast_u32_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB176_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u32 	%r6, [%rd5];
	cvt.rn.f32.u32 	%f1, %r6;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f1;

$L__BB176_2:
	ret;

}
	// .globl	cast_u32_f16
.visible .entry cast_u32_f16(
	.param .u64 cast_u32_f16_param_0,
	.param .u64 cast_u32_f16_param_1,
	.param .u32 cast_u32_f16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_u32_f16_param_0];
	ld.param.u64 	%rd2, [cast_u32_f16_param_1];
	ld.param.u32 	%r2, [cast_u32_f16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB177_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u32 	%r6, [%rd5];
	// begin inline asm
	cvt.rn.f16.u32 %rs1, %r6;
	// end inline asm
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 2;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u16 	[%rd8], %rs1;

$L__BB177_2:
	ret;

}
	// .globl	cast_u32_u8
.visible .entry cast_u32_u8(
	.param .u64 cast_u32_u8_param_0,
	.param .u64 cast_u32_u8_param_1,
	.param .u32 cast_u32_u8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_u32_u8_param_0];
	ld.param.u64 	%rd2, [cast_u32_u8_param_1];
	ld.param.u32 	%r2, [cast_u32_u8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB178_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u32 	%r6, [%rd6];
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u8 	[%rd8], %r6;

$L__BB178_2:
	ret;

}
	// .globl	cast_u32_u16
.visible .entry cast_u32_u16(
	.param .u64 cast_u32_u16_param_0,
	.param .u64 cast_u32_u16_param_1,
	.param .u32 cast_u32_u16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_u32_u16_param_0];
	ld.param.u64 	%rd2, [cast_u32_u16_param_1];
	ld.param.u32 	%r2, [cast_u32_u16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB179_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u32 	%r6, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 2;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u16 	[%rd8], %r6;

$L__BB179_2:
	ret;

}
	// .globl	cast_u32_u32
.visible .entry cast_u32_u32(
	.param .u64 cast_u32_u32_param_0,
	.param .u64 cast_u32_u32_param_1,
	.param .u32 cast_u32_u32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_u32_u32_param_0];
	ld.param.u64 	%rd2, [cast_u32_u32_param_1];
	ld.param.u32 	%r2, [cast_u32_u32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB180_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u32 	%r6, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u32 	[%rd7], %r6;

$L__BB180_2:
	ret;

}
	// .globl	cast_u32_u64
.visible .entry cast_u32_u64(
	.param .u64 cast_u32_u64_param_0,
	.param .u64 cast_u32_u64_param_1,
	.param .u32 cast_u32_u64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_u32_u64_param_0];
	ld.param.u64 	%rd2, [cast_u32_u64_param_1];
	ld.param.u32 	%r2, [cast_u32_u64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB181_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u32 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u64 	[%rd9], %rd6;

$L__BB181_2:
	ret;

}
	// .globl	cast_u32_i8
.visible .entry cast_u32_i8(
	.param .u64 cast_u32_i8_param_0,
	.param .u64 cast_u32_i8_param_1,
	.param .u32 cast_u32_i8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_u32_i8_param_0];
	ld.param.u64 	%rd2, [cast_u32_i8_param_1];
	ld.param.u32 	%r2, [cast_u32_i8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB182_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u32 	%r6, [%rd6];
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u8 	[%rd8], %r6;

$L__BB182_2:
	ret;

}
	// .globl	cast_u32_i16
.visible .entry cast_u32_i16(
	.param .u64 cast_u32_i16_param_0,
	.param .u64 cast_u32_i16_param_1,
	.param .u32 cast_u32_i16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_u32_i16_param_0];
	ld.param.u64 	%rd2, [cast_u32_i16_param_1];
	ld.param.u32 	%r2, [cast_u32_i16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB183_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u32 	%r6, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 2;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u16 	[%rd8], %r6;

$L__BB183_2:
	ret;

}
	// .globl	cast_u32_i32
.visible .entry cast_u32_i32(
	.param .u64 cast_u32_i32_param_0,
	.param .u64 cast_u32_i32_param_1,
	.param .u32 cast_u32_i32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [cast_u32_i32_param_0];
	ld.param.u64 	%rd2, [cast_u32_i32_param_1];
	ld.param.u32 	%r2, [cast_u32_i32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB184_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u32 	%r6, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.u32 	[%rd7], %r6;

$L__BB184_2:
	ret;

}
	// .globl	cast_u32_i64
.visible .entry cast_u32_i64(
	.param .u64 cast_u32_i64_param_0,
	.param .u64 cast_u32_i64_param_1,
	.param .u32 cast_u32_i64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_u32_i64_param_0];
	ld.param.u64 	%rd2, [cast_u32_i64_param_1];
	ld.param.u32 	%r2, [cast_u32_i64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB185_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u32 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u64 	[%rd9], %rd6;

$L__BB185_2:
	ret;

}
	// .globl	copy_unicast_u64
.visible .entry copy_unicast_u64(
	.param .u64 copy_unicast_u64_param_0,
	.param .u64 copy_unicast_u64_param_1,
	.param .u32 copy_unicast_u64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [copy_unicast_u64_param_0];
	ld.param.u64 	%rd2, [copy_unicast_u64_param_1];
	ld.param.u32 	%r2, [copy_unicast_u64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB186_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u64 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u64 	[%rd8], %rd6;

$L__BB186_2:
	ret;

}
	// .globl	copy_nd1_u64
.visible .entry copy_nd1_u64(
	.param .u64 copy_nd1_u64_param_0,
	.param .u64 copy_nd1_u64_param_1,
	.param .u32 copy_nd1_u64_param_2,
	.param .u32 copy_nd1_u64_param_3,
	.param .u32 copy_nd1_u64_param_4
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<29>;
	.reg .b64 	%rd<40>;


	ld.param.u64 	%rd19, [copy_nd1_u64_param_0];
	ld.param.u64 	%rd20, [copy_nd1_u64_param_1];
	ld.param.u32 	%r11, [copy_nd1_u64_param_2];
	ld.param.u32 	%r12, [copy_nd1_u64_param_3];
	ld.param.u32 	%r13, [copy_nd1_u64_param_4];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r27, %tid.x;
	setp.ge.s32 	%p1, %r27, %r12;
	@%p1 bra 	$L__BB187_7;

	not.b32 	%r14, %r27;
	add.s32 	%r2, %r14, %r12;
	shr.u32 	%r15, %r2, 10;
	add.s32 	%r16, %r15, 1;
	and.b32  	%r26, %r16, 3;
	setp.eq.s32 	%p2, %r26, 0;
	@%p2 bra 	$L__BB187_4;

	mul.lo.s32 	%r17, %r27, %r13;
	mul.wide.s32 	%rd21, %r17, 8;
	add.s64 	%rd37, %rd1, %rd21;
	shl.b32 	%r18, %r13, 10;
	mul.wide.s32 	%rd4, %r18, 8;
	mul.lo.s32 	%r19, %r27, %r11;
	mul.wide.s32 	%rd22, %r19, 8;
	add.s64 	%rd36, %rd2, %rd22;
	shl.b32 	%r20, %r11, 10;
	mul.wide.s32 	%rd6, %r20, 8;

$L__BB187_3:
	.pragma "nounroll";
	ld.global.u64 	%rd23, [%rd36];
	st.global.u64 	[%rd37], %rd23;
	add.s32 	%r27, %r27, 1024;
	add.s64 	%rd37, %rd37, %rd4;
	add.s64 	%rd36, %rd36, %rd6;
	add.s32 	%r26, %r26, -1;
	setp.ne.s32 	%p3, %r26, 0;
	@%p3 bra 	$L__BB187_3;

$L__BB187_4:
	setp.lt.u32 	%p4, %r2, 3072;
	@%p4 bra 	$L__BB187_7;

	mul.lo.s32 	%r21, %r27, %r11;
	mul.lo.s32 	%r22, %r27, %r13;
	mul.wide.s32 	%rd24, %r22, 8;
	add.s64 	%rd38, %rd1, %rd24;
	mul.wide.s32 	%rd25, %r21, 8;
	add.s64 	%rd39, %rd2, %rd25;
	shl.b32 	%r23, %r11, 10;
	mul.wide.s32 	%rd13, %r23, 8;
	shl.b32 	%r24, %r13, 10;
	mul.wide.s32 	%rd14, %r24, 8;

$L__BB187_6:
	ld.global.u64 	%rd26, [%rd39];
	st.global.u64 	[%rd38], %rd26;
	add.s64 	%rd27, %rd39, %rd13;
	ld.global.u64 	%rd28, [%rd27];
	add.s64 	%rd29, %rd38, %rd14;
	st.global.u64 	[%rd29], %rd28;
	add.s64 	%rd30, %rd27, %rd13;
	ld.global.u64 	%rd31, [%rd30];
	add.s64 	%rd32, %rd29, %rd14;
	st.global.u64 	[%rd32], %rd31;
	add.s64 	%rd33, %rd30, %rd13;
	add.s64 	%rd39, %rd33, %rd13;
	ld.global.u64 	%rd34, [%rd33];
	add.s64 	%rd35, %rd32, %rd14;
	add.s64 	%rd38, %rd35, %rd14;
	st.global.u64 	[%rd35], %rd34;
	add.s32 	%r27, %r27, 4096;
	setp.lt.s32 	%p5, %r27, %r12;
	@%p5 bra 	$L__BB187_6;

$L__BB187_7:
	ret;

}
	// .globl	copy_nd2_u64
.visible .entry copy_nd2_u64(
	.param .u64 copy_nd2_u64_param_0,
	.param .u64 copy_nd2_u64_param_1,
	.param .u32 copy_nd2_u64_param_2,
	.param .u32 copy_nd2_u64_param_3,
	.param .u32 copy_nd2_u64_param_4,
	.param .u32 copy_nd2_u64_param_5,
	.param .u32 copy_nd2_u64_param_6,
	.param .u32 copy_nd2_u64_param_7
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<34>;
	.reg .b64 	%rd<40>;


	ld.param.u64 	%rd19, [copy_nd2_u64_param_0];
	ld.param.u64 	%rd20, [copy_nd2_u64_param_1];
	ld.param.u32 	%r16, [copy_nd2_u64_param_2];
	ld.param.u32 	%r13, [copy_nd2_u64_param_3];
	ld.param.u32 	%r14, [copy_nd2_u64_param_5];
	ld.param.u32 	%r17, [copy_nd2_u64_param_6];
	ld.param.u32 	%r15, [copy_nd2_u64_param_7];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r18, %ctaid.x;
	mul.lo.s32 	%r1, %r18, %r16;
	mul.lo.s32 	%r2, %r18, %r17;
	mov.u32 	%r32, %tid.x;
	setp.ge.s32 	%p1, %r32, %r14;
	@%p1 bra 	$L__BB188_7;

	not.b32 	%r19, %r32;
	add.s32 	%r4, %r19, %r14;
	shr.u32 	%r20, %r4, 10;
	add.s32 	%r21, %r20, 1;
	and.b32  	%r31, %r21, 3;
	setp.eq.s32 	%p2, %r31, 0;
	@%p2 bra 	$L__BB188_4;

	mad.lo.s32 	%r22, %r32, %r15, %r2;
	mul.wide.s32 	%rd21, %r22, 8;
	add.s64 	%rd37, %rd1, %rd21;
	shl.b32 	%r23, %r15, 10;
	mul.wide.s32 	%rd4, %r23, 8;
	mad.lo.s32 	%r24, %r32, %r13, %r1;
	mul.wide.s32 	%rd22, %r24, 8;
	add.s64 	%rd36, %rd2, %rd22;
	shl.b32 	%r25, %r13, 10;
	mul.wide.s32 	%rd6, %r25, 8;

$L__BB188_3:
	.pragma "nounroll";
	ld.global.u64 	%rd23, [%rd36];
	st.global.u64 	[%rd37], %rd23;
	add.s32 	%r32, %r32, 1024;
	add.s64 	%rd37, %rd37, %rd4;
	add.s64 	%rd36, %rd36, %rd6;
	add.s32 	%r31, %r31, -1;
	setp.ne.s32 	%p3, %r31, 0;
	@%p3 bra 	$L__BB188_3;

$L__BB188_4:
	setp.lt.u32 	%p4, %r4, 3072;
	@%p4 bra 	$L__BB188_7;

	mad.lo.s32 	%r26, %r32, %r13, %r1;
	mad.lo.s32 	%r27, %r32, %r15, %r2;
	mul.wide.s32 	%rd24, %r27, 8;
	add.s64 	%rd38, %rd1, %rd24;
	mul.wide.s32 	%rd25, %r26, 8;
	add.s64 	%rd39, %rd2, %rd25;
	shl.b32 	%r28, %r13, 10;
	mul.wide.s32 	%rd13, %r28, 8;
	shl.b32 	%r29, %r15, 10;
	mul.wide.s32 	%rd14, %r29, 8;

$L__BB188_6:
	ld.global.u64 	%rd26, [%rd39];
	st.global.u64 	[%rd38], %rd26;
	add.s64 	%rd27, %rd39, %rd13;
	ld.global.u64 	%rd28, [%rd27];
	add.s64 	%rd29, %rd38, %rd14;
	st.global.u64 	[%rd29], %rd28;
	add.s64 	%rd30, %rd27, %rd13;
	ld.global.u64 	%rd31, [%rd30];
	add.s64 	%rd32, %rd29, %rd14;
	st.global.u64 	[%rd32], %rd31;
	add.s64 	%rd33, %rd30, %rd13;
	add.s64 	%rd39, %rd33, %rd13;
	ld.global.u64 	%rd34, [%rd33];
	add.s64 	%rd35, %rd32, %rd14;
	add.s64 	%rd38, %rd35, %rd14;
	st.global.u64 	[%rd35], %rd34;
	add.s32 	%r32, %r32, 4096;
	setp.lt.s32 	%p5, %r32, %r14;
	@%p5 bra 	$L__BB188_6;

$L__BB188_7:
	ret;

}
	// .globl	copy_nd3_u64
.visible .entry copy_nd3_u64(
	.param .u64 copy_nd3_u64_param_0,
	.param .u64 copy_nd3_u64_param_1,
	.param .u32 copy_nd3_u64_param_2,
	.param .u32 copy_nd3_u64_param_3,
	.param .u32 copy_nd3_u64_param_4,
	.param .u32 copy_nd3_u64_param_5,
	.param .u32 copy_nd3_u64_param_6,
	.param .u32 copy_nd3_u64_param_7,
	.param .u32 copy_nd3_u64_param_8,
	.param .u32 copy_nd3_u64_param_9,
	.param .u32 copy_nd3_u64_param_10
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<43>;
	.reg .b64 	%rd<40>;


	ld.param.u64 	%rd19, [copy_nd3_u64_param_0];
	ld.param.u64 	%rd20, [copy_nd3_u64_param_1];
	ld.param.u32 	%r18, [copy_nd3_u64_param_2];
	ld.param.u32 	%r19, [copy_nd3_u64_param_3];
	ld.param.u32 	%r15, [copy_nd3_u64_param_4];
	ld.param.u32 	%r16, [copy_nd3_u64_param_7];
	ld.param.u32 	%r20, [copy_nd3_u64_param_8];
	ld.param.u32 	%r21, [copy_nd3_u64_param_9];
	ld.param.u32 	%r17, [copy_nd3_u64_param_10];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r22, %ctaid.x;
	mul.lo.s32 	%r1, %r22, %r19;
	mov.u32 	%r23, %ctaid.y;
	mul.lo.s32 	%r2, %r23, %r18;
	mul.lo.s32 	%r3, %r22, %r21;
	mul.lo.s32 	%r4, %r23, %r20;
	mov.u32 	%r41, %tid.x;
	setp.ge.s32 	%p1, %r41, %r16;
	@%p1 bra 	$L__BB189_7;

	not.b32 	%r24, %r41;
	add.s32 	%r6, %r24, %r16;
	shr.u32 	%r25, %r6, 10;
	add.s32 	%r26, %r25, 1;
	and.b32  	%r40, %r26, 3;
	setp.eq.s32 	%p2, %r40, 0;
	@%p2 bra 	$L__BB189_4;

	mad.lo.s32 	%r27, %r41, %r17, %r3;
	add.s32 	%r28, %r27, %r4;
	mul.wide.s32 	%rd21, %r28, 8;
	add.s64 	%rd37, %rd1, %rd21;
	shl.b32 	%r29, %r17, 10;
	mul.wide.s32 	%rd4, %r29, 8;
	mad.lo.s32 	%r30, %r41, %r15, %r1;
	add.s32 	%r31, %r30, %r2;
	mul.wide.s32 	%rd22, %r31, 8;
	add.s64 	%rd36, %rd2, %rd22;
	shl.b32 	%r32, %r15, 10;
	mul.wide.s32 	%rd6, %r32, 8;

$L__BB189_3:
	.pragma "nounroll";
	ld.global.u64 	%rd23, [%rd36];
	st.global.u64 	[%rd37], %rd23;
	add.s32 	%r41, %r41, 1024;
	add.s64 	%rd37, %rd37, %rd4;
	add.s64 	%rd36, %rd36, %rd6;
	add.s32 	%r40, %r40, -1;
	setp.ne.s32 	%p3, %r40, 0;
	@%p3 bra 	$L__BB189_3;

$L__BB189_4:
	setp.lt.u32 	%p4, %r6, 3072;
	@%p4 bra 	$L__BB189_7;

	mad.lo.s32 	%r33, %r41, %r15, %r1;
	add.s32 	%r34, %r33, %r2;
	mad.lo.s32 	%r35, %r41, %r17, %r3;
	add.s32 	%r36, %r35, %r4;
	mul.wide.s32 	%rd24, %r36, 8;
	add.s64 	%rd38, %rd1, %rd24;
	mul.wide.s32 	%rd25, %r34, 8;
	add.s64 	%rd39, %rd2, %rd25;
	shl.b32 	%r37, %r15, 10;
	mul.wide.s32 	%rd13, %r37, 8;
	shl.b32 	%r38, %r17, 10;
	mul.wide.s32 	%rd14, %r38, 8;

$L__BB189_6:
	ld.global.u64 	%rd26, [%rd39];
	st.global.u64 	[%rd38], %rd26;
	add.s64 	%rd27, %rd39, %rd13;
	ld.global.u64 	%rd28, [%rd27];
	add.s64 	%rd29, %rd38, %rd14;
	st.global.u64 	[%rd29], %rd28;
	add.s64 	%rd30, %rd27, %rd13;
	ld.global.u64 	%rd31, [%rd30];
	add.s64 	%rd32, %rd29, %rd14;
	st.global.u64 	[%rd32], %rd31;
	add.s64 	%rd33, %rd30, %rd13;
	add.s64 	%rd39, %rd33, %rd13;
	ld.global.u64 	%rd34, [%rd33];
	add.s64 	%rd35, %rd32, %rd14;
	add.s64 	%rd38, %rd35, %rd14;
	st.global.u64 	[%rd35], %rd34;
	add.s32 	%r41, %r41, 4096;
	setp.lt.s32 	%p5, %r41, %r16;
	@%p5 bra 	$L__BB189_6;

$L__BB189_7:
	ret;

}
	// .globl	copy_nd4_u64
.visible .entry copy_nd4_u64(
	.param .u64 copy_nd4_u64_param_0,
	.param .u64 copy_nd4_u64_param_1,
	.param .u32 copy_nd4_u64_param_2,
	.param .u32 copy_nd4_u64_param_3,
	.param .u32 copy_nd4_u64_param_4,
	.param .u32 copy_nd4_u64_param_5,
	.param .u32 copy_nd4_u64_param_6,
	.param .u32 copy_nd4_u64_param_7,
	.param .u32 copy_nd4_u64_param_8,
	.param .u32 copy_nd4_u64_param_9,
	.param .u32 copy_nd4_u64_param_10,
	.param .u32 copy_nd4_u64_param_11,
	.param .u32 copy_nd4_u64_param_12,
	.param .u32 copy_nd4_u64_param_13
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<52>;
	.reg .b64 	%rd<40>;


	ld.param.u64 	%rd19, [copy_nd4_u64_param_0];
	ld.param.u64 	%rd20, [copy_nd4_u64_param_1];
	ld.param.u32 	%r20, [copy_nd4_u64_param_2];
	ld.param.u32 	%r21, [copy_nd4_u64_param_3];
	ld.param.u32 	%r22, [copy_nd4_u64_param_4];
	ld.param.u32 	%r17, [copy_nd4_u64_param_5];
	ld.param.u32 	%r18, [copy_nd4_u64_param_9];
	ld.param.u32 	%r23, [copy_nd4_u64_param_10];
	ld.param.u32 	%r24, [copy_nd4_u64_param_11];
	ld.param.u32 	%r25, [copy_nd4_u64_param_12];
	ld.param.u32 	%r19, [copy_nd4_u64_param_13];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r26, %ctaid.x;
	mul.lo.s32 	%r1, %r26, %r22;
	mov.u32 	%r27, %ctaid.y;
	mul.lo.s32 	%r2, %r27, %r21;
	mov.u32 	%r28, %ctaid.z;
	mul.lo.s32 	%r3, %r28, %r20;
	mul.lo.s32 	%r4, %r26, %r25;
	mul.lo.s32 	%r5, %r27, %r24;
	mul.lo.s32 	%r6, %r28, %r23;
	mov.u32 	%r50, %tid.x;
	setp.ge.s32 	%p1, %r50, %r18;
	@%p1 bra 	$L__BB190_7;

	not.b32 	%r29, %r50;
	add.s32 	%r8, %r29, %r18;
	shr.u32 	%r30, %r8, 10;
	add.s32 	%r31, %r30, 1;
	and.b32  	%r49, %r31, 3;
	setp.eq.s32 	%p2, %r49, 0;
	@%p2 bra 	$L__BB190_4;

	mad.lo.s32 	%r32, %r50, %r19, %r4;
	add.s32 	%r33, %r32, %r5;
	add.s32 	%r34, %r33, %r6;
	mul.wide.s32 	%rd21, %r34, 8;
	add.s64 	%rd37, %rd1, %rd21;
	shl.b32 	%r35, %r19, 10;
	mul.wide.s32 	%rd4, %r35, 8;
	mad.lo.s32 	%r36, %r50, %r17, %r1;
	add.s32 	%r37, %r36, %r2;
	add.s32 	%r38, %r37, %r3;
	mul.wide.s32 	%rd22, %r38, 8;
	add.s64 	%rd36, %rd2, %rd22;
	shl.b32 	%r39, %r17, 10;
	mul.wide.s32 	%rd6, %r39, 8;

$L__BB190_3:
	.pragma "nounroll";
	ld.global.u64 	%rd23, [%rd36];
	st.global.u64 	[%rd37], %rd23;
	add.s32 	%r50, %r50, 1024;
	add.s64 	%rd37, %rd37, %rd4;
	add.s64 	%rd36, %rd36, %rd6;
	add.s32 	%r49, %r49, -1;
	setp.ne.s32 	%p3, %r49, 0;
	@%p3 bra 	$L__BB190_3;

$L__BB190_4:
	setp.lt.u32 	%p4, %r8, 3072;
	@%p4 bra 	$L__BB190_7;

	mad.lo.s32 	%r40, %r50, %r17, %r1;
	add.s32 	%r41, %r40, %r2;
	add.s32 	%r42, %r41, %r3;
	mad.lo.s32 	%r43, %r50, %r19, %r4;
	add.s32 	%r44, %r43, %r5;
	add.s32 	%r45, %r44, %r6;
	mul.wide.s32 	%rd24, %r45, 8;
	add.s64 	%rd38, %rd1, %rd24;
	mul.wide.s32 	%rd25, %r42, 8;
	add.s64 	%rd39, %rd2, %rd25;
	shl.b32 	%r46, %r17, 10;
	mul.wide.s32 	%rd13, %r46, 8;
	shl.b32 	%r47, %r19, 10;
	mul.wide.s32 	%rd14, %r47, 8;

$L__BB190_6:
	ld.global.u64 	%rd26, [%rd39];
	st.global.u64 	[%rd38], %rd26;
	add.s64 	%rd27, %rd39, %rd13;
	ld.global.u64 	%rd28, [%rd27];
	add.s64 	%rd29, %rd38, %rd14;
	st.global.u64 	[%rd29], %rd28;
	add.s64 	%rd30, %rd27, %rd13;
	ld.global.u64 	%rd31, [%rd30];
	add.s64 	%rd32, %rd29, %rd14;
	st.global.u64 	[%rd32], %rd31;
	add.s64 	%rd33, %rd30, %rd13;
	add.s64 	%rd39, %rd33, %rd13;
	ld.global.u64 	%rd34, [%rd33];
	add.s64 	%rd35, %rd32, %rd14;
	add.s64 	%rd38, %rd35, %rd14;
	st.global.u64 	[%rd35], %rd34;
	add.s32 	%r50, %r50, 4096;
	setp.lt.s32 	%p5, %r50, %r18;
	@%p5 bra 	$L__BB190_6;

$L__BB190_7:
	ret;

}
	// .globl	copy_nd5_u64
.visible .entry copy_nd5_u64(
	.param .u64 copy_nd5_u64_param_0,
	.param .u64 copy_nd5_u64_param_1,
	.param .u32 copy_nd5_u64_param_2,
	.param .u32 copy_nd5_u64_param_3,
	.param .u32 copy_nd5_u64_param_4,
	.param .u32 copy_nd5_u64_param_5,
	.param .u32 copy_nd5_u64_param_6,
	.param .u32 copy_nd5_u64_param_7,
	.param .u32 copy_nd5_u64_param_8,
	.param .u32 copy_nd5_u64_param_9,
	.param .u32 copy_nd5_u64_param_10,
	.param .u32 copy_nd5_u64_param_11,
	.param .u32 copy_nd5_u64_param_12,
	.param .u32 copy_nd5_u64_param_13,
	.param .u32 copy_nd5_u64_param_14,
	.param .u32 copy_nd5_u64_param_15,
	.param .u32 copy_nd5_u64_param_16
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<62>;
	.reg .b64 	%rd<40>;


	ld.param.u64 	%rd19, [copy_nd5_u64_param_0];
	ld.param.u64 	%rd20, [copy_nd5_u64_param_1];
	ld.param.u32 	%r17, [copy_nd5_u64_param_2];
	ld.param.u32 	%r18, [copy_nd5_u64_param_3];
	ld.param.u32 	%r24, [copy_nd5_u64_param_4];
	ld.param.u32 	%r25, [copy_nd5_u64_param_5];
	ld.param.u32 	%r19, [copy_nd5_u64_param_6];
	ld.param.u32 	%r26, [copy_nd5_u64_param_7];
	ld.param.u32 	%r27, [copy_nd5_u64_param_8];
	ld.param.u32 	%r20, [copy_nd5_u64_param_11];
	ld.param.u32 	%r21, [copy_nd5_u64_param_12];
	ld.param.u32 	%r22, [copy_nd5_u64_param_13];
	ld.param.u32 	%r28, [copy_nd5_u64_param_14];
	ld.param.u32 	%r29, [copy_nd5_u64_param_15];
	ld.param.u32 	%r23, [copy_nd5_u64_param_16];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r30, %ctaid.x;
	mul.lo.s32 	%r1, %r30, %r25;
	mov.u32 	%r31, %ctaid.y;
	mul.lo.s32 	%r2, %r31, %r24;
	mul.lo.s32 	%r3, %r30, %r29;
	mul.lo.s32 	%r4, %r31, %r28;
	mov.u32 	%r32, %ctaid.z;
	div.s32 	%r33, %r32, %r27;
	mul.lo.s32 	%r34, %r33, %r27;
	sub.s32 	%r5, %r32, %r34;
	rem.s32 	%r6, %r33, %r26;
	mov.u32 	%r60, %tid.x;
	setp.ge.s32 	%p1, %r60, %r20;
	@%p1 bra 	$L__BB191_7;

	not.b32 	%r35, %r60;
	add.s32 	%r8, %r35, %r20;
	shr.u32 	%r36, %r8, 10;
	add.s32 	%r37, %r36, 1;
	and.b32  	%r59, %r37, 3;
	setp.eq.s32 	%p2, %r59, 0;
	@%p2 bra 	$L__BB191_4;

	mad.lo.s32 	%r38, %r60, %r23, %r3;
	add.s32 	%r39, %r38, %r4;
	mad.lo.s32 	%r40, %r5, %r22, %r39;
	mad.lo.s32 	%r41, %r6, %r21, %r40;
	mul.wide.s32 	%rd21, %r41, 8;
	add.s64 	%rd37, %rd1, %rd21;
	shl.b32 	%r42, %r23, 10;
	mul.wide.s32 	%rd4, %r42, 8;
	mad.lo.s32 	%r43, %r60, %r19, %r1;
	add.s32 	%r44, %r43, %r2;
	mad.lo.s32 	%r45, %r5, %r18, %r44;
	mad.lo.s32 	%r46, %r6, %r17, %r45;
	mul.wide.s32 	%rd22, %r46, 8;
	add.s64 	%rd36, %rd2, %rd22;
	shl.b32 	%r47, %r19, 10;
	mul.wide.s32 	%rd6, %r47, 8;

$L__BB191_3:
	.pragma "nounroll";
	ld.global.u64 	%rd23, [%rd36];
	st.global.u64 	[%rd37], %rd23;
	add.s32 	%r60, %r60, 1024;
	add.s64 	%rd37, %rd37, %rd4;
	add.s64 	%rd36, %rd36, %rd6;
	add.s32 	%r59, %r59, -1;
	setp.ne.s32 	%p3, %r59, 0;
	@%p3 bra 	$L__BB191_3;

$L__BB191_4:
	setp.lt.u32 	%p4, %r8, 3072;
	@%p4 bra 	$L__BB191_7;

	mad.lo.s32 	%r48, %r60, %r19, %r1;
	add.s32 	%r49, %r48, %r2;
	mad.lo.s32 	%r50, %r5, %r18, %r49;
	mad.lo.s32 	%r51, %r6, %r17, %r50;
	mad.lo.s32 	%r52, %r60, %r23, %r3;
	add.s32 	%r53, %r52, %r4;
	mad.lo.s32 	%r54, %r5, %r22, %r53;
	mad.lo.s32 	%r55, %r6, %r21, %r54;
	mul.wide.s32 	%rd24, %r55, 8;
	add.s64 	%rd38, %rd1, %rd24;
	mul.wide.s32 	%rd25, %r51, 8;
	add.s64 	%rd39, %rd2, %rd25;
	shl.b32 	%r56, %r19, 10;
	mul.wide.s32 	%rd13, %r56, 8;
	shl.b32 	%r57, %r23, 10;
	mul.wide.s32 	%rd14, %r57, 8;

$L__BB191_6:
	ld.global.u64 	%rd26, [%rd39];
	st.global.u64 	[%rd38], %rd26;
	add.s64 	%rd27, %rd39, %rd13;
	ld.global.u64 	%rd28, [%rd27];
	add.s64 	%rd29, %rd38, %rd14;
	st.global.u64 	[%rd29], %rd28;
	add.s64 	%rd30, %rd27, %rd13;
	ld.global.u64 	%rd31, [%rd30];
	add.s64 	%rd32, %rd29, %rd14;
	st.global.u64 	[%rd32], %rd31;
	add.s64 	%rd33, %rd30, %rd13;
	add.s64 	%rd39, %rd33, %rd13;
	ld.global.u64 	%rd34, [%rd33];
	add.s64 	%rd35, %rd32, %rd14;
	add.s64 	%rd38, %rd35, %rd14;
	st.global.u64 	[%rd35], %rd34;
	add.s32 	%r60, %r60, 4096;
	setp.lt.s32 	%p5, %r60, %r20;
	@%p5 bra 	$L__BB191_6;

$L__BB191_7:
	ret;

}
	// .globl	copy_nd6_u64
.visible .entry copy_nd6_u64(
	.param .u64 copy_nd6_u64_param_0,
	.param .u64 copy_nd6_u64_param_1,
	.param .u32 copy_nd6_u64_param_2,
	.param .u32 copy_nd6_u64_param_3,
	.param .u32 copy_nd6_u64_param_4,
	.param .u32 copy_nd6_u64_param_5,
	.param .u32 copy_nd6_u64_param_6,
	.param .u32 copy_nd6_u64_param_7,
	.param .u32 copy_nd6_u64_param_8,
	.param .u32 copy_nd6_u64_param_9,
	.param .u32 copy_nd6_u64_param_10,
	.param .u32 copy_nd6_u64_param_11,
	.param .u32 copy_nd6_u64_param_12,
	.param .u32 copy_nd6_u64_param_13,
	.param .u32 copy_nd6_u64_param_14,
	.param .u32 copy_nd6_u64_param_15,
	.param .u32 copy_nd6_u64_param_16,
	.param .u32 copy_nd6_u64_param_17,
	.param .u32 copy_nd6_u64_param_18,
	.param .u32 copy_nd6_u64_param_19
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<72>;
	.reg .b64 	%rd<40>;


	ld.param.u64 	%rd19, [copy_nd6_u64_param_0];
	ld.param.u64 	%rd20, [copy_nd6_u64_param_1];
	ld.param.u32 	%r18, [copy_nd6_u64_param_2];
	ld.param.u32 	%r19, [copy_nd6_u64_param_3];
	ld.param.u32 	%r20, [copy_nd6_u64_param_4];
	ld.param.u32 	%r27, [copy_nd6_u64_param_5];
	ld.param.u32 	%r28, [copy_nd6_u64_param_6];
	ld.param.u32 	%r21, [copy_nd6_u64_param_7];
	ld.param.u32 	%r29, [copy_nd6_u64_param_8];
	ld.param.u32 	%r30, [copy_nd6_u64_param_9];
	ld.param.u32 	%r31, [copy_nd6_u64_param_10];
	ld.param.u32 	%r22, [copy_nd6_u64_param_13];
	ld.param.u32 	%r23, [copy_nd6_u64_param_14];
	ld.param.u32 	%r24, [copy_nd6_u64_param_15];
	ld.param.u32 	%r25, [copy_nd6_u64_param_16];
	ld.param.u32 	%r32, [copy_nd6_u64_param_17];
	ld.param.u32 	%r33, [copy_nd6_u64_param_18];
	ld.param.u32 	%r26, [copy_nd6_u64_param_19];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r34, %ctaid.x;
	mul.lo.s32 	%r1, %r34, %r28;
	mov.u32 	%r35, %ctaid.y;
	mul.lo.s32 	%r2, %r35, %r27;
	mul.lo.s32 	%r3, %r34, %r33;
	mul.lo.s32 	%r4, %r35, %r32;
	mov.u32 	%r36, %ctaid.z;
	div.s32 	%r37, %r36, %r31;
	mul.lo.s32 	%r38, %r37, %r31;
	sub.s32 	%r5, %r36, %r38;
	div.s32 	%r39, %r37, %r30;
	mul.lo.s32 	%r40, %r39, %r30;
	sub.s32 	%r6, %r37, %r40;
	rem.s32 	%r7, %r39, %r29;
	mov.u32 	%r70, %tid.x;
	setp.ge.s32 	%p1, %r70, %r22;
	@%p1 bra 	$L__BB192_7;

	not.b32 	%r41, %r70;
	add.s32 	%r9, %r41, %r22;
	shr.u32 	%r42, %r9, 10;
	add.s32 	%r43, %r42, 1;
	and.b32  	%r69, %r43, 3;
	setp.eq.s32 	%p2, %r69, 0;
	@%p2 bra 	$L__BB192_4;

	mad.lo.s32 	%r44, %r70, %r26, %r3;
	add.s32 	%r45, %r44, %r4;
	mad.lo.s32 	%r46, %r5, %r25, %r45;
	mad.lo.s32 	%r47, %r6, %r24, %r46;
	mad.lo.s32 	%r48, %r7, %r23, %r47;
	mul.wide.s32 	%rd21, %r48, 8;
	add.s64 	%rd37, %rd1, %rd21;
	shl.b32 	%r49, %r26, 10;
	mul.wide.s32 	%rd4, %r49, 8;
	mad.lo.s32 	%r50, %r70, %r21, %r1;
	add.s32 	%r51, %r50, %r2;
	mad.lo.s32 	%r52, %r5, %r20, %r51;
	mad.lo.s32 	%r53, %r6, %r19, %r52;
	mad.lo.s32 	%r54, %r7, %r18, %r53;
	mul.wide.s32 	%rd22, %r54, 8;
	add.s64 	%rd36, %rd2, %rd22;
	shl.b32 	%r55, %r21, 10;
	mul.wide.s32 	%rd6, %r55, 8;

$L__BB192_3:
	.pragma "nounroll";
	ld.global.u64 	%rd23, [%rd36];
	st.global.u64 	[%rd37], %rd23;
	add.s32 	%r70, %r70, 1024;
	add.s64 	%rd37, %rd37, %rd4;
	add.s64 	%rd36, %rd36, %rd6;
	add.s32 	%r69, %r69, -1;
	setp.ne.s32 	%p3, %r69, 0;
	@%p3 bra 	$L__BB192_3;

$L__BB192_4:
	setp.lt.u32 	%p4, %r9, 3072;
	@%p4 bra 	$L__BB192_7;

	mad.lo.s32 	%r56, %r70, %r21, %r1;
	add.s32 	%r57, %r56, %r2;
	mad.lo.s32 	%r58, %r5, %r20, %r57;
	mad.lo.s32 	%r59, %r6, %r19, %r58;
	mad.lo.s32 	%r60, %r7, %r18, %r59;
	mad.lo.s32 	%r61, %r70, %r26, %r3;
	add.s32 	%r62, %r61, %r4;
	mad.lo.s32 	%r63, %r5, %r25, %r62;
	mad.lo.s32 	%r64, %r6, %r24, %r63;
	mad.lo.s32 	%r65, %r7, %r23, %r64;
	mul.wide.s32 	%rd24, %r65, 8;
	add.s64 	%rd38, %rd1, %rd24;
	mul.wide.s32 	%rd25, %r60, 8;
	add.s64 	%rd39, %rd2, %rd25;
	shl.b32 	%r66, %r21, 10;
	mul.wide.s32 	%rd13, %r66, 8;
	shl.b32 	%r67, %r26, 10;
	mul.wide.s32 	%rd14, %r67, 8;

$L__BB192_6:
	ld.global.u64 	%rd26, [%rd39];
	st.global.u64 	[%rd38], %rd26;
	add.s64 	%rd27, %rd39, %rd13;
	ld.global.u64 	%rd28, [%rd27];
	add.s64 	%rd29, %rd38, %rd14;
	st.global.u64 	[%rd29], %rd28;
	add.s64 	%rd30, %rd27, %rd13;
	ld.global.u64 	%rd31, [%rd30];
	add.s64 	%rd32, %rd29, %rd14;
	st.global.u64 	[%rd32], %rd31;
	add.s64 	%rd33, %rd30, %rd13;
	add.s64 	%rd39, %rd33, %rd13;
	ld.global.u64 	%rd34, [%rd33];
	add.s64 	%rd35, %rd32, %rd14;
	add.s64 	%rd38, %rd35, %rd14;
	st.global.u64 	[%rd35], %rd34;
	add.s32 	%r70, %r70, 4096;
	setp.lt.s32 	%p5, %r70, %r22;
	@%p5 bra 	$L__BB192_6;

$L__BB192_7:
	ret;

}
	// .globl	cast_u64_bool
.visible .entry cast_u64_bool(
	.param .u64 cast_u64_bool_param_0,
	.param .u64 cast_u64_bool_param_1,
	.param .u32 cast_u64_bool_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_u64_bool_param_0];
	ld.param.u64 	%rd2, [cast_u64_bool_param_1];
	ld.param.u32 	%r2, [cast_u64_bool_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB193_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u64 	%rd7, [%rd6];
	setp.ne.s64 	%p2, %rd7, 0;
	selp.u16 	%rs1, 1, 0, %p2;
	cvta.to.global.u64 	%rd8, %rd2;
	add.s64 	%rd9, %rd8, %rd4;
	st.global.u8 	[%rd9], %rs1;

$L__BB193_2:
	ret;

}
	// .globl	cast_u64_f32
.visible .entry cast_u64_f32(
	.param .u64 cast_u64_f32_param_0,
	.param .u64 cast_u64_f32_param_1,
	.param .u32 cast_u64_f32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_u64_f32_param_0];
	ld.param.u64 	%rd2, [cast_u64_f32_param_1];
	ld.param.u32 	%r2, [cast_u64_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB194_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u64 	%rd6, [%rd5];
	cvt.rn.f32.u64 	%f1, %rd6;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.f32 	[%rd9], %f1;

$L__BB194_2:
	ret;

}
	// .globl	cast_u64_f16
.visible .entry cast_u64_f16(
	.param .u64 cast_u64_f16_param_0,
	.param .u64 cast_u64_f16_param_1,
	.param .u32 cast_u64_f16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_u64_f16_param_0];
	ld.param.u64 	%rd2, [cast_u64_f16_param_1];
	ld.param.u32 	%r2, [cast_u64_f16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB195_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u64 	%rd3, [%rd6];
	// begin inline asm
	cvt.rn.f16.u64 %rs1, %rd3;
	// end inline asm
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 2;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u16 	[%rd9], %rs1;

$L__BB195_2:
	ret;

}
	// .globl	cast_u64_u8
.visible .entry cast_u64_u8(
	.param .u64 cast_u64_u8_param_0,
	.param .u64 cast_u64_u8_param_1,
	.param .u32 cast_u64_u8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_u64_u8_param_0];
	ld.param.u64 	%rd2, [cast_u64_u8_param_1];
	ld.param.u32 	%r2, [cast_u64_u8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB196_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u64 	%rd7, [%rd6];
	cvta.to.global.u64 	%rd8, %rd2;
	add.s64 	%rd9, %rd8, %rd4;
	st.global.u8 	[%rd9], %rd7;

$L__BB196_2:
	ret;

}
	// .globl	cast_u64_u16
.visible .entry cast_u64_u16(
	.param .u64 cast_u64_u16_param_0,
	.param .u64 cast_u64_u16_param_1,
	.param .u32 cast_u64_u16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_u64_u16_param_0];
	ld.param.u64 	%rd2, [cast_u64_u16_param_1];
	ld.param.u32 	%r2, [cast_u64_u16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB197_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u64 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 2;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u16 	[%rd9], %rd6;

$L__BB197_2:
	ret;

}
	// .globl	cast_u64_u32
.visible .entry cast_u64_u32(
	.param .u64 cast_u64_u32_param_0,
	.param .u64 cast_u64_u32_param_1,
	.param .u32 cast_u64_u32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_u64_u32_param_0];
	ld.param.u64 	%rd2, [cast_u64_u32_param_1];
	ld.param.u32 	%r2, [cast_u64_u32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB198_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u64 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u32 	[%rd9], %rd6;

$L__BB198_2:
	ret;

}
	// .globl	cast_u64_u64
.visible .entry cast_u64_u64(
	.param .u64 cast_u64_u64_param_0,
	.param .u64 cast_u64_u64_param_1,
	.param .u32 cast_u64_u64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_u64_u64_param_0];
	ld.param.u64 	%rd2, [cast_u64_u64_param_1];
	ld.param.u32 	%r2, [cast_u64_u64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB199_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u64 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u64 	[%rd8], %rd6;

$L__BB199_2:
	ret;

}
	// .globl	cast_u64_i8
.visible .entry cast_u64_i8(
	.param .u64 cast_u64_i8_param_0,
	.param .u64 cast_u64_i8_param_1,
	.param .u32 cast_u64_i8_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_u64_i8_param_0];
	ld.param.u64 	%rd2, [cast_u64_i8_param_1];
	ld.param.u32 	%r2, [cast_u64_i8_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB200_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32 	%rd4, %r1;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u64 	%rd7, [%rd6];
	cvta.to.global.u64 	%rd8, %rd2;
	add.s64 	%rd9, %rd8, %rd4;
	st.global.u8 	[%rd9], %rd7;

$L__BB200_2:
	ret;

}
	// .globl	cast_u64_i16
.visible .entry cast_u64_i16(
	.param .u64 cast_u64_i16_param_0,
	.param .u64 cast_u64_i16_param_1,
	.param .u32 cast_u64_i16_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_u64_i16_param_0];
	ld.param.u64 	%rd2, [cast_u64_i16_param_1];
	ld.param.u32 	%r2, [cast_u64_i16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB201_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u64 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 2;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u16 	[%rd9], %rd6;

$L__BB201_2:
	ret;

}
	// .globl	cast_u64_i32
.visible .entry cast_u64_i32(
	.param .u64 cast_u64_i32_param_0,
	.param .u64 cast_u64_i32_param_1,
	.param .u32 cast_u64_i32_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [cast_u64_i32_param_0];
	ld.param.u64 	%rd2, [cast_u64_i32_param_1];
	ld.param.u32 	%r2, [cast_u64_i32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB202_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u64 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u32 	[%rd9], %rd6;

$L__BB202_2:
	ret;

}
	// .globl	cast_u64_i64
.visible .entry cast_u64_i64(
	.param .u64 cast_u64_i64_param_0,
	.param .u64 cast_u64_i64_param_1,
	.param .u32 cast_u64_i64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [cast_u64_i64_param_0];
	ld.param.u64 	%rd2, [cast_u64_i64_param_1];
	ld.param.u32 	%r2, [cast_u64_i64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB203_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u64 	%rd6, [%rd5];
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd4;
	st.global.u64 	[%rd8], %rd6;

$L__BB203_2:
	ret;

}

