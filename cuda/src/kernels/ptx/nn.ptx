//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-35583870
// Cuda compilation tools, release 12.8, V12.8.93
// Based on NVVM 7.0.1
//

.version 8.7
.target sm_87
.address_size 64

	// .globl	gelu_approx_f32
// _ZZ12rms_norm_f32E5s_sum has been demoted
// _ZZ12rms_norm_f16E5s_sum has been demoted

.visible .entry gelu_approx_f32(
	.param .u64 gelu_approx_f32_param_0,
	.param .u64 gelu_approx_f32_param_1,
	.param .u32 gelu_approx_f32_param_2
)
{
	.reg .pred 	%p<16>;
	.reg .f32 	%f<110>;
	.reg .b32 	%r<22>;
	.reg .f64 	%fd<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd2, [gelu_approx_f32_param_0];
	ld.param.u64 	%rd3, [gelu_approx_f32_param_1];
	ld.param.u32 	%r2, [gelu_approx_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_9;

	cvta.to.global.u64 	%rd4, %rd2;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	mov.f32 	%f10, 0f3FC00000;
	cvt.rzi.f32.f32 	%f11, %f10;
	add.f32 	%f12, %f11, %f11;
	mov.f32 	%f13, 0f40400000;
	sub.f32 	%f14, %f13, %f12;
	abs.f32 	%f2, %f14;
	abs.f32 	%f3, %f1;
	setp.lt.f32 	%p2, %f3, 0f00800000;
	mul.f32 	%f15, %f3, 0f4B800000;
	selp.f32 	%f16, %f15, %f3, %p2;
	selp.f32 	%f17, 0fC1C00000, 0f00000000, %p2;
	mov.b32 	%r6, %f16;
	add.s32 	%r7, %r6, -1060439283;
	and.b32  	%r8, %r7, -8388608;
	sub.s32 	%r9, %r6, %r8;
	mov.b32 	%f18, %r9;
	cvt.rn.f32.s32 	%f19, %r8;
	mov.f32 	%f20, 0f34000000;
	fma.rn.f32 	%f21, %f19, %f20, %f17;
	add.f32 	%f22, %f18, 0fBF800000;
	add.f32 	%f23, %f18, 0f3F800000;
	mov.f32 	%f9, 0f3F800000;
	rcp.approx.ftz.f32 	%f24, %f23;
	add.f32 	%f25, %f22, %f22;
	mul.f32 	%f26, %f25, %f24;
	mul.f32 	%f27, %f26, %f26;
	sub.f32 	%f28, %f22, %f26;
	add.f32 	%f29, %f28, %f28;
	neg.f32 	%f30, %f26;
	fma.rn.f32 	%f31, %f30, %f22, %f29;
	mul.rn.f32 	%f32, %f24, %f31;
	mov.f32 	%f33, 0f3B52E7DB;
	mov.f32 	%f34, 0f3A2C32E4;
	fma.rn.f32 	%f35, %f34, %f27, %f33;
	mov.f32 	%f36, 0f3C93BB73;
	fma.rn.f32 	%f37, %f35, %f27, %f36;
	mov.f32 	%f38, 0f3DF6384F;
	fma.rn.f32 	%f39, %f37, %f27, %f38;
	mul.rn.f32 	%f40, %f39, %f27;
	mov.f32 	%f41, 0f3FB8AA3B;
	fma.rn.f32 	%f42, %f26, %f41, %f21;
	sub.f32 	%f43, %f21, %f42;
	fma.rn.f32 	%f44, %f26, %f41, %f43;
	fma.rn.f32 	%f45, %f32, %f41, %f44;
	mov.f32 	%f46, 0f32A55E34;
	fma.rn.f32 	%f47, %f26, %f46, %f45;
	mul.f32 	%f48, %f40, 0f40400000;
	fma.rn.f32 	%f49, %f48, %f32, %f47;
	fma.rn.f32 	%f50, %f40, %f26, %f49;
	add.rn.f32 	%f51, %f42, %f50;
	neg.f32 	%f52, %f42;
	add.rn.f32 	%f53, %f51, %f52;
	neg.f32 	%f54, %f53;
	add.rn.f32 	%f55, %f50, %f54;
	mul.rn.f32 	%f56, %f51, %f13;
	neg.f32 	%f57, %f56;
	fma.rn.f32 	%f58, %f51, %f13, %f57;
	fma.rn.f32 	%f59, %f55, %f13, %f58;
	cvt.rni.f32.f32 	%f60, %f56;
	sub.f32 	%f61, %f56, %f60;
	add.f32 	%f62, %f59, %f61;
	mov.f32 	%f63, 0f3AAF85ED;
	mov.f32 	%f64, 0f391FCB8E;
	fma.rn.f32 	%f65, %f64, %f62, %f63;
	mov.f32 	%f66, 0f3C1D9856;
	fma.rn.f32 	%f67, %f65, %f62, %f66;
	mov.f32 	%f68, 0f3D6357BB;
	fma.rn.f32 	%f69, %f67, %f62, %f68;
	mov.f32 	%f70, 0f3E75FDEC;
	fma.rn.f32 	%f71, %f69, %f62, %f70;
	mov.f32 	%f72, 0f3F317218;
	fma.rn.f32 	%f73, %f71, %f62, %f72;
	fma.rn.f32 	%f74, %f73, %f62, %f9;
	cvt.rzi.s32.f32 	%r10, %f60;
	setp.gt.f32 	%p3, %f60, 0f00000000;
	selp.b32 	%r11, 0, -2097152000, %p3;
	add.s32 	%r12, %r11, 2130706432;
	mov.b32 	%f75, %r12;
	mul.f32 	%f76, %f74, %f75;
	shl.b32 	%r13, %r10, 23;
	sub.s32 	%r14, %r13, %r11;
	mov.b32 	%f77, %r14;
	mul.f32 	%f78, %f76, %f77;
	abs.f32 	%f79, %f56;
	setp.gt.f32 	%p4, %f79, 0f43180000;
	setp.lt.f32 	%p5, %f56, 0f00000000;
	selp.f32 	%f80, 0f00000000, 0f7F800000, %p5;
	selp.f32 	%f4, %f80, %f78, %p4;
	setp.eq.f32 	%p6, %f1, 0f3F800000;
	mov.f32 	%f109, %f9;
	@%p6 bra 	$L__BB0_8;

	setp.gtu.f32 	%p7, %f3, 0f7F800000;
	@%p7 bra 	$L__BB0_7;
	bra.uni 	$L__BB0_3;

$L__BB0_7:
	mov.f32 	%f83, 0f40400000;
	add.rn.f32 	%f109, %f1, %f83;
	bra.uni 	$L__BB0_8;

$L__BB0_3:
	setp.eq.f32 	%p8, %f1, 0f00000000;
	setp.eq.f32 	%p9, %f3, 0f7F800000;
	or.pred  	%p10, %p8, %p9;
	@%p10 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_4;

$L__BB0_6:
	setp.eq.f32 	%p13, %f2, 0f3F800000;
	add.f32 	%f82, %f1, %f1;
	mov.b32 	%r15, %f82;
	and.b32  	%r16, %r15, 2147483647;
	selp.b32 	%r17, %r15, %r16, %p13;
	mov.b32 	%f109, %r17;
	bra.uni 	$L__BB0_8;

$L__BB0_4:
	setp.geu.f32 	%p11, %f1, 0f00000000;
	mov.f32 	%f109, %f4;
	@%p11 bra 	$L__BB0_8;

	setp.eq.f32 	%p12, %f2, 0f3F800000;
	neg.f32 	%f81, %f4;
	selp.f32 	%f109, %f81, %f4, %p12;

$L__BB0_8:
	fma.rn.f32 	%f84, %f109, 0f3D372713, %f1;
	mul.f32 	%f85, %f84, 0f3F4C422A;
	abs.f32 	%f86, %f85;
	mul.f32 	%f87, %f86, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f88, %f87;
	add.f32 	%f89, %f88, 0f3F800000;
	rcp.approx.ftz.f32 	%f91, %f89;
	mov.f32 	%f92, 0fC0000000;
	fma.rn.f32 	%f93, %f91, %f92, %f9;
	setp.ge.f32 	%p14, %f86, 0f41102CB4;
	selp.f32 	%f94, 0f3F800000, %f93, %p14;
	mov.b32 	%r18, %f94;
	mov.b32 	%r19, %f85;
	and.b32  	%r20, %r19, -2147483648;
	or.b32  	%r21, %r20, %r18;
	mov.b32 	%f95, %r21;
	mul.f32 	%f96, %f85, %f85;
	mov.f32 	%f97, 0fBD563CAE;
	mov.f32 	%f98, 0f3C80F082;
	fma.rn.f32 	%f99, %f98, %f96, %f97;
	mov.f32 	%f100, 0f3E085941;
	fma.rn.f32 	%f101, %f99, %f96, %f100;
	mov.f32 	%f102, 0fBEAAA9ED;
	fma.rn.f32 	%f103, %f101, %f96, %f102;
	mov.f32 	%f104, 0f00000000;
	fma.rn.f32 	%f105, %f103, %f96, %f104;
	fma.rn.f32 	%f106, %f105, %f85, %f85;
	setp.ge.f32 	%p15, %f86, 0f3F19999A;
	selp.f32 	%f107, %f95, %f106, %p15;
	cvt.f64.f32 	%fd1, %f107;
	add.f64 	%fd2, %fd1, 0d3FF0000000000000;
	cvt.f64.f32 	%fd3, %f1;
	mul.f64 	%fd4, %fd3, 0d3FE0000000000000;
	mul.f64 	%fd5, %fd4, %fd2;
	cvt.rn.f32.f64 	%f108, %fd5;
	cvta.to.global.u64 	%rd7, %rd3;
	shl.b64 	%rd8, %rd1, 2;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.f32 	[%rd9], %f108;

$L__BB0_9:
	ret;

}
	// .globl	gelu_approx_f16
.visible .entry gelu_approx_f16(
	.param .u64 gelu_approx_f16_param_0,
	.param .u64 gelu_approx_f16_param_1,
	.param .u32 gelu_approx_f16_param_2
)
{
	.reg .pred 	%p<16>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<111>;
	.reg .b32 	%r<22>;
	.reg .f64 	%fd<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd2, [gelu_approx_f16_param_0];
	ld.param.u64 	%rd3, [gelu_approx_f16_param_1];
	ld.param.u32 	%r2, [gelu_approx_f16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB1_9;

	cvta.to.global.u64 	%rd4, %rd2;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd5, %r1, 2;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u16 	%rs1, [%rd6];
	// begin inline asm
	{  cvt.f32.f16 %f9, %rs1;}

	// end inline asm
	mov.f32 	%f11, 0f3FC00000;
	cvt.rzi.f32.f32 	%f12, %f11;
	add.f32 	%f13, %f12, %f12;
	mov.f32 	%f14, 0f40400000;
	sub.f32 	%f15, %f14, %f13;
	abs.f32 	%f2, %f15;
	abs.f32 	%f3, %f9;
	setp.lt.f32 	%p2, %f3, 0f00800000;
	mul.f32 	%f16, %f3, 0f4B800000;
	selp.f32 	%f17, %f16, %f3, %p2;
	selp.f32 	%f18, 0fC1C00000, 0f00000000, %p2;
	mov.b32 	%r6, %f17;
	add.s32 	%r7, %r6, -1060439283;
	and.b32  	%r8, %r7, -8388608;
	sub.s32 	%r9, %r6, %r8;
	mov.b32 	%f19, %r9;
	cvt.rn.f32.s32 	%f20, %r8;
	mov.f32 	%f21, 0f34000000;
	fma.rn.f32 	%f22, %f20, %f21, %f18;
	add.f32 	%f23, %f19, 0fBF800000;
	add.f32 	%f24, %f19, 0f3F800000;
	mov.f32 	%f10, 0f3F800000;
	rcp.approx.ftz.f32 	%f25, %f24;
	add.f32 	%f26, %f23, %f23;
	mul.f32 	%f27, %f26, %f25;
	mul.f32 	%f28, %f27, %f27;
	sub.f32 	%f29, %f23, %f27;
	add.f32 	%f30, %f29, %f29;
	neg.f32 	%f31, %f27;
	fma.rn.f32 	%f32, %f31, %f23, %f30;
	mul.rn.f32 	%f33, %f25, %f32;
	mov.f32 	%f34, 0f3B52E7DB;
	mov.f32 	%f35, 0f3A2C32E4;
	fma.rn.f32 	%f36, %f35, %f28, %f34;
	mov.f32 	%f37, 0f3C93BB73;
	fma.rn.f32 	%f38, %f36, %f28, %f37;
	mov.f32 	%f39, 0f3DF6384F;
	fma.rn.f32 	%f40, %f38, %f28, %f39;
	mul.rn.f32 	%f41, %f40, %f28;
	mov.f32 	%f42, 0f3FB8AA3B;
	fma.rn.f32 	%f43, %f27, %f42, %f22;
	sub.f32 	%f44, %f22, %f43;
	fma.rn.f32 	%f45, %f27, %f42, %f44;
	fma.rn.f32 	%f46, %f33, %f42, %f45;
	mov.f32 	%f47, 0f32A55E34;
	fma.rn.f32 	%f48, %f27, %f47, %f46;
	mul.f32 	%f49, %f41, 0f40400000;
	fma.rn.f32 	%f50, %f49, %f33, %f48;
	fma.rn.f32 	%f51, %f41, %f27, %f50;
	add.rn.f32 	%f52, %f43, %f51;
	neg.f32 	%f53, %f43;
	add.rn.f32 	%f54, %f52, %f53;
	neg.f32 	%f55, %f54;
	add.rn.f32 	%f56, %f51, %f55;
	mul.rn.f32 	%f57, %f52, %f14;
	neg.f32 	%f58, %f57;
	fma.rn.f32 	%f59, %f52, %f14, %f58;
	fma.rn.f32 	%f60, %f56, %f14, %f59;
	cvt.rni.f32.f32 	%f61, %f57;
	sub.f32 	%f62, %f57, %f61;
	add.f32 	%f63, %f60, %f62;
	mov.f32 	%f64, 0f3AAF85ED;
	mov.f32 	%f65, 0f391FCB8E;
	fma.rn.f32 	%f66, %f65, %f63, %f64;
	mov.f32 	%f67, 0f3C1D9856;
	fma.rn.f32 	%f68, %f66, %f63, %f67;
	mov.f32 	%f69, 0f3D6357BB;
	fma.rn.f32 	%f70, %f68, %f63, %f69;
	mov.f32 	%f71, 0f3E75FDEC;
	fma.rn.f32 	%f72, %f70, %f63, %f71;
	mov.f32 	%f73, 0f3F317218;
	fma.rn.f32 	%f74, %f72, %f63, %f73;
	fma.rn.f32 	%f75, %f74, %f63, %f10;
	cvt.rzi.s32.f32 	%r10, %f61;
	setp.gt.f32 	%p3, %f61, 0f00000000;
	selp.b32 	%r11, 0, -2097152000, %p3;
	add.s32 	%r12, %r11, 2130706432;
	mov.b32 	%f76, %r12;
	mul.f32 	%f77, %f75, %f76;
	shl.b32 	%r13, %r10, 23;
	sub.s32 	%r14, %r13, %r11;
	mov.b32 	%f78, %r14;
	mul.f32 	%f79, %f77, %f78;
	abs.f32 	%f80, %f57;
	setp.gt.f32 	%p4, %f80, 0f43180000;
	setp.lt.f32 	%p5, %f57, 0f00000000;
	selp.f32 	%f81, 0f00000000, 0f7F800000, %p5;
	selp.f32 	%f4, %f81, %f79, %p4;
	setp.eq.f32 	%p6, %f9, 0f3F800000;
	mov.f32 	%f110, %f10;
	@%p6 bra 	$L__BB1_8;

	setp.gtu.f32 	%p7, %f3, 0f7F800000;
	@%p7 bra 	$L__BB1_7;
	bra.uni 	$L__BB1_3;

$L__BB1_7:
	mov.f32 	%f84, 0f40400000;
	add.rn.f32 	%f110, %f9, %f84;
	bra.uni 	$L__BB1_8;

$L__BB1_3:
	setp.eq.f32 	%p8, %f9, 0f00000000;
	setp.eq.f32 	%p9, %f3, 0f7F800000;
	or.pred  	%p10, %p8, %p9;
	@%p10 bra 	$L__BB1_6;
	bra.uni 	$L__BB1_4;

$L__BB1_6:
	setp.eq.f32 	%p13, %f2, 0f3F800000;
	add.f32 	%f83, %f9, %f9;
	mov.b32 	%r15, %f83;
	and.b32  	%r16, %r15, 2147483647;
	selp.b32 	%r17, %r15, %r16, %p13;
	mov.b32 	%f110, %r17;
	bra.uni 	$L__BB1_8;

$L__BB1_4:
	setp.geu.f32 	%p11, %f9, 0f00000000;
	mov.f32 	%f110, %f4;
	@%p11 bra 	$L__BB1_8;

	setp.eq.f32 	%p12, %f2, 0f3F800000;
	neg.f32 	%f82, %f4;
	selp.f32 	%f110, %f82, %f4, %p12;

$L__BB1_8:
	fma.rn.f32 	%f86, %f110, 0f3D372713, %f9;
	mul.f32 	%f87, %f86, 0f3F4C422A;
	abs.f32 	%f88, %f87;
	mul.f32 	%f89, %f88, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f90, %f89;
	add.f32 	%f91, %f90, 0f3F800000;
	rcp.approx.ftz.f32 	%f93, %f91;
	mov.f32 	%f94, 0fC0000000;
	fma.rn.f32 	%f95, %f93, %f94, %f10;
	setp.ge.f32 	%p14, %f88, 0f41102CB4;
	selp.f32 	%f96, 0f3F800000, %f95, %p14;
	mov.b32 	%r18, %f96;
	mov.b32 	%r19, %f87;
	and.b32  	%r20, %r19, -2147483648;
	or.b32  	%r21, %r20, %r18;
	mov.b32 	%f97, %r21;
	mul.f32 	%f98, %f87, %f87;
	mov.f32 	%f99, 0fBD563CAE;
	mov.f32 	%f100, 0f3C80F082;
	fma.rn.f32 	%f101, %f100, %f98, %f99;
	mov.f32 	%f102, 0f3E085941;
	fma.rn.f32 	%f103, %f101, %f98, %f102;
	mov.f32 	%f104, 0fBEAAA9ED;
	fma.rn.f32 	%f105, %f103, %f98, %f104;
	mov.f32 	%f106, 0f00000000;
	fma.rn.f32 	%f107, %f105, %f98, %f106;
	fma.rn.f32 	%f108, %f107, %f87, %f87;
	setp.ge.f32 	%p15, %f88, 0f3F19999A;
	selp.f32 	%f109, %f97, %f108, %p15;
	cvt.f64.f32 	%fd1, %f109;
	add.f64 	%fd2, %fd1, 0d3FF0000000000000;
	cvt.f64.f32 	%fd3, %f9;
	mul.f64 	%fd4, %fd3, 0d3FE0000000000000;
	mul.f64 	%fd5, %fd4, %fd2;
	cvt.rn.f32.f64 	%f85, %fd5;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs2, %f85;}

	// end inline asm
	cvta.to.global.u64 	%rd7, %rd3;
	shl.b64 	%rd8, %rd1, 1;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u16 	[%rd9], %rs2;

$L__BB1_9:
	ret;

}
	// .globl	gelu_approx_fast_f32
.visible .entry gelu_approx_fast_f32(
	.param .u64 gelu_approx_fast_f32_param_0,
	.param .u64 gelu_approx_fast_f32_param_1,
	.param .u32 gelu_approx_fast_f32_param_2
)
{
	.reg .pred 	%p<16>;
	.reg .f32 	%f<109>;
	.reg .b32 	%r<22>;
	.reg .f64 	%fd<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd2, [gelu_approx_fast_f32_param_0];
	ld.param.u64 	%rd3, [gelu_approx_fast_f32_param_1];
	ld.param.u32 	%r2, [gelu_approx_fast_f32_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB2_9;

	cvta.to.global.u64 	%rd4, %rd2;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	mov.f32 	%f9, 0f3F800000;
	cvt.rzi.f32.f32 	%f10, %f9;
	add.f32 	%f11, %f10, %f10;
	mov.f32 	%f12, 0f40000000;
	sub.f32 	%f13, %f12, %f11;
	abs.f32 	%f2, %f13;
	abs.f32 	%f3, %f1;
	setp.lt.f32 	%p2, %f3, 0f00800000;
	mul.f32 	%f14, %f3, 0f4B800000;
	selp.f32 	%f15, %f14, %f3, %p2;
	selp.f32 	%f16, 0fC1C00000, 0f00000000, %p2;
	mov.b32 	%r6, %f15;
	add.s32 	%r7, %r6, -1060439283;
	and.b32  	%r8, %r7, -8388608;
	sub.s32 	%r9, %r6, %r8;
	mov.b32 	%f17, %r9;
	cvt.rn.f32.s32 	%f18, %r8;
	mov.f32 	%f19, 0f34000000;
	fma.rn.f32 	%f20, %f18, %f19, %f16;
	add.f32 	%f21, %f17, 0fBF800000;
	add.f32 	%f22, %f17, 0f3F800000;
	rcp.approx.ftz.f32 	%f23, %f22;
	add.f32 	%f24, %f21, %f21;
	mul.f32 	%f25, %f24, %f23;
	mul.f32 	%f26, %f25, %f25;
	sub.f32 	%f27, %f21, %f25;
	add.f32 	%f28, %f27, %f27;
	neg.f32 	%f29, %f25;
	fma.rn.f32 	%f30, %f29, %f21, %f28;
	mul.rn.f32 	%f31, %f23, %f30;
	mov.f32 	%f32, 0f3B52E7DB;
	mov.f32 	%f33, 0f3A2C32E4;
	fma.rn.f32 	%f34, %f33, %f26, %f32;
	mov.f32 	%f35, 0f3C93BB73;
	fma.rn.f32 	%f36, %f34, %f26, %f35;
	mov.f32 	%f37, 0f3DF6384F;
	fma.rn.f32 	%f38, %f36, %f26, %f37;
	mul.rn.f32 	%f39, %f38, %f26;
	mov.f32 	%f40, 0f3FB8AA3B;
	fma.rn.f32 	%f41, %f25, %f40, %f20;
	sub.f32 	%f42, %f20, %f41;
	fma.rn.f32 	%f43, %f25, %f40, %f42;
	fma.rn.f32 	%f44, %f31, %f40, %f43;
	mov.f32 	%f45, 0f32A55E34;
	fma.rn.f32 	%f46, %f25, %f45, %f44;
	mul.f32 	%f47, %f39, 0f40400000;
	fma.rn.f32 	%f48, %f47, %f31, %f46;
	fma.rn.f32 	%f49, %f39, %f25, %f48;
	add.rn.f32 	%f50, %f41, %f49;
	neg.f32 	%f51, %f41;
	add.rn.f32 	%f52, %f50, %f51;
	neg.f32 	%f53, %f52;
	add.rn.f32 	%f54, %f49, %f53;
	mul.rn.f32 	%f55, %f50, %f12;
	neg.f32 	%f56, %f55;
	fma.rn.f32 	%f57, %f50, %f12, %f56;
	fma.rn.f32 	%f58, %f54, %f12, %f57;
	cvt.rni.f32.f32 	%f59, %f55;
	sub.f32 	%f60, %f55, %f59;
	add.f32 	%f61, %f58, %f60;
	mov.f32 	%f62, 0f3AAF85ED;
	mov.f32 	%f63, 0f391FCB8E;
	fma.rn.f32 	%f64, %f63, %f61, %f62;
	mov.f32 	%f65, 0f3C1D9856;
	fma.rn.f32 	%f66, %f64, %f61, %f65;
	mov.f32 	%f67, 0f3D6357BB;
	fma.rn.f32 	%f68, %f66, %f61, %f67;
	mov.f32 	%f69, 0f3E75FDEC;
	fma.rn.f32 	%f70, %f68, %f61, %f69;
	mov.f32 	%f71, 0f3F317218;
	fma.rn.f32 	%f72, %f70, %f61, %f71;
	fma.rn.f32 	%f73, %f72, %f61, %f9;
	cvt.rzi.s32.f32 	%r10, %f59;
	setp.gt.f32 	%p3, %f59, 0f00000000;
	selp.b32 	%r11, 0, -2097152000, %p3;
	add.s32 	%r12, %r11, 2130706432;
	mov.b32 	%f74, %r12;
	mul.f32 	%f75, %f73, %f74;
	shl.b32 	%r13, %r10, 23;
	sub.s32 	%r14, %r13, %r11;
	mov.b32 	%f76, %r14;
	mul.f32 	%f77, %f75, %f76;
	abs.f32 	%f78, %f55;
	setp.gt.f32 	%p4, %f78, 0f43180000;
	setp.lt.f32 	%p5, %f55, 0f00000000;
	selp.f32 	%f79, 0f00000000, 0f7F800000, %p5;
	selp.f32 	%f4, %f79, %f77, %p4;
	setp.eq.f32 	%p6, %f1, 0f3F800000;
	mov.f32 	%f108, %f9;
	@%p6 bra 	$L__BB2_8;

	setp.gtu.f32 	%p7, %f3, 0f7F800000;
	@%p7 bra 	$L__BB2_7;
	bra.uni 	$L__BB2_3;

$L__BB2_7:
	mov.f32 	%f82, 0f40000000;
	add.rn.f32 	%f108, %f1, %f82;
	bra.uni 	$L__BB2_8;

$L__BB2_3:
	setp.eq.f32 	%p8, %f1, 0f00000000;
	setp.eq.f32 	%p9, %f3, 0f7F800000;
	or.pred  	%p10, %p8, %p9;
	@%p10 bra 	$L__BB2_6;
	bra.uni 	$L__BB2_4;

$L__BB2_6:
	setp.eq.f32 	%p13, %f2, 0f3F800000;
	add.f32 	%f81, %f1, %f1;
	mov.b32 	%r15, %f81;
	and.b32  	%r16, %r15, 2147483647;
	selp.b32 	%r17, %r15, %r16, %p13;
	mov.b32 	%f108, %r17;
	bra.uni 	$L__BB2_8;

$L__BB2_4:
	setp.geu.f32 	%p11, %f1, 0f00000000;
	mov.f32 	%f108, %f4;
	@%p11 bra 	$L__BB2_8;

	setp.eq.f32 	%p12, %f2, 0f3F800000;
	neg.f32 	%f80, %f4;
	selp.f32 	%f108, %f80, %f4, %p12;

$L__BB2_8:
	fma.rn.f32 	%f83, %f108, 0f3D372713, %f1;
	mul.f32 	%f84, %f83, 0f3F4C422A;
	abs.f32 	%f85, %f84;
	mul.f32 	%f86, %f85, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f87, %f86;
	add.f32 	%f88, %f87, 0f3F800000;
	rcp.approx.ftz.f32 	%f90, %f88;
	mov.f32 	%f91, 0fC0000000;
	fma.rn.f32 	%f92, %f90, %f91, %f9;
	setp.ge.f32 	%p14, %f85, 0f41102CB4;
	selp.f32 	%f93, 0f3F800000, %f92, %p14;
	mov.b32 	%r18, %f93;
	mov.b32 	%r19, %f84;
	and.b32  	%r20, %r19, -2147483648;
	or.b32  	%r21, %r20, %r18;
	mov.b32 	%f94, %r21;
	mul.f32 	%f95, %f84, %f84;
	mov.f32 	%f96, 0fBD563CAE;
	mov.f32 	%f97, 0f3C80F082;
	fma.rn.f32 	%f98, %f97, %f95, %f96;
	mov.f32 	%f99, 0f3E085941;
	fma.rn.f32 	%f100, %f98, %f95, %f99;
	mov.f32 	%f101, 0fBEAAA9ED;
	fma.rn.f32 	%f102, %f100, %f95, %f101;
	mov.f32 	%f103, 0f00000000;
	fma.rn.f32 	%f104, %f102, %f95, %f103;
	fma.rn.f32 	%f105, %f104, %f84, %f84;
	setp.ge.f32 	%p15, %f85, 0f3F19999A;
	selp.f32 	%f106, %f94, %f105, %p15;
	cvt.f64.f32 	%fd1, %f106;
	add.f64 	%fd2, %fd1, 0d3FF0000000000000;
	cvt.f64.f32 	%fd3, %f1;
	mul.f64 	%fd4, %fd3, 0d3FE0000000000000;
	mul.f64 	%fd5, %fd4, %fd2;
	cvt.rn.f32.f64 	%f107, %fd5;
	cvta.to.global.u64 	%rd7, %rd3;
	shl.b64 	%rd8, %rd1, 2;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.f32 	[%rd9], %f107;

$L__BB2_9:
	ret;

}
	// .globl	gelu_approx_fast_f16
.visible .entry gelu_approx_fast_f16(
	.param .u64 gelu_approx_fast_f16_param_0,
	.param .u64 gelu_approx_fast_f16_param_1,
	.param .u32 gelu_approx_fast_f16_param_2
)
{
	.reg .pred 	%p<16>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<110>;
	.reg .b32 	%r<22>;
	.reg .f64 	%fd<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd2, [gelu_approx_fast_f16_param_0];
	ld.param.u64 	%rd3, [gelu_approx_fast_f16_param_1];
	ld.param.u32 	%r2, [gelu_approx_fast_f16_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB3_9;

	cvta.to.global.u64 	%rd4, %rd2;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd5, %r1, 2;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u16 	%rs1, [%rd6];
	// begin inline asm
	{  cvt.f32.f16 %f9, %rs1;}

	// end inline asm
	mov.f32 	%f10, 0f3F800000;
	cvt.rzi.f32.f32 	%f11, %f10;
	add.f32 	%f12, %f11, %f11;
	mov.f32 	%f13, 0f40000000;
	sub.f32 	%f14, %f13, %f12;
	abs.f32 	%f2, %f14;
	abs.f32 	%f3, %f9;
	setp.lt.f32 	%p2, %f3, 0f00800000;
	mul.f32 	%f15, %f3, 0f4B800000;
	selp.f32 	%f16, %f15, %f3, %p2;
	selp.f32 	%f17, 0fC1C00000, 0f00000000, %p2;
	mov.b32 	%r6, %f16;
	add.s32 	%r7, %r6, -1060439283;
	and.b32  	%r8, %r7, -8388608;
	sub.s32 	%r9, %r6, %r8;
	mov.b32 	%f18, %r9;
	cvt.rn.f32.s32 	%f19, %r8;
	mov.f32 	%f20, 0f34000000;
	fma.rn.f32 	%f21, %f19, %f20, %f17;
	add.f32 	%f22, %f18, 0fBF800000;
	add.f32 	%f23, %f18, 0f3F800000;
	rcp.approx.ftz.f32 	%f24, %f23;
	add.f32 	%f25, %f22, %f22;
	mul.f32 	%f26, %f25, %f24;
	mul.f32 	%f27, %f26, %f26;
	sub.f32 	%f28, %f22, %f26;
	add.f32 	%f29, %f28, %f28;
	neg.f32 	%f30, %f26;
	fma.rn.f32 	%f31, %f30, %f22, %f29;
	mul.rn.f32 	%f32, %f24, %f31;
	mov.f32 	%f33, 0f3B52E7DB;
	mov.f32 	%f34, 0f3A2C32E4;
	fma.rn.f32 	%f35, %f34, %f27, %f33;
	mov.f32 	%f36, 0f3C93BB73;
	fma.rn.f32 	%f37, %f35, %f27, %f36;
	mov.f32 	%f38, 0f3DF6384F;
	fma.rn.f32 	%f39, %f37, %f27, %f38;
	mul.rn.f32 	%f40, %f39, %f27;
	mov.f32 	%f41, 0f3FB8AA3B;
	fma.rn.f32 	%f42, %f26, %f41, %f21;
	sub.f32 	%f43, %f21, %f42;
	fma.rn.f32 	%f44, %f26, %f41, %f43;
	fma.rn.f32 	%f45, %f32, %f41, %f44;
	mov.f32 	%f46, 0f32A55E34;
	fma.rn.f32 	%f47, %f26, %f46, %f45;
	mul.f32 	%f48, %f40, 0f40400000;
	fma.rn.f32 	%f49, %f48, %f32, %f47;
	fma.rn.f32 	%f50, %f40, %f26, %f49;
	add.rn.f32 	%f51, %f42, %f50;
	neg.f32 	%f52, %f42;
	add.rn.f32 	%f53, %f51, %f52;
	neg.f32 	%f54, %f53;
	add.rn.f32 	%f55, %f50, %f54;
	mul.rn.f32 	%f56, %f51, %f13;
	neg.f32 	%f57, %f56;
	fma.rn.f32 	%f58, %f51, %f13, %f57;
	fma.rn.f32 	%f59, %f55, %f13, %f58;
	cvt.rni.f32.f32 	%f60, %f56;
	sub.f32 	%f61, %f56, %f60;
	add.f32 	%f62, %f59, %f61;
	mov.f32 	%f63, 0f3AAF85ED;
	mov.f32 	%f64, 0f391FCB8E;
	fma.rn.f32 	%f65, %f64, %f62, %f63;
	mov.f32 	%f66, 0f3C1D9856;
	fma.rn.f32 	%f67, %f65, %f62, %f66;
	mov.f32 	%f68, 0f3D6357BB;
	fma.rn.f32 	%f69, %f67, %f62, %f68;
	mov.f32 	%f70, 0f3E75FDEC;
	fma.rn.f32 	%f71, %f69, %f62, %f70;
	mov.f32 	%f72, 0f3F317218;
	fma.rn.f32 	%f73, %f71, %f62, %f72;
	fma.rn.f32 	%f74, %f73, %f62, %f10;
	cvt.rzi.s32.f32 	%r10, %f60;
	setp.gt.f32 	%p3, %f60, 0f00000000;
	selp.b32 	%r11, 0, -2097152000, %p3;
	add.s32 	%r12, %r11, 2130706432;
	mov.b32 	%f75, %r12;
	mul.f32 	%f76, %f74, %f75;
	shl.b32 	%r13, %r10, 23;
	sub.s32 	%r14, %r13, %r11;
	mov.b32 	%f77, %r14;
	mul.f32 	%f78, %f76, %f77;
	abs.f32 	%f79, %f56;
	setp.gt.f32 	%p4, %f79, 0f43180000;
	setp.lt.f32 	%p5, %f56, 0f00000000;
	selp.f32 	%f80, 0f00000000, 0f7F800000, %p5;
	selp.f32 	%f4, %f80, %f78, %p4;
	setp.eq.f32 	%p6, %f9, 0f3F800000;
	mov.f32 	%f109, %f10;
	@%p6 bra 	$L__BB3_8;

	setp.gtu.f32 	%p7, %f3, 0f7F800000;
	@%p7 bra 	$L__BB3_7;
	bra.uni 	$L__BB3_3;

$L__BB3_7:
	mov.f32 	%f83, 0f40000000;
	add.rn.f32 	%f109, %f9, %f83;
	bra.uni 	$L__BB3_8;

$L__BB3_3:
	setp.eq.f32 	%p8, %f9, 0f00000000;
	setp.eq.f32 	%p9, %f3, 0f7F800000;
	or.pred  	%p10, %p8, %p9;
	@%p10 bra 	$L__BB3_6;
	bra.uni 	$L__BB3_4;

$L__BB3_6:
	setp.eq.f32 	%p13, %f2, 0f3F800000;
	add.f32 	%f82, %f9, %f9;
	mov.b32 	%r15, %f82;
	and.b32  	%r16, %r15, 2147483647;
	selp.b32 	%r17, %r15, %r16, %p13;
	mov.b32 	%f109, %r17;
	bra.uni 	$L__BB3_8;

$L__BB3_4:
	setp.geu.f32 	%p11, %f9, 0f00000000;
	mov.f32 	%f109, %f4;
	@%p11 bra 	$L__BB3_8;

	setp.eq.f32 	%p12, %f2, 0f3F800000;
	neg.f32 	%f81, %f4;
	selp.f32 	%f109, %f81, %f4, %p12;

$L__BB3_8:
	fma.rn.f32 	%f85, %f109, 0f3D372713, %f9;
	mul.f32 	%f86, %f85, 0f3F4C422A;
	abs.f32 	%f87, %f86;
	mul.f32 	%f88, %f87, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f89, %f88;
	add.f32 	%f90, %f89, 0f3F800000;
	rcp.approx.ftz.f32 	%f92, %f90;
	mov.f32 	%f93, 0fC0000000;
	fma.rn.f32 	%f94, %f92, %f93, %f10;
	setp.ge.f32 	%p14, %f87, 0f41102CB4;
	selp.f32 	%f95, 0f3F800000, %f94, %p14;
	mov.b32 	%r18, %f95;
	mov.b32 	%r19, %f86;
	and.b32  	%r20, %r19, -2147483648;
	or.b32  	%r21, %r20, %r18;
	mov.b32 	%f96, %r21;
	mul.f32 	%f97, %f86, %f86;
	mov.f32 	%f98, 0fBD563CAE;
	mov.f32 	%f99, 0f3C80F082;
	fma.rn.f32 	%f100, %f99, %f97, %f98;
	mov.f32 	%f101, 0f3E085941;
	fma.rn.f32 	%f102, %f100, %f97, %f101;
	mov.f32 	%f103, 0fBEAAA9ED;
	fma.rn.f32 	%f104, %f102, %f97, %f103;
	mov.f32 	%f105, 0f00000000;
	fma.rn.f32 	%f106, %f104, %f97, %f105;
	fma.rn.f32 	%f107, %f106, %f86, %f86;
	setp.ge.f32 	%p15, %f87, 0f3F19999A;
	selp.f32 	%f108, %f96, %f107, %p15;
	cvt.f64.f32 	%fd1, %f108;
	add.f64 	%fd2, %fd1, 0d3FF0000000000000;
	cvt.f64.f32 	%fd3, %f9;
	mul.f64 	%fd4, %fd3, 0d3FE0000000000000;
	mul.f64 	%fd5, %fd4, %fd2;
	cvt.rn.f32.f64 	%f84, %fd5;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs2, %f84;}

	// end inline asm
	cvta.to.global.u64 	%rd7, %rd3;
	shl.b64 	%rd8, %rd1, 1;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u16 	[%rd9], %rs2;

$L__BB3_9:
	ret;

}
	// .globl	apply_rope_nd2_f32
.visible .entry apply_rope_nd2_f32(
	.param .u64 apply_rope_nd2_f32_param_0,
	.param .u64 apply_rope_nd2_f32_param_1,
	.param .u64 apply_rope_nd2_f32_param_2,
	.param .u64 apply_rope_nd2_f32_param_3,
	.param .u32 apply_rope_nd2_f32_param_4,
	.param .u32 apply_rope_nd2_f32_param_5,
	.param .u32 apply_rope_nd2_f32_param_6,
	.param .u32 apply_rope_nd2_f32_param_7,
	.param .u32 apply_rope_nd2_f32_param_8,
	.param .u32 apply_rope_nd2_f32_param_9,
	.param .u32 apply_rope_nd2_f32_param_10,
	.param .u32 apply_rope_nd2_f32_param_11
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<14>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<23>;


	ld.param.u64 	%rd1, [apply_rope_nd2_f32_param_0];
	ld.param.u64 	%rd2, [apply_rope_nd2_f32_param_1];
	ld.param.u64 	%rd3, [apply_rope_nd2_f32_param_2];
	ld.param.u64 	%rd4, [apply_rope_nd2_f32_param_3];
	ld.param.u32 	%r10, [apply_rope_nd2_f32_param_4];
	ld.param.u32 	%r4, [apply_rope_nd2_f32_param_6];
	ld.param.u32 	%r5, [apply_rope_nd2_f32_param_7];
	ld.param.u32 	%r6, [apply_rope_nd2_f32_param_8];
	ld.param.u32 	%r7, [apply_rope_nd2_f32_param_9];
	ld.param.u32 	%r8, [apply_rope_nd2_f32_param_10];
	ld.param.u32 	%r9, [apply_rope_nd2_f32_param_11];
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r12, %r11, %r13;
	mov.u32 	%r14, %ntid.y;
	mov.u32 	%r15, %ctaid.y;
	mov.u32 	%r16, %tid.y;
	mad.lo.s32 	%r2, %r15, %r14, %r16;
	ld.param.u32 	%r17, [apply_rope_nd2_f32_param_5];
	shr.u32 	%r18, %r17, 31;
	add.s32 	%r19, %r17, %r18;
	shr.s32 	%r3, %r19, 1;
	setp.ge.s32 	%p1, %r1, %r3;
	setp.ge.s32 	%p2, %r2, %r10;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB4_2;

	cvta.to.global.u64 	%rd5, %rd4;
	cvta.to.global.u64 	%rd6, %rd3;
	cvta.to.global.u64 	%rd7, %rd2;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s32 	%r20, %r3, %r1;
	mul.lo.s32 	%r21, %r2, %r4;
	mad.lo.s32 	%r22, %r1, %r5, %r21;
	mad.lo.s32 	%r23, %r20, %r5, %r21;
	mul.lo.s32 	%r24, %r2, %r8;
	mad.lo.s32 	%r25, %r1, %r9, %r24;
	mad.lo.s32 	%r26, %r20, %r9, %r24;
	mul.lo.s32 	%r27, %r2, %r6;
	mad.lo.s32 	%r28, %r1, %r7, %r27;
	mad.lo.s32 	%r29, %r20, %r7, %r27;
	mul.wide.s32 	%rd9, %r22, 4;
	add.s64 	%rd10, %rd8, %rd9;
	mul.wide.s32 	%rd11, %r28, 4;
	add.s64 	%rd12, %rd7, %rd11;
	ld.global.f32 	%f1, [%rd12];
	ld.global.f32 	%f2, [%rd10];
	mul.f32 	%f3, %f2, %f1;
	mul.wide.s32 	%rd13, %r23, 4;
	add.s64 	%rd14, %rd8, %rd13;
	add.s64 	%rd15, %rd6, %rd11;
	ld.global.f32 	%f4, [%rd15];
	ld.global.f32 	%f5, [%rd14];
	mul.f32 	%f6, %f5, %f4;
	sub.f32 	%f7, %f3, %f6;
	mul.wide.s32 	%rd16, %r25, 4;
	add.s64 	%rd17, %rd5, %rd16;
	st.global.f32 	[%rd17], %f7;
	mul.wide.s32 	%rd18, %r29, 4;
	add.s64 	%rd19, %rd7, %rd18;
	ld.global.f32 	%f8, [%rd19];
	ld.global.f32 	%f9, [%rd14];
	add.s64 	%rd20, %rd6, %rd18;
	ld.global.f32 	%f10, [%rd20];
	ld.global.f32 	%f11, [%rd10];
	mul.f32 	%f12, %f11, %f10;
	fma.rn.f32 	%f13, %f9, %f8, %f12;
	mul.wide.s32 	%rd21, %r26, 4;
	add.s64 	%rd22, %rd5, %rd21;
	st.global.f32 	[%rd22], %f13;

$L__BB4_2:
	ret;

}
	// .globl	apply_rope_nd3_f32
.visible .entry apply_rope_nd3_f32(
	.param .u64 apply_rope_nd3_f32_param_0,
	.param .u64 apply_rope_nd3_f32_param_1,
	.param .u64 apply_rope_nd3_f32_param_2,
	.param .u64 apply_rope_nd3_f32_param_3,
	.param .u32 apply_rope_nd3_f32_param_4,
	.param .u32 apply_rope_nd3_f32_param_5,
	.param .u32 apply_rope_nd3_f32_param_6,
	.param .u32 apply_rope_nd3_f32_param_7,
	.param .u32 apply_rope_nd3_f32_param_8,
	.param .u32 apply_rope_nd3_f32_param_9,
	.param .u32 apply_rope_nd3_f32_param_10,
	.param .u32 apply_rope_nd3_f32_param_11,
	.param .u32 apply_rope_nd3_f32_param_12,
	.param .u32 apply_rope_nd3_f32_param_13,
	.param .u32 apply_rope_nd3_f32_param_14,
	.param .u32 apply_rope_nd3_f32_param_15
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<14>;
	.reg .b32 	%r<41>;
	.reg .b64 	%rd<23>;


	ld.param.u64 	%rd1, [apply_rope_nd3_f32_param_0];
	ld.param.u64 	%rd2, [apply_rope_nd3_f32_param_1];
	ld.param.u64 	%rd3, [apply_rope_nd3_f32_param_2];
	ld.param.u64 	%rd4, [apply_rope_nd3_f32_param_3];
	ld.param.u32 	%r14, [apply_rope_nd3_f32_param_4];
	ld.param.u32 	%r15, [apply_rope_nd3_f32_param_5];
	ld.param.u32 	%r5, [apply_rope_nd3_f32_param_7];
	ld.param.u32 	%r6, [apply_rope_nd3_f32_param_8];
	ld.param.u32 	%r7, [apply_rope_nd3_f32_param_9];
	ld.param.u32 	%r8, [apply_rope_nd3_f32_param_10];
	ld.param.u32 	%r9, [apply_rope_nd3_f32_param_11];
	ld.param.u32 	%r10, [apply_rope_nd3_f32_param_12];
	ld.param.u32 	%r11, [apply_rope_nd3_f32_param_13];
	ld.param.u32 	%r12, [apply_rope_nd3_f32_param_14];
	ld.param.u32 	%r13, [apply_rope_nd3_f32_param_15];
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r17, %r16, %r18;
	mov.u32 	%r19, %ntid.y;
	mov.u32 	%r20, %ctaid.y;
	mov.u32 	%r21, %tid.y;
	mad.lo.s32 	%r2, %r20, %r19, %r21;
	mov.u32 	%r22, %ntid.z;
	mov.u32 	%r23, %ctaid.z;
	mov.u32 	%r24, %tid.z;
	mad.lo.s32 	%r3, %r23, %r22, %r24;
	ld.param.u32 	%r25, [apply_rope_nd3_f32_param_6];
	shr.u32 	%r26, %r25, 31;
	add.s32 	%r27, %r25, %r26;
	shr.s32 	%r4, %r27, 1;
	setp.ge.s32 	%p1, %r1, %r4;
	setp.ge.s32 	%p2, %r2, %r15;
	or.pred  	%p3, %p2, %p1;
	setp.ge.s32 	%p4, %r3, %r14;
	or.pred  	%p5, %p4, %p3;
	@%p5 bra 	$L__BB5_2;

	cvta.to.global.u64 	%rd5, %rd4;
	cvta.to.global.u64 	%rd6, %rd3;
	cvta.to.global.u64 	%rd7, %rd2;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s32 	%r28, %r4, %r1;
	mul.lo.s32 	%r29, %r3, %r5;
	mad.lo.s32 	%r30, %r2, %r6, %r29;
	mad.lo.s32 	%r31, %r1, %r7, %r30;
	mad.lo.s32 	%r32, %r28, %r7, %r30;
	mul.lo.s32 	%r33, %r3, %r11;
	mad.lo.s32 	%r34, %r2, %r12, %r33;
	mad.lo.s32 	%r35, %r1, %r13, %r34;
	mad.lo.s32 	%r36, %r28, %r13, %r34;
	mul.lo.s32 	%r37, %r3, %r8;
	mad.lo.s32 	%r38, %r2, %r9, %r37;
	mad.lo.s32 	%r39, %r1, %r10, %r38;
	mad.lo.s32 	%r40, %r28, %r10, %r38;
	mul.wide.s32 	%rd9, %r31, 4;
	add.s64 	%rd10, %rd8, %rd9;
	mul.wide.s32 	%rd11, %r39, 4;
	add.s64 	%rd12, %rd7, %rd11;
	ld.global.f32 	%f1, [%rd12];
	ld.global.f32 	%f2, [%rd10];
	mul.f32 	%f3, %f2, %f1;
	mul.wide.s32 	%rd13, %r32, 4;
	add.s64 	%rd14, %rd8, %rd13;
	add.s64 	%rd15, %rd6, %rd11;
	ld.global.f32 	%f4, [%rd15];
	ld.global.f32 	%f5, [%rd14];
	mul.f32 	%f6, %f5, %f4;
	sub.f32 	%f7, %f3, %f6;
	mul.wide.s32 	%rd16, %r35, 4;
	add.s64 	%rd17, %rd5, %rd16;
	st.global.f32 	[%rd17], %f7;
	mul.wide.s32 	%rd18, %r40, 4;
	add.s64 	%rd19, %rd7, %rd18;
	ld.global.f32 	%f8, [%rd19];
	ld.global.f32 	%f9, [%rd14];
	add.s64 	%rd20, %rd6, %rd18;
	ld.global.f32 	%f10, [%rd20];
	ld.global.f32 	%f11, [%rd10];
	mul.f32 	%f12, %f11, %f10;
	fma.rn.f32 	%f13, %f9, %f8, %f12;
	mul.wide.s32 	%rd21, %r36, 4;
	add.s64 	%rd22, %rd5, %rd21;
	st.global.f32 	[%rd22], %f13;

$L__BB5_2:
	ret;

}
	// .globl	apply_rope_nd4_f32
.visible .entry apply_rope_nd4_f32(
	.param .u64 apply_rope_nd4_f32_param_0,
	.param .u64 apply_rope_nd4_f32_param_1,
	.param .u64 apply_rope_nd4_f32_param_2,
	.param .u64 apply_rope_nd4_f32_param_3,
	.param .u32 apply_rope_nd4_f32_param_4,
	.param .u32 apply_rope_nd4_f32_param_5,
	.param .u32 apply_rope_nd4_f32_param_6,
	.param .u32 apply_rope_nd4_f32_param_7,
	.param .u32 apply_rope_nd4_f32_param_8,
	.param .u32 apply_rope_nd4_f32_param_9,
	.param .u32 apply_rope_nd4_f32_param_10,
	.param .u32 apply_rope_nd4_f32_param_11,
	.param .u32 apply_rope_nd4_f32_param_12,
	.param .u32 apply_rope_nd4_f32_param_13,
	.param .u32 apply_rope_nd4_f32_param_14,
	.param .u32 apply_rope_nd4_f32_param_15,
	.param .u32 apply_rope_nd4_f32_param_16,
	.param .u32 apply_rope_nd4_f32_param_17,
	.param .u32 apply_rope_nd4_f32_param_18,
	.param .u32 apply_rope_nd4_f32_param_19
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<14>;
	.reg .b32 	%r<64>;
	.reg .b64 	%rd<23>;


	ld.param.u64 	%rd1, [apply_rope_nd4_f32_param_0];
	ld.param.u64 	%rd2, [apply_rope_nd4_f32_param_1];
	ld.param.u64 	%rd3, [apply_rope_nd4_f32_param_2];
	ld.param.u64 	%rd4, [apply_rope_nd4_f32_param_3];
	ld.param.u32 	%r18, [apply_rope_nd4_f32_param_4];
	ld.param.u32 	%r5, [apply_rope_nd4_f32_param_5];
	ld.param.u32 	%r19, [apply_rope_nd4_f32_param_6];
	ld.param.u32 	%r6, [apply_rope_nd4_f32_param_8];
	ld.param.u32 	%r7, [apply_rope_nd4_f32_param_9];
	ld.param.u32 	%r8, [apply_rope_nd4_f32_param_10];
	ld.param.u32 	%r9, [apply_rope_nd4_f32_param_11];
	ld.param.u32 	%r10, [apply_rope_nd4_f32_param_12];
	ld.param.u32 	%r11, [apply_rope_nd4_f32_param_13];
	ld.param.u32 	%r12, [apply_rope_nd4_f32_param_14];
	ld.param.u32 	%r13, [apply_rope_nd4_f32_param_15];
	ld.param.u32 	%r14, [apply_rope_nd4_f32_param_16];
	ld.param.u32 	%r15, [apply_rope_nd4_f32_param_17];
	ld.param.u32 	%r16, [apply_rope_nd4_f32_param_18];
	ld.param.u32 	%r17, [apply_rope_nd4_f32_param_19];
	mov.u32 	%r20, %ntid.x;
	mov.u32 	%r21, %ctaid.x;
	mov.u32 	%r22, %tid.x;
	mad.lo.s32 	%r1, %r21, %r20, %r22;
	mov.u32 	%r23, %ntid.y;
	mov.u32 	%r24, %ctaid.y;
	mov.u32 	%r25, %tid.y;
	mad.lo.s32 	%r2, %r24, %r23, %r25;
	mov.u32 	%r26, %ntid.z;
	mov.u32 	%r27, %ctaid.z;
	mov.u32 	%r28, %tid.z;
	mad.lo.s32 	%r3, %r27, %r26, %r28;
	ld.param.u32 	%r29, [apply_rope_nd4_f32_param_7];
	shr.u32 	%r30, %r29, 31;
	add.s32 	%r31, %r29, %r30;
	shr.s32 	%r4, %r31, 1;
	setp.ge.s32 	%p1, %r1, %r4;
	setp.ge.s32 	%p2, %r2, %r19;
	or.pred  	%p3, %p2, %p1;
	mul.lo.s32 	%r32, %r5, %r18;
	setp.ge.s32 	%p4, %r3, %r32;
	or.pred  	%p5, %p4, %p3;
	@%p5 bra 	$L__BB6_2;

	cvta.to.global.u64 	%rd5, %rd4;
	cvta.to.global.u64 	%rd6, %rd3;
	cvta.to.global.u64 	%rd7, %rd2;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s32 	%r33, %r4, %r1;
	mul.lo.s32 	%r34, %r2, %r8;
	mad.lo.s32 	%r35, %r1, %r9, %r34;
	div.s32 	%r36, %r3, %r5;
	mul.lo.s32 	%r37, %r36, %r5;
	sub.s32 	%r38, %r3, %r37;
	mul.lo.s32 	%r39, %r38, %r7;
	add.s32 	%r40, %r35, %r39;
	mul.lo.s32 	%r41, %r36, %r6;
	add.s32 	%r42, %r40, %r41;
	mad.lo.s32 	%r43, %r33, %r9, %r34;
	add.s32 	%r44, %r43, %r39;
	add.s32 	%r45, %r44, %r41;
	mul.lo.s32 	%r46, %r2, %r16;
	mad.lo.s32 	%r47, %r1, %r17, %r46;
	mul.lo.s32 	%r48, %r38, %r15;
	add.s32 	%r49, %r47, %r48;
	mul.lo.s32 	%r50, %r36, %r14;
	add.s32 	%r51, %r49, %r50;
	mad.lo.s32 	%r52, %r33, %r17, %r46;
	add.s32 	%r53, %r52, %r48;
	add.s32 	%r54, %r53, %r50;
	mul.lo.s32 	%r55, %r2, %r12;
	mad.lo.s32 	%r56, %r1, %r13, %r55;
	mul.lo.s32 	%r57, %r38, %r11;
	add.s32 	%r58, %r56, %r57;
	mul.lo.s32 	%r59, %r36, %r10;
	add.s32 	%r60, %r58, %r59;
	mad.lo.s32 	%r61, %r33, %r13, %r55;
	add.s32 	%r62, %r61, %r57;
	add.s32 	%r63, %r62, %r59;
	mul.wide.s32 	%rd9, %r42, 4;
	add.s64 	%rd10, %rd8, %rd9;
	mul.wide.s32 	%rd11, %r60, 4;
	add.s64 	%rd12, %rd7, %rd11;
	ld.global.f32 	%f1, [%rd12];
	ld.global.f32 	%f2, [%rd10];
	mul.f32 	%f3, %f2, %f1;
	mul.wide.s32 	%rd13, %r45, 4;
	add.s64 	%rd14, %rd8, %rd13;
	add.s64 	%rd15, %rd6, %rd11;
	ld.global.f32 	%f4, [%rd15];
	ld.global.f32 	%f5, [%rd14];
	mul.f32 	%f6, %f5, %f4;
	sub.f32 	%f7, %f3, %f6;
	mul.wide.s32 	%rd16, %r51, 4;
	add.s64 	%rd17, %rd5, %rd16;
	st.global.f32 	[%rd17], %f7;
	mul.wide.s32 	%rd18, %r63, 4;
	add.s64 	%rd19, %rd7, %rd18;
	ld.global.f32 	%f8, [%rd19];
	ld.global.f32 	%f9, [%rd14];
	add.s64 	%rd20, %rd6, %rd18;
	ld.global.f32 	%f10, [%rd20];
	ld.global.f32 	%f11, [%rd10];
	mul.f32 	%f12, %f11, %f10;
	fma.rn.f32 	%f13, %f9, %f8, %f12;
	mul.wide.s32 	%rd21, %r54, 4;
	add.s64 	%rd22, %rd5, %rd21;
	st.global.f32 	[%rd22], %f13;

$L__BB6_2:
	ret;

}
	// .globl	apply_rope_nd2_f16
.visible .entry apply_rope_nd2_f16(
	.param .u64 apply_rope_nd2_f16_param_0,
	.param .u64 apply_rope_nd2_f16_param_1,
	.param .u64 apply_rope_nd2_f16_param_2,
	.param .u64 apply_rope_nd2_f16_param_3,
	.param .u32 apply_rope_nd2_f16_param_4,
	.param .u32 apply_rope_nd2_f16_param_5,
	.param .u32 apply_rope_nd2_f16_param_6,
	.param .u32 apply_rope_nd2_f16_param_7,
	.param .u32 apply_rope_nd2_f16_param_8,
	.param .u32 apply_rope_nd2_f16_param_9,
	.param .u32 apply_rope_nd2_f16_param_10,
	.param .u32 apply_rope_nd2_f16_param_11
)
{
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<19>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<23>;


	ld.param.u64 	%rd1, [apply_rope_nd2_f16_param_0];
	ld.param.u64 	%rd2, [apply_rope_nd2_f16_param_1];
	ld.param.u64 	%rd3, [apply_rope_nd2_f16_param_2];
	ld.param.u64 	%rd4, [apply_rope_nd2_f16_param_3];
	ld.param.u32 	%r10, [apply_rope_nd2_f16_param_4];
	ld.param.u32 	%r4, [apply_rope_nd2_f16_param_6];
	ld.param.u32 	%r5, [apply_rope_nd2_f16_param_7];
	ld.param.u32 	%r6, [apply_rope_nd2_f16_param_8];
	ld.param.u32 	%r7, [apply_rope_nd2_f16_param_9];
	ld.param.u32 	%r8, [apply_rope_nd2_f16_param_10];
	ld.param.u32 	%r9, [apply_rope_nd2_f16_param_11];
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r12, %r11, %r13;
	mov.u32 	%r14, %ntid.y;
	mov.u32 	%r15, %ctaid.y;
	mov.u32 	%r16, %tid.y;
	mad.lo.s32 	%r2, %r15, %r14, %r16;
	ld.param.u32 	%r17, [apply_rope_nd2_f16_param_5];
	shr.u32 	%r18, %r17, 31;
	add.s32 	%r19, %r17, %r18;
	shr.s32 	%r3, %r19, 1;
	setp.ge.s32 	%p1, %r1, %r3;
	setp.ge.s32 	%p2, %r2, %r10;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB7_2;

	cvta.to.global.u64 	%rd5, %rd4;
	cvta.to.global.u64 	%rd6, %rd3;
	cvta.to.global.u64 	%rd7, %rd2;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s32 	%r20, %r3, %r1;
	mul.lo.s32 	%r21, %r2, %r4;
	mad.lo.s32 	%r22, %r1, %r5, %r21;
	mad.lo.s32 	%r23, %r20, %r5, %r21;
	mul.lo.s32 	%r24, %r2, %r8;
	mad.lo.s32 	%r25, %r1, %r9, %r24;
	mad.lo.s32 	%r26, %r20, %r9, %r24;
	mul.lo.s32 	%r27, %r2, %r6;
	mad.lo.s32 	%r28, %r1, %r7, %r27;
	mad.lo.s32 	%r29, %r20, %r7, %r27;
	mul.wide.s32 	%rd9, %r22, 2;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.u16 	%rs2, [%rd10];
	mul.wide.s32 	%rd11, %r28, 2;
	add.s64 	%rd12, %rd7, %rd11;
	ld.global.u16 	%rs3, [%rd12];
	// begin inline asm
	{mul.f16 %rs1,%rs2,%rs3;
}
	// end inline asm
	mul.wide.s32 	%rd13, %r23, 2;
	add.s64 	%rd14, %rd8, %rd13;
	ld.global.u16 	%rs5, [%rd14];
	add.s64 	%rd15, %rd6, %rd11;
	ld.global.u16 	%rs6, [%rd15];
	// begin inline asm
	{mul.f16 %rs4,%rs5,%rs6;
}
	// end inline asm
	// begin inline asm
	{sub.f16 %rs7,%rs1,%rs4;
}
	// end inline asm
	mul.wide.s32 	%rd16, %r25, 2;
	add.s64 	%rd17, %rd5, %rd16;
	st.global.u16 	[%rd17], %rs7;
	ld.global.u16 	%rs11, [%rd14];
	mul.wide.s32 	%rd18, %r29, 2;
	add.s64 	%rd19, %rd7, %rd18;
	ld.global.u16 	%rs12, [%rd19];
	// begin inline asm
	{mul.f16 %rs10,%rs11,%rs12;
}
	// end inline asm
	ld.global.u16 	%rs14, [%rd10];
	add.s64 	%rd20, %rd6, %rd18;
	ld.global.u16 	%rs15, [%rd20];
	// begin inline asm
	{mul.f16 %rs13,%rs14,%rs15;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs16,%rs10,%rs13;
}
	// end inline asm
	mul.wide.s32 	%rd21, %r26, 2;
	add.s64 	%rd22, %rd5, %rd21;
	st.global.u16 	[%rd22], %rs16;

$L__BB7_2:
	ret;

}
	// .globl	apply_rope_nd3_f16
.visible .entry apply_rope_nd3_f16(
	.param .u64 apply_rope_nd3_f16_param_0,
	.param .u64 apply_rope_nd3_f16_param_1,
	.param .u64 apply_rope_nd3_f16_param_2,
	.param .u64 apply_rope_nd3_f16_param_3,
	.param .u32 apply_rope_nd3_f16_param_4,
	.param .u32 apply_rope_nd3_f16_param_5,
	.param .u32 apply_rope_nd3_f16_param_6,
	.param .u32 apply_rope_nd3_f16_param_7,
	.param .u32 apply_rope_nd3_f16_param_8,
	.param .u32 apply_rope_nd3_f16_param_9,
	.param .u32 apply_rope_nd3_f16_param_10,
	.param .u32 apply_rope_nd3_f16_param_11,
	.param .u32 apply_rope_nd3_f16_param_12,
	.param .u32 apply_rope_nd3_f16_param_13,
	.param .u32 apply_rope_nd3_f16_param_14,
	.param .u32 apply_rope_nd3_f16_param_15
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<19>;
	.reg .b32 	%r<41>;
	.reg .b64 	%rd<23>;


	ld.param.u64 	%rd1, [apply_rope_nd3_f16_param_0];
	ld.param.u64 	%rd2, [apply_rope_nd3_f16_param_1];
	ld.param.u64 	%rd3, [apply_rope_nd3_f16_param_2];
	ld.param.u64 	%rd4, [apply_rope_nd3_f16_param_3];
	ld.param.u32 	%r14, [apply_rope_nd3_f16_param_4];
	ld.param.u32 	%r15, [apply_rope_nd3_f16_param_5];
	ld.param.u32 	%r5, [apply_rope_nd3_f16_param_7];
	ld.param.u32 	%r6, [apply_rope_nd3_f16_param_8];
	ld.param.u32 	%r7, [apply_rope_nd3_f16_param_9];
	ld.param.u32 	%r8, [apply_rope_nd3_f16_param_10];
	ld.param.u32 	%r9, [apply_rope_nd3_f16_param_11];
	ld.param.u32 	%r10, [apply_rope_nd3_f16_param_12];
	ld.param.u32 	%r11, [apply_rope_nd3_f16_param_13];
	ld.param.u32 	%r12, [apply_rope_nd3_f16_param_14];
	ld.param.u32 	%r13, [apply_rope_nd3_f16_param_15];
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r17, %r16, %r18;
	mov.u32 	%r19, %ntid.y;
	mov.u32 	%r20, %ctaid.y;
	mov.u32 	%r21, %tid.y;
	mad.lo.s32 	%r2, %r20, %r19, %r21;
	mov.u32 	%r22, %ntid.z;
	mov.u32 	%r23, %ctaid.z;
	mov.u32 	%r24, %tid.z;
	mad.lo.s32 	%r3, %r23, %r22, %r24;
	ld.param.u32 	%r25, [apply_rope_nd3_f16_param_6];
	shr.u32 	%r26, %r25, 31;
	add.s32 	%r27, %r25, %r26;
	shr.s32 	%r4, %r27, 1;
	setp.ge.s32 	%p1, %r1, %r4;
	setp.ge.s32 	%p2, %r2, %r15;
	or.pred  	%p3, %p2, %p1;
	setp.ge.s32 	%p4, %r3, %r14;
	or.pred  	%p5, %p4, %p3;
	@%p5 bra 	$L__BB8_2;

	cvta.to.global.u64 	%rd5, %rd4;
	cvta.to.global.u64 	%rd6, %rd3;
	cvta.to.global.u64 	%rd7, %rd2;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s32 	%r28, %r4, %r1;
	mul.lo.s32 	%r29, %r3, %r5;
	mad.lo.s32 	%r30, %r2, %r6, %r29;
	mad.lo.s32 	%r31, %r1, %r7, %r30;
	mad.lo.s32 	%r32, %r28, %r7, %r30;
	mul.lo.s32 	%r33, %r3, %r11;
	mad.lo.s32 	%r34, %r2, %r12, %r33;
	mad.lo.s32 	%r35, %r1, %r13, %r34;
	mad.lo.s32 	%r36, %r28, %r13, %r34;
	mul.lo.s32 	%r37, %r3, %r8;
	mad.lo.s32 	%r38, %r2, %r9, %r37;
	mad.lo.s32 	%r39, %r1, %r10, %r38;
	mad.lo.s32 	%r40, %r28, %r10, %r38;
	mul.wide.s32 	%rd9, %r31, 2;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.u16 	%rs2, [%rd10];
	mul.wide.s32 	%rd11, %r39, 2;
	add.s64 	%rd12, %rd7, %rd11;
	ld.global.u16 	%rs3, [%rd12];
	// begin inline asm
	{mul.f16 %rs1,%rs2,%rs3;
}
	// end inline asm
	mul.wide.s32 	%rd13, %r32, 2;
	add.s64 	%rd14, %rd8, %rd13;
	ld.global.u16 	%rs5, [%rd14];
	add.s64 	%rd15, %rd6, %rd11;
	ld.global.u16 	%rs6, [%rd15];
	// begin inline asm
	{mul.f16 %rs4,%rs5,%rs6;
}
	// end inline asm
	// begin inline asm
	{sub.f16 %rs7,%rs1,%rs4;
}
	// end inline asm
	mul.wide.s32 	%rd16, %r35, 2;
	add.s64 	%rd17, %rd5, %rd16;
	st.global.u16 	[%rd17], %rs7;
	ld.global.u16 	%rs11, [%rd14];
	mul.wide.s32 	%rd18, %r40, 2;
	add.s64 	%rd19, %rd7, %rd18;
	ld.global.u16 	%rs12, [%rd19];
	// begin inline asm
	{mul.f16 %rs10,%rs11,%rs12;
}
	// end inline asm
	ld.global.u16 	%rs14, [%rd10];
	add.s64 	%rd20, %rd6, %rd18;
	ld.global.u16 	%rs15, [%rd20];
	// begin inline asm
	{mul.f16 %rs13,%rs14,%rs15;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs16,%rs10,%rs13;
}
	// end inline asm
	mul.wide.s32 	%rd21, %r36, 2;
	add.s64 	%rd22, %rd5, %rd21;
	st.global.u16 	[%rd22], %rs16;

$L__BB8_2:
	ret;

}
	// .globl	apply_rope_nd4_f16
.visible .entry apply_rope_nd4_f16(
	.param .u64 apply_rope_nd4_f16_param_0,
	.param .u64 apply_rope_nd4_f16_param_1,
	.param .u64 apply_rope_nd4_f16_param_2,
	.param .u64 apply_rope_nd4_f16_param_3,
	.param .u32 apply_rope_nd4_f16_param_4,
	.param .u32 apply_rope_nd4_f16_param_5,
	.param .u32 apply_rope_nd4_f16_param_6,
	.param .u32 apply_rope_nd4_f16_param_7,
	.param .u32 apply_rope_nd4_f16_param_8,
	.param .u32 apply_rope_nd4_f16_param_9,
	.param .u32 apply_rope_nd4_f16_param_10,
	.param .u32 apply_rope_nd4_f16_param_11,
	.param .u32 apply_rope_nd4_f16_param_12,
	.param .u32 apply_rope_nd4_f16_param_13,
	.param .u32 apply_rope_nd4_f16_param_14,
	.param .u32 apply_rope_nd4_f16_param_15,
	.param .u32 apply_rope_nd4_f16_param_16,
	.param .u32 apply_rope_nd4_f16_param_17,
	.param .u32 apply_rope_nd4_f16_param_18,
	.param .u32 apply_rope_nd4_f16_param_19
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<19>;
	.reg .b32 	%r<64>;
	.reg .b64 	%rd<23>;


	ld.param.u64 	%rd1, [apply_rope_nd4_f16_param_0];
	ld.param.u64 	%rd2, [apply_rope_nd4_f16_param_1];
	ld.param.u64 	%rd3, [apply_rope_nd4_f16_param_2];
	ld.param.u64 	%rd4, [apply_rope_nd4_f16_param_3];
	ld.param.u32 	%r18, [apply_rope_nd4_f16_param_4];
	ld.param.u32 	%r5, [apply_rope_nd4_f16_param_5];
	ld.param.u32 	%r19, [apply_rope_nd4_f16_param_6];
	ld.param.u32 	%r6, [apply_rope_nd4_f16_param_8];
	ld.param.u32 	%r7, [apply_rope_nd4_f16_param_9];
	ld.param.u32 	%r8, [apply_rope_nd4_f16_param_10];
	ld.param.u32 	%r9, [apply_rope_nd4_f16_param_11];
	ld.param.u32 	%r10, [apply_rope_nd4_f16_param_12];
	ld.param.u32 	%r11, [apply_rope_nd4_f16_param_13];
	ld.param.u32 	%r12, [apply_rope_nd4_f16_param_14];
	ld.param.u32 	%r13, [apply_rope_nd4_f16_param_15];
	ld.param.u32 	%r14, [apply_rope_nd4_f16_param_16];
	ld.param.u32 	%r15, [apply_rope_nd4_f16_param_17];
	ld.param.u32 	%r16, [apply_rope_nd4_f16_param_18];
	ld.param.u32 	%r17, [apply_rope_nd4_f16_param_19];
	mov.u32 	%r20, %ntid.x;
	mov.u32 	%r21, %ctaid.x;
	mov.u32 	%r22, %tid.x;
	mad.lo.s32 	%r1, %r21, %r20, %r22;
	mov.u32 	%r23, %ntid.y;
	mov.u32 	%r24, %ctaid.y;
	mov.u32 	%r25, %tid.y;
	mad.lo.s32 	%r2, %r24, %r23, %r25;
	mov.u32 	%r26, %ntid.z;
	mov.u32 	%r27, %ctaid.z;
	mov.u32 	%r28, %tid.z;
	mad.lo.s32 	%r3, %r27, %r26, %r28;
	ld.param.u32 	%r29, [apply_rope_nd4_f16_param_7];
	shr.u32 	%r30, %r29, 31;
	add.s32 	%r31, %r29, %r30;
	shr.s32 	%r4, %r31, 1;
	setp.ge.s32 	%p1, %r1, %r4;
	setp.ge.s32 	%p2, %r2, %r19;
	or.pred  	%p3, %p2, %p1;
	mul.lo.s32 	%r32, %r5, %r18;
	setp.ge.s32 	%p4, %r3, %r32;
	or.pred  	%p5, %p4, %p3;
	@%p5 bra 	$L__BB9_2;

	cvta.to.global.u64 	%rd5, %rd4;
	cvta.to.global.u64 	%rd6, %rd3;
	cvta.to.global.u64 	%rd7, %rd2;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s32 	%r33, %r4, %r1;
	mul.lo.s32 	%r34, %r2, %r8;
	mad.lo.s32 	%r35, %r1, %r9, %r34;
	div.s32 	%r36, %r3, %r5;
	mul.lo.s32 	%r37, %r36, %r5;
	sub.s32 	%r38, %r3, %r37;
	mul.lo.s32 	%r39, %r38, %r7;
	add.s32 	%r40, %r35, %r39;
	mul.lo.s32 	%r41, %r36, %r6;
	add.s32 	%r42, %r40, %r41;
	mad.lo.s32 	%r43, %r33, %r9, %r34;
	add.s32 	%r44, %r43, %r39;
	add.s32 	%r45, %r44, %r41;
	mul.lo.s32 	%r46, %r2, %r16;
	mad.lo.s32 	%r47, %r1, %r17, %r46;
	mul.lo.s32 	%r48, %r38, %r15;
	add.s32 	%r49, %r47, %r48;
	mul.lo.s32 	%r50, %r36, %r14;
	add.s32 	%r51, %r49, %r50;
	mad.lo.s32 	%r52, %r33, %r17, %r46;
	add.s32 	%r53, %r52, %r48;
	add.s32 	%r54, %r53, %r50;
	mul.lo.s32 	%r55, %r2, %r12;
	mad.lo.s32 	%r56, %r1, %r13, %r55;
	mul.lo.s32 	%r57, %r38, %r11;
	add.s32 	%r58, %r56, %r57;
	mul.lo.s32 	%r59, %r36, %r10;
	add.s32 	%r60, %r58, %r59;
	mad.lo.s32 	%r61, %r33, %r13, %r55;
	add.s32 	%r62, %r61, %r57;
	add.s32 	%r63, %r62, %r59;
	mul.wide.s32 	%rd9, %r42, 2;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.u16 	%rs2, [%rd10];
	mul.wide.s32 	%rd11, %r60, 2;
	add.s64 	%rd12, %rd7, %rd11;
	ld.global.u16 	%rs3, [%rd12];
	// begin inline asm
	{mul.f16 %rs1,%rs2,%rs3;
}
	// end inline asm
	mul.wide.s32 	%rd13, %r45, 2;
	add.s64 	%rd14, %rd8, %rd13;
	ld.global.u16 	%rs5, [%rd14];
	add.s64 	%rd15, %rd6, %rd11;
	ld.global.u16 	%rs6, [%rd15];
	// begin inline asm
	{mul.f16 %rs4,%rs5,%rs6;
}
	// end inline asm
	// begin inline asm
	{sub.f16 %rs7,%rs1,%rs4;
}
	// end inline asm
	mul.wide.s32 	%rd16, %r51, 2;
	add.s64 	%rd17, %rd5, %rd16;
	st.global.u16 	[%rd17], %rs7;
	ld.global.u16 	%rs11, [%rd14];
	mul.wide.s32 	%rd18, %r63, 2;
	add.s64 	%rd19, %rd7, %rd18;
	ld.global.u16 	%rs12, [%rd19];
	// begin inline asm
	{mul.f16 %rs10,%rs11,%rs12;
}
	// end inline asm
	ld.global.u16 	%rs14, [%rd10];
	add.s64 	%rd20, %rd6, %rd18;
	ld.global.u16 	%rs15, [%rd20];
	// begin inline asm
	{mul.f16 %rs13,%rs14,%rs15;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs16,%rs10,%rs13;
}
	// end inline asm
	mul.wide.s32 	%rd21, %r54, 2;
	add.s64 	%rd22, %rd5, %rd21;
	st.global.u16 	[%rd22], %rs16;

$L__BB9_2:
	ret;

}
	// .globl	rms_norm_small_f32
.visible .entry rms_norm_small_f32(
	.param .u64 rms_norm_small_f32_param_0,
	.param .u64 rms_norm_small_f32_param_1,
	.param .u32 rms_norm_small_f32_param_2,
	.param .u32 rms_norm_small_f32_param_3,
	.param .u32 rms_norm_small_f32_param_4,
	.param .u32 rms_norm_small_f32_param_5,
	.param .f32 rms_norm_small_f32_param_6
)
{
	.reg .pred 	%p<16>;
	.reg .f32 	%f<50>;
	.reg .b32 	%r<66>;
	.reg .b64 	%rd<47>;


	ld.param.u64 	%rd24, [rms_norm_small_f32_param_0];
	ld.param.u64 	%rd25, [rms_norm_small_f32_param_1];
	ld.param.u32 	%r20, [rms_norm_small_f32_param_2];
	ld.param.u32 	%r21, [rms_norm_small_f32_param_3];
	ld.param.u32 	%r22, [rms_norm_small_f32_param_4];
	ld.param.u32 	%r23, [rms_norm_small_f32_param_5];
	ld.param.f32 	%f9, [rms_norm_small_f32_param_6];
	cvta.to.global.u64 	%rd1, %rd25;
	cvta.to.global.u64 	%rd2, %rd24;
	mov.u32 	%r24, %ctaid.z;
	mov.u32 	%r25, %ctaid.y;
	mov.u32 	%r26, %ctaid.x;
	mul.lo.s32 	%r27, %r26, %r21;
	mad.lo.s32 	%r28, %r25, %r22, %r27;
	mad.lo.s32 	%r29, %r24, %r23, %r28;
	cvt.u64.u32 	%rd3, %r29;
	mov.u32 	%r30, %nctaid.y;
	mad.lo.s32 	%r31, %r24, %r30, %r25;
	mov.u32 	%r32, %nctaid.x;
	mad.lo.s32 	%r33, %r31, %r32, %r26;
	mul.lo.s32 	%r34, %r33, %r20;
	cvt.u64.u32 	%rd4, %r34;
	mov.u32 	%r64, %tid.x;
	setp.ge.s32 	%p1, %r64, %r20;
	mov.f32 	%f49, 0f00000000;
	@%p1 bra 	$L__BB10_7;

	not.b32 	%r35, %r64;
	add.s32 	%r2, %r35, %r20;
	shr.u32 	%r36, %r2, 5;
	add.s32 	%r37, %r36, 1;
	and.b32  	%r59, %r37, 3;
	setp.eq.s32 	%p2, %r59, 0;
	mov.f32 	%f49, 0f00000000;
	mov.u32 	%r60, %r64;
	@%p2 bra 	$L__BB10_4;

	cvt.s64.s32 	%rd26, %r64;
	add.s64 	%rd27, %rd26, %rd3;
	shl.b64 	%rd28, %rd27, 2;
	add.s64 	%rd41, %rd2, %rd28;
	mov.f32 	%f49, 0f00000000;
	mov.u32 	%r60, %r64;

$L__BB10_3:
	.pragma "nounroll";
	ld.global.f32 	%f14, [%rd41];
	fma.rn.f32 	%f49, %f14, %f14, %f49;
	add.s32 	%r60, %r60, 32;
	add.s64 	%rd41, %rd41, 128;
	add.s32 	%r59, %r59, -1;
	setp.ne.s32 	%p3, %r59, 0;
	@%p3 bra 	$L__BB10_3;

$L__BB10_4:
	setp.lt.u32 	%p4, %r2, 96;
	@%p4 bra 	$L__BB10_7;

	cvt.s64.s32 	%rd29, %r60;
	add.s64 	%rd30, %rd29, %rd3;
	shl.b64 	%rd31, %rd30, 2;
	add.s64 	%rd42, %rd2, %rd31;

$L__BB10_6:
	ld.global.f32 	%f15, [%rd42];
	fma.rn.f32 	%f16, %f15, %f15, %f49;
	ld.global.f32 	%f17, [%rd42+128];
	fma.rn.f32 	%f18, %f17, %f17, %f16;
	ld.global.f32 	%f19, [%rd42+256];
	fma.rn.f32 	%f20, %f19, %f19, %f18;
	ld.global.f32 	%f21, [%rd42+384];
	fma.rn.f32 	%f49, %f21, %f21, %f20;
	add.s64 	%rd42, %rd42, 512;
	add.s32 	%r60, %r60, 128;
	setp.lt.s32 	%p5, %r60, %r20;
	@%p5 bra 	$L__BB10_6;

$L__BB10_7:
	mov.b32 	%r38, %f49;
	mov.u32 	%r39, 31;
	mov.u32 	%r40, 16;
	mov.u32 	%r41, -1;
	shfl.sync.bfly.b32 	%r42|%p6, %r38, %r40, %r39, %r41;
	mov.b32 	%f22, %r42;
	add.f32 	%f23, %f49, %f22;
	mov.b32 	%r43, %f23;
	mov.u32 	%r44, 8;
	shfl.sync.bfly.b32 	%r45|%p7, %r43, %r44, %r39, %r41;
	mov.b32 	%f24, %r45;
	add.f32 	%f25, %f23, %f24;
	mov.b32 	%r46, %f25;
	mov.u32 	%r47, 4;
	shfl.sync.bfly.b32 	%r48|%p8, %r46, %r47, %r39, %r41;
	mov.b32 	%f26, %r48;
	add.f32 	%f27, %f25, %f26;
	mov.b32 	%r49, %f27;
	mov.u32 	%r50, 2;
	shfl.sync.bfly.b32 	%r51|%p9, %r49, %r50, %r39, %r41;
	mov.b32 	%f28, %r51;
	add.f32 	%f29, %f27, %f28;
	mov.b32 	%r52, %f29;
	mov.u32 	%r53, 1;
	shfl.sync.bfly.b32 	%r54|%p10, %r52, %r53, %r39, %r41;
	mov.b32 	%f30, %r54;
	add.f32 	%f31, %f29, %f30;
	cvt.rn.f32.s32 	%f32, %r20;
	div.rn.f32 	%f33, %f31, %f32;
	add.f32 	%f34, %f33, %f9;
	rsqrt.approx.f32 	%f8, %f34;
	@%p1 bra 	$L__BB10_14;

	not.b32 	%r55, %r64;
	add.s32 	%r11, %r55, %r20;
	shr.u32 	%r56, %r11, 5;
	add.s32 	%r57, %r56, 1;
	and.b32  	%r63, %r57, 3;
	setp.eq.s32 	%p12, %r63, 0;
	@%p12 bra 	$L__BB10_11;

	cvt.s64.s32 	%rd32, %r64;
	add.s64 	%rd33, %rd32, %rd4;
	shl.b64 	%rd34, %rd33, 2;
	add.s64 	%rd44, %rd1, %rd34;
	add.s64 	%rd35, %rd32, %rd3;
	shl.b64 	%rd36, %rd35, 2;
	add.s64 	%rd43, %rd2, %rd36;

$L__BB10_10:
	.pragma "nounroll";
	ld.global.f32 	%f35, [%rd43];
	mul.f32 	%f36, %f8, %f35;
	st.global.f32 	[%rd44], %f36;
	add.s32 	%r64, %r64, 32;
	add.s64 	%rd44, %rd44, 128;
	add.s64 	%rd43, %rd43, 128;
	add.s32 	%r63, %r63, -1;
	setp.ne.s32 	%p13, %r63, 0;
	@%p13 bra 	$L__BB10_10;

$L__BB10_11:
	setp.lt.u32 	%p14, %r11, 96;
	@%p14 bra 	$L__BB10_14;

	shl.b64 	%rd37, %rd4, 2;
	add.s64 	%rd46, %rd1, %rd37;
	shl.b64 	%rd38, %rd3, 2;
	add.s64 	%rd45, %rd2, %rd38;
	mul.wide.s32 	%rd19, %r64, 4;

$L__BB10_13:
	add.s64 	%rd39, %rd45, %rd19;
	ld.global.f32 	%f37, [%rd39];
	mul.f32 	%f38, %f8, %f37;
	add.s64 	%rd40, %rd46, %rd19;
	st.global.f32 	[%rd40], %f38;
	ld.global.f32 	%f39, [%rd39+128];
	mul.f32 	%f40, %f8, %f39;
	st.global.f32 	[%rd40+128], %f40;
	ld.global.f32 	%f41, [%rd39+256];
	mul.f32 	%f42, %f8, %f41;
	st.global.f32 	[%rd40+256], %f42;
	ld.global.f32 	%f43, [%rd39+384];
	mul.f32 	%f44, %f8, %f43;
	st.global.f32 	[%rd40+384], %f44;
	add.s64 	%rd46, %rd46, 512;
	add.s64 	%rd45, %rd45, 512;
	add.s32 	%r64, %r64, 128;
	setp.lt.s32 	%p15, %r64, %r20;
	@%p15 bra 	$L__BB10_13;

$L__BB10_14:
	ret;

}
	// .globl	rms_norm_f32
.visible .entry rms_norm_f32(
	.param .u64 rms_norm_f32_param_0,
	.param .u64 rms_norm_f32_param_1,
	.param .u32 rms_norm_f32_param_2,
	.param .u32 rms_norm_f32_param_3,
	.param .u32 rms_norm_f32_param_4,
	.param .u32 rms_norm_f32_param_5,
	.param .f32 rms_norm_f32_param_6
)
{
	.reg .pred 	%p<22>;
	.reg .f32 	%f<61>;
	.reg .b32 	%r<91>;
	.reg .b64 	%rd<47>;
	// demoted variable
	.shared .align 4 .b8 _ZZ12rms_norm_f32E5s_sum[128];

	ld.param.u64 	%rd24, [rms_norm_f32_param_0];
	ld.param.u64 	%rd25, [rms_norm_f32_param_1];
	ld.param.u32 	%r21, [rms_norm_f32_param_2];
	ld.param.u32 	%r22, [rms_norm_f32_param_3];
	ld.param.u32 	%r23, [rms_norm_f32_param_4];
	ld.param.u32 	%r24, [rms_norm_f32_param_5];
	ld.param.f32 	%f10, [rms_norm_f32_param_6];
	cvta.to.global.u64 	%rd1, %rd25;
	cvta.to.global.u64 	%rd2, %rd24;
	mov.u32 	%r25, %ctaid.z;
	mov.u32 	%r26, %ctaid.y;
	mov.u32 	%r27, %ctaid.x;
	mul.lo.s32 	%r28, %r27, %r22;
	mad.lo.s32 	%r29, %r26, %r23, %r28;
	mad.lo.s32 	%r30, %r25, %r24, %r29;
	cvt.u64.u32 	%rd3, %r30;
	mov.u32 	%r31, %nctaid.y;
	mad.lo.s32 	%r32, %r25, %r31, %r26;
	mov.u32 	%r33, %nctaid.x;
	mad.lo.s32 	%r34, %r32, %r33, %r27;
	mul.lo.s32 	%r35, %r34, %r21;
	cvt.u64.u32 	%rd4, %r35;
	mov.u32 	%r89, %tid.x;
	setp.ge.s32 	%p1, %r89, %r21;
	mov.f32 	%f60, 0f00000000;
	@%p1 bra 	$L__BB11_7;

	not.b32 	%r36, %r89;
	add.s32 	%r2, %r36, %r21;
	shr.u32 	%r37, %r2, 10;
	add.s32 	%r38, %r37, 1;
	and.b32  	%r84, %r38, 3;
	setp.eq.s32 	%p2, %r84, 0;
	mov.f32 	%f60, 0f00000000;
	mov.u32 	%r85, %r89;
	@%p2 bra 	$L__BB11_4;

	cvt.s64.s32 	%rd26, %r89;
	add.s64 	%rd27, %rd26, %rd3;
	shl.b64 	%rd28, %rd27, 2;
	add.s64 	%rd41, %rd2, %rd28;
	mov.f32 	%f60, 0f00000000;
	mov.u32 	%r85, %r89;

$L__BB11_3:
	.pragma "nounroll";
	ld.global.f32 	%f15, [%rd41];
	fma.rn.f32 	%f60, %f15, %f15, %f60;
	add.s32 	%r85, %r85, 1024;
	add.s64 	%rd41, %rd41, 4096;
	add.s32 	%r84, %r84, -1;
	setp.ne.s32 	%p3, %r84, 0;
	@%p3 bra 	$L__BB11_3;

$L__BB11_4:
	setp.lt.u32 	%p4, %r2, 3072;
	@%p4 bra 	$L__BB11_7;

	cvt.s64.s32 	%rd29, %r85;
	add.s64 	%rd30, %rd29, %rd3;
	shl.b64 	%rd31, %rd30, 2;
	add.s64 	%rd42, %rd2, %rd31;

$L__BB11_6:
	ld.global.f32 	%f16, [%rd42];
	fma.rn.f32 	%f17, %f16, %f16, %f60;
	ld.global.f32 	%f18, [%rd42+4096];
	fma.rn.f32 	%f19, %f18, %f18, %f17;
	ld.global.f32 	%f20, [%rd42+8192];
	fma.rn.f32 	%f21, %f20, %f20, %f19;
	ld.global.f32 	%f22, [%rd42+12288];
	fma.rn.f32 	%f60, %f22, %f22, %f21;
	add.s64 	%rd42, %rd42, 16384;
	add.s32 	%r85, %r85, 4096;
	setp.lt.s32 	%p5, %r85, %r21;
	@%p5 bra 	$L__BB11_6;

$L__BB11_7:
	mov.b32 	%r39, %f60;
	mov.u32 	%r40, 31;
	mov.u32 	%r41, 16;
	mov.u32 	%r42, -1;
	shfl.sync.bfly.b32 	%r43|%p6, %r39, %r41, %r40, %r42;
	mov.b32 	%f23, %r43;
	add.f32 	%f24, %f60, %f23;
	mov.b32 	%r44, %f24;
	mov.u32 	%r45, 8;
	shfl.sync.bfly.b32 	%r46|%p7, %r44, %r45, %r40, %r42;
	mov.b32 	%f25, %r46;
	add.f32 	%f26, %f24, %f25;
	mov.b32 	%r47, %f26;
	mov.u32 	%r48, 4;
	shfl.sync.bfly.b32 	%r49|%p8, %r47, %r48, %r40, %r42;
	mov.b32 	%f27, %r49;
	add.f32 	%f28, %f26, %f27;
	mov.b32 	%r50, %f28;
	mov.u32 	%r51, 2;
	shfl.sync.bfly.b32 	%r52|%p9, %r50, %r51, %r40, %r42;
	mov.b32 	%f29, %r52;
	add.f32 	%f30, %f28, %f29;
	mov.b32 	%r53, %f30;
	mov.u32 	%r54, 1;
	shfl.sync.bfly.b32 	%r55|%p10, %r53, %r54, %r40, %r42;
	mov.b32 	%f31, %r55;
	add.f32 	%f8, %f30, %f31;
	and.b32  	%r11, %r89, 31;
	setp.ne.s32 	%p11, %r11, 0;
	@%p11 bra 	$L__BB11_9;

	shr.u32 	%r56, %r89, 3;
	and.b32  	%r57, %r56, 536870908;
	mov.u32 	%r58, _ZZ12rms_norm_f32E5s_sum;
	add.s32 	%r59, %r58, %r57;
	st.shared.f32 	[%r59], %f8;

$L__BB11_9:
	bar.sync 	0;
	shl.b32 	%r60, %r11, 2;
	mov.u32 	%r61, _ZZ12rms_norm_f32E5s_sum;
	add.s32 	%r62, %r61, %r60;
	ld.shared.f32 	%f32, [%r62];
	mov.b32 	%r64, %f32;
	shfl.sync.bfly.b32 	%r68|%p13, %r64, %r41, %r40, %r42;
	mov.b32 	%f33, %r68;
	add.f32 	%f34, %f32, %f33;
	mov.b32 	%r69, %f34;
	shfl.sync.bfly.b32 	%r71|%p14, %r69, %r45, %r40, %r42;
	mov.b32 	%f35, %r71;
	add.f32 	%f36, %f34, %f35;
	mov.b32 	%r72, %f36;
	shfl.sync.bfly.b32 	%r74|%p15, %r72, %r48, %r40, %r42;
	mov.b32 	%f37, %r74;
	add.f32 	%f38, %f36, %f37;
	mov.b32 	%r75, %f38;
	shfl.sync.bfly.b32 	%r76|%p16, %r75, %r51, %r40, %r42;
	mov.b32 	%f39, %r76;
	add.f32 	%f40, %f38, %f39;
	mov.b32 	%r77, %f40;
	shfl.sync.bfly.b32 	%r79|%p17, %r77, %r54, %r40, %r42;
	mov.b32 	%f41, %r79;
	add.f32 	%f42, %f40, %f41;
	cvt.rn.f32.s32 	%f43, %r21;
	div.rn.f32 	%f44, %f42, %f43;
	add.f32 	%f45, %f44, %f10;
	rsqrt.approx.f32 	%f9, %f45;
	@%p1 bra 	$L__BB11_16;

	not.b32 	%r80, %r89;
	add.s32 	%r12, %r80, %r21;
	shr.u32 	%r81, %r12, 10;
	add.s32 	%r82, %r81, 1;
	and.b32  	%r88, %r82, 3;
	setp.eq.s32 	%p18, %r88, 0;
	@%p18 bra 	$L__BB11_13;

	cvt.s64.s32 	%rd32, %r89;
	add.s64 	%rd33, %rd32, %rd4;
	shl.b64 	%rd34, %rd33, 2;
	add.s64 	%rd44, %rd1, %rd34;
	add.s64 	%rd35, %rd32, %rd3;
	shl.b64 	%rd36, %rd35, 2;
	add.s64 	%rd43, %rd2, %rd36;

$L__BB11_12:
	.pragma "nounroll";
	ld.global.f32 	%f46, [%rd43];
	mul.f32 	%f47, %f9, %f46;
	st.global.f32 	[%rd44], %f47;
	add.s32 	%r89, %r89, 1024;
	add.s64 	%rd44, %rd44, 4096;
	add.s64 	%rd43, %rd43, 4096;
	add.s32 	%r88, %r88, -1;
	setp.ne.s32 	%p19, %r88, 0;
	@%p19 bra 	$L__BB11_12;

$L__BB11_13:
	setp.lt.u32 	%p20, %r12, 3072;
	@%p20 bra 	$L__BB11_16;

	shl.b64 	%rd37, %rd4, 2;
	add.s64 	%rd46, %rd1, %rd37;
	shl.b64 	%rd38, %rd3, 2;
	add.s64 	%rd45, %rd2, %rd38;
	mul.wide.s32 	%rd19, %r89, 4;

$L__BB11_15:
	add.s64 	%rd39, %rd45, %rd19;
	ld.global.f32 	%f48, [%rd39];
	mul.f32 	%f49, %f9, %f48;
	add.s64 	%rd40, %rd46, %rd19;
	st.global.f32 	[%rd40], %f49;
	ld.global.f32 	%f50, [%rd39+4096];
	mul.f32 	%f51, %f9, %f50;
	st.global.f32 	[%rd40+4096], %f51;
	ld.global.f32 	%f52, [%rd39+8192];
	mul.f32 	%f53, %f9, %f52;
	st.global.f32 	[%rd40+8192], %f53;
	ld.global.f32 	%f54, [%rd39+12288];
	mul.f32 	%f55, %f9, %f54;
	st.global.f32 	[%rd40+12288], %f55;
	add.s64 	%rd46, %rd46, 16384;
	add.s64 	%rd45, %rd45, 16384;
	add.s32 	%r89, %r89, 4096;
	setp.lt.s32 	%p21, %r89, %r21;
	@%p21 bra 	$L__BB11_15;

$L__BB11_16:
	ret;

}
	// .globl	rms_norm_small_f16
.visible .entry rms_norm_small_f16(
	.param .u64 rms_norm_small_f16_param_0,
	.param .u64 rms_norm_small_f16_param_1,
	.param .u32 rms_norm_small_f16_param_2,
	.param .u32 rms_norm_small_f16_param_3,
	.param .u32 rms_norm_small_f16_param_4,
	.param .u32 rms_norm_small_f16_param_5,
	.param .align 2 .b8 rms_norm_small_f16_param_6[2]
)
{
	.reg .pred 	%p<16>;
	.reg .b16 	%rs<28>;
	.reg .f32 	%f<45>;
	.reg .b32 	%r<66>;
	.reg .b64 	%rd<47>;


	ld.param.u16 	%rs1, [rms_norm_small_f16_param_6];
	ld.param.u64 	%rd24, [rms_norm_small_f16_param_0];
	ld.param.u64 	%rd25, [rms_norm_small_f16_param_1];
	ld.param.u32 	%r20, [rms_norm_small_f16_param_2];
	ld.param.u32 	%r21, [rms_norm_small_f16_param_3];
	ld.param.u32 	%r22, [rms_norm_small_f16_param_4];
	ld.param.u32 	%r23, [rms_norm_small_f16_param_5];
	cvta.to.global.u64 	%rd1, %rd25;
	cvta.to.global.u64 	%rd2, %rd24;
	mov.u32 	%r24, %ctaid.z;
	mov.u32 	%r25, %ctaid.y;
	mov.u32 	%r26, %ctaid.x;
	mul.lo.s32 	%r27, %r26, %r21;
	mad.lo.s32 	%r28, %r25, %r22, %r27;
	mad.lo.s32 	%r29, %r24, %r23, %r28;
	cvt.u64.u32 	%rd3, %r29;
	mov.u32 	%r30, %nctaid.y;
	mad.lo.s32 	%r31, %r24, %r30, %r25;
	mov.u32 	%r32, %nctaid.x;
	mad.lo.s32 	%r33, %r31, %r32, %r26;
	mul.lo.s32 	%r34, %r33, %r20;
	cvt.u64.u32 	%rd4, %r34;
	mov.u32 	%r64, %tid.x;
	setp.ge.s32 	%p1, %r64, %r20;
	mov.f32 	%f44, 0f00000000;
	@%p1 bra 	$L__BB12_7;

	not.b32 	%r35, %r64;
	add.s32 	%r2, %r35, %r20;
	shr.u32 	%r36, %r2, 5;
	add.s32 	%r37, %r36, 1;
	and.b32  	%r59, %r37, 3;
	setp.eq.s32 	%p2, %r59, 0;
	mov.f32 	%f44, 0f00000000;
	mov.u32 	%r60, %r64;
	@%p2 bra 	$L__BB12_4;

	cvt.s64.s32 	%rd26, %r64;
	add.s64 	%rd27, %rd26, %rd3;
	shl.b64 	%rd28, %rd27, 1;
	add.s64 	%rd41, %rd2, %rd28;
	mov.f32 	%f44, 0f00000000;
	mov.u32 	%r60, %r64;

$L__BB12_3:
	.pragma "nounroll";
	ld.global.u16 	%rs2, [%rd41];
	// begin inline asm
	{  cvt.f32.f16 %f13, %rs2;}

	// end inline asm
	fma.rn.f32 	%f44, %f13, %f13, %f44;
	add.s32 	%r60, %r60, 32;
	add.s64 	%rd41, %rd41, 64;
	add.s32 	%r59, %r59, -1;
	setp.ne.s32 	%p3, %r59, 0;
	@%p3 bra 	$L__BB12_3;

$L__BB12_4:
	setp.lt.u32 	%p4, %r2, 96;
	@%p4 bra 	$L__BB12_7;

	cvt.s64.s32 	%rd29, %r60;
	add.s64 	%rd30, %rd29, %rd3;
	shl.b64 	%rd31, %rd30, 1;
	add.s64 	%rd42, %rd2, %rd31;

$L__BB12_6:
	ld.global.u16 	%rs3, [%rd42];
	// begin inline asm
	{  cvt.f32.f16 %f14, %rs3;}

	// end inline asm
	fma.rn.f32 	%f18, %f14, %f14, %f44;
	ld.global.u16 	%rs4, [%rd42+64];
	// begin inline asm
	{  cvt.f32.f16 %f15, %rs4;}

	// end inline asm
	fma.rn.f32 	%f19, %f15, %f15, %f18;
	ld.global.u16 	%rs5, [%rd42+128];
	// begin inline asm
	{  cvt.f32.f16 %f16, %rs5;}

	// end inline asm
	fma.rn.f32 	%f20, %f16, %f16, %f19;
	ld.global.u16 	%rs6, [%rd42+192];
	// begin inline asm
	{  cvt.f32.f16 %f17, %rs6;}

	// end inline asm
	fma.rn.f32 	%f44, %f17, %f17, %f20;
	add.s64 	%rd42, %rd42, 256;
	add.s32 	%r60, %r60, 128;
	setp.lt.s32 	%p5, %r60, %r20;
	@%p5 bra 	$L__BB12_6;

$L__BB12_7:
	mov.b32 	%r38, %f44;
	mov.u32 	%r39, 31;
	mov.u32 	%r40, 16;
	mov.u32 	%r41, -1;
	shfl.sync.bfly.b32 	%r42|%p6, %r38, %r40, %r39, %r41;
	mov.b32 	%f22, %r42;
	add.f32 	%f23, %f44, %f22;
	mov.b32 	%r43, %f23;
	mov.u32 	%r44, 8;
	shfl.sync.bfly.b32 	%r45|%p7, %r43, %r44, %r39, %r41;
	mov.b32 	%f24, %r45;
	add.f32 	%f25, %f23, %f24;
	mov.b32 	%r46, %f25;
	mov.u32 	%r47, 4;
	shfl.sync.bfly.b32 	%r48|%p8, %r46, %r47, %r39, %r41;
	mov.b32 	%f26, %r48;
	add.f32 	%f27, %f25, %f26;
	mov.b32 	%r49, %f27;
	mov.u32 	%r50, 2;
	shfl.sync.bfly.b32 	%r51|%p9, %r49, %r50, %r39, %r41;
	mov.b32 	%f28, %r51;
	add.f32 	%f29, %f27, %f28;
	mov.b32 	%r52, %f29;
	mov.u32 	%r53, 1;
	shfl.sync.bfly.b32 	%r54|%p10, %r52, %r53, %r39, %r41;
	mov.b32 	%f30, %r54;
	add.f32 	%f31, %f29, %f30;
	// begin inline asm
	{  cvt.f32.f16 %f21, %rs1;}

	// end inline asm
	cvt.rn.f32.s32 	%f32, %r20;
	div.rn.f32 	%f33, %f31, %f32;
	add.f32 	%f34, %f33, %f21;
	rsqrt.approx.f32 	%f8, %f34;
	@%p1 bra 	$L__BB12_14;

	not.b32 	%r55, %r64;
	add.s32 	%r11, %r55, %r20;
	shr.u32 	%r56, %r11, 5;
	add.s32 	%r57, %r56, 1;
	and.b32  	%r63, %r57, 3;
	setp.eq.s32 	%p12, %r63, 0;
	@%p12 bra 	$L__BB12_11;

	cvt.s64.s32 	%rd32, %r64;
	add.s64 	%rd33, %rd32, %rd4;
	shl.b64 	%rd34, %rd33, 1;
	add.s64 	%rd44, %rd1, %rd34;
	add.s64 	%rd35, %rd32, %rd3;
	shl.b64 	%rd36, %rd35, 1;
	add.s64 	%rd43, %rd2, %rd36;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs8, %f8;}

	// end inline asm

$L__BB12_10:
	.pragma "nounroll";
	ld.global.u16 	%rs11, [%rd43];
	// begin inline asm
	{mul.f16 %rs9,%rs8,%rs11;
}
	// end inline asm
	st.global.u16 	[%rd44], %rs9;
	add.s32 	%r64, %r64, 32;
	add.s64 	%rd44, %rd44, 64;
	add.s64 	%rd43, %rd43, 64;
	add.s32 	%r63, %r63, -1;
	setp.ne.s32 	%p13, %r63, 0;
	@%p13 bra 	$L__BB12_10;

$L__BB12_11:
	setp.lt.u32 	%p14, %r11, 96;
	@%p14 bra 	$L__BB12_14;

	shl.b64 	%rd37, %rd4, 1;
	add.s64 	%rd46, %rd1, %rd37;
	shl.b64 	%rd38, %rd3, 1;
	add.s64 	%rd45, %rd2, %rd38;
	mul.wide.s32 	%rd19, %r64, 2;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs12, %f8;}

	// end inline asm

$L__BB12_13:
	add.s64 	%rd39, %rd45, %rd19;
	ld.global.u16 	%rs15, [%rd39];
	// begin inline asm
	{mul.f16 %rs13,%rs12,%rs15;
}
	// end inline asm
	add.s64 	%rd40, %rd46, %rd19;
	st.global.u16 	[%rd40], %rs13;
	ld.global.u16 	%rs19, [%rd39+64];
	// begin inline asm
	{mul.f16 %rs17,%rs12,%rs19;
}
	// end inline asm
	st.global.u16 	[%rd40+64], %rs17;
	ld.global.u16 	%rs23, [%rd39+128];
	// begin inline asm
	{mul.f16 %rs21,%rs12,%rs23;
}
	// end inline asm
	st.global.u16 	[%rd40+128], %rs21;
	ld.global.u16 	%rs27, [%rd39+192];
	// begin inline asm
	{mul.f16 %rs25,%rs12,%rs27;
}
	// end inline asm
	st.global.u16 	[%rd40+192], %rs25;
	add.s64 	%rd46, %rd46, 256;
	add.s64 	%rd45, %rd45, 256;
	add.s32 	%r64, %r64, 128;
	setp.lt.s32 	%p15, %r64, %r20;
	@%p15 bra 	$L__BB12_13;

$L__BB12_14:
	ret;

}
	// .globl	rms_norm_f16
.visible .entry rms_norm_f16(
	.param .u64 rms_norm_f16_param_0,
	.param .u64 rms_norm_f16_param_1,
	.param .u32 rms_norm_f16_param_2,
	.param .u32 rms_norm_f16_param_3,
	.param .u32 rms_norm_f16_param_4,
	.param .u32 rms_norm_f16_param_5,
	.param .align 2 .b8 rms_norm_f16_param_6[2]
)
{
	.reg .pred 	%p<22>;
	.reg .b16 	%rs<28>;
	.reg .f32 	%f<56>;
	.reg .b32 	%r<91>;
	.reg .b64 	%rd<47>;
	// demoted variable
	.shared .align 4 .b8 _ZZ12rms_norm_f16E5s_sum[128];

	ld.param.u16 	%rs1, [rms_norm_f16_param_6];
	ld.param.u64 	%rd24, [rms_norm_f16_param_0];
	ld.param.u64 	%rd25, [rms_norm_f16_param_1];
	ld.param.u32 	%r21, [rms_norm_f16_param_2];
	ld.param.u32 	%r22, [rms_norm_f16_param_3];
	ld.param.u32 	%r23, [rms_norm_f16_param_4];
	ld.param.u32 	%r24, [rms_norm_f16_param_5];
	cvta.to.global.u64 	%rd1, %rd25;
	cvta.to.global.u64 	%rd2, %rd24;
	mov.u32 	%r25, %ctaid.z;
	mov.u32 	%r26, %ctaid.y;
	mov.u32 	%r27, %ctaid.x;
	mul.lo.s32 	%r28, %r27, %r22;
	mad.lo.s32 	%r29, %r26, %r23, %r28;
	mad.lo.s32 	%r30, %r25, %r24, %r29;
	cvt.u64.u32 	%rd3, %r30;
	mov.u32 	%r31, %nctaid.y;
	mad.lo.s32 	%r32, %r25, %r31, %r26;
	mov.u32 	%r33, %nctaid.x;
	mad.lo.s32 	%r34, %r32, %r33, %r27;
	mul.lo.s32 	%r35, %r34, %r21;
	cvt.u64.u32 	%rd4, %r35;
	mov.u32 	%r89, %tid.x;
	setp.ge.s32 	%p1, %r89, %r21;
	mov.f32 	%f55, 0f00000000;
	@%p1 bra 	$L__BB13_7;

	not.b32 	%r36, %r89;
	add.s32 	%r2, %r36, %r21;
	shr.u32 	%r37, %r2, 10;
	add.s32 	%r38, %r37, 1;
	and.b32  	%r84, %r38, 3;
	setp.eq.s32 	%p2, %r84, 0;
	mov.f32 	%f55, 0f00000000;
	mov.u32 	%r85, %r89;
	@%p2 bra 	$L__BB13_4;

	cvt.s64.s32 	%rd26, %r89;
	add.s64 	%rd27, %rd26, %rd3;
	shl.b64 	%rd28, %rd27, 1;
	add.s64 	%rd41, %rd2, %rd28;
	mov.f32 	%f55, 0f00000000;
	mov.u32 	%r85, %r89;

$L__BB13_3:
	.pragma "nounroll";
	ld.global.u16 	%rs2, [%rd41];
	// begin inline asm
	{  cvt.f32.f16 %f14, %rs2;}

	// end inline asm
	fma.rn.f32 	%f55, %f14, %f14, %f55;
	add.s32 	%r85, %r85, 1024;
	add.s64 	%rd41, %rd41, 2048;
	add.s32 	%r84, %r84, -1;
	setp.ne.s32 	%p3, %r84, 0;
	@%p3 bra 	$L__BB13_3;

$L__BB13_4:
	setp.lt.u32 	%p4, %r2, 3072;
	@%p4 bra 	$L__BB13_7;

	cvt.s64.s32 	%rd29, %r85;
	add.s64 	%rd30, %rd29, %rd3;
	shl.b64 	%rd31, %rd30, 1;
	add.s64 	%rd42, %rd2, %rd31;

$L__BB13_6:
	ld.global.u16 	%rs3, [%rd42];
	// begin inline asm
	{  cvt.f32.f16 %f15, %rs3;}

	// end inline asm
	fma.rn.f32 	%f19, %f15, %f15, %f55;
	ld.global.u16 	%rs4, [%rd42+2048];
	// begin inline asm
	{  cvt.f32.f16 %f16, %rs4;}

	// end inline asm
	fma.rn.f32 	%f20, %f16, %f16, %f19;
	ld.global.u16 	%rs5, [%rd42+4096];
	// begin inline asm
	{  cvt.f32.f16 %f17, %rs5;}

	// end inline asm
	fma.rn.f32 	%f21, %f17, %f17, %f20;
	ld.global.u16 	%rs6, [%rd42+6144];
	// begin inline asm
	{  cvt.f32.f16 %f18, %rs6;}

	// end inline asm
	fma.rn.f32 	%f55, %f18, %f18, %f21;
	add.s64 	%rd42, %rd42, 8192;
	add.s32 	%r85, %r85, 4096;
	setp.lt.s32 	%p5, %r85, %r21;
	@%p5 bra 	$L__BB13_6;

$L__BB13_7:
	mov.b32 	%r39, %f55;
	mov.u32 	%r40, 31;
	mov.u32 	%r41, 16;
	mov.u32 	%r42, -1;
	shfl.sync.bfly.b32 	%r43|%p6, %r39, %r41, %r40, %r42;
	mov.b32 	%f22, %r43;
	add.f32 	%f23, %f55, %f22;
	mov.b32 	%r44, %f23;
	mov.u32 	%r45, 8;
	shfl.sync.bfly.b32 	%r46|%p7, %r44, %r45, %r40, %r42;
	mov.b32 	%f24, %r46;
	add.f32 	%f25, %f23, %f24;
	mov.b32 	%r47, %f25;
	mov.u32 	%r48, 4;
	shfl.sync.bfly.b32 	%r49|%p8, %r47, %r48, %r40, %r42;
	mov.b32 	%f26, %r49;
	add.f32 	%f27, %f25, %f26;
	mov.b32 	%r50, %f27;
	mov.u32 	%r51, 2;
	shfl.sync.bfly.b32 	%r52|%p9, %r50, %r51, %r40, %r42;
	mov.b32 	%f28, %r52;
	add.f32 	%f29, %f27, %f28;
	mov.b32 	%r53, %f29;
	mov.u32 	%r54, 1;
	shfl.sync.bfly.b32 	%r55|%p10, %r53, %r54, %r40, %r42;
	mov.b32 	%f30, %r55;
	add.f32 	%f8, %f29, %f30;
	and.b32  	%r11, %r89, 31;
	setp.ne.s32 	%p11, %r11, 0;
	@%p11 bra 	$L__BB13_9;

	shr.u32 	%r56, %r89, 3;
	and.b32  	%r57, %r56, 536870908;
	mov.u32 	%r58, _ZZ12rms_norm_f16E5s_sum;
	add.s32 	%r59, %r58, %r57;
	st.shared.f32 	[%r59], %f8;

$L__BB13_9:
	bar.sync 	0;
	shl.b32 	%r60, %r11, 2;
	mov.u32 	%r61, _ZZ12rms_norm_f16E5s_sum;
	add.s32 	%r62, %r61, %r60;
	ld.shared.f32 	%f32, [%r62];
	mov.b32 	%r64, %f32;
	shfl.sync.bfly.b32 	%r68|%p13, %r64, %r41, %r40, %r42;
	mov.b32 	%f33, %r68;
	add.f32 	%f34, %f32, %f33;
	mov.b32 	%r69, %f34;
	shfl.sync.bfly.b32 	%r71|%p14, %r69, %r45, %r40, %r42;
	mov.b32 	%f35, %r71;
	add.f32 	%f36, %f34, %f35;
	mov.b32 	%r72, %f36;
	shfl.sync.bfly.b32 	%r74|%p15, %r72, %r48, %r40, %r42;
	mov.b32 	%f37, %r74;
	add.f32 	%f38, %f36, %f37;
	mov.b32 	%r75, %f38;
	shfl.sync.bfly.b32 	%r76|%p16, %r75, %r51, %r40, %r42;
	mov.b32 	%f39, %r76;
	add.f32 	%f40, %f38, %f39;
	mov.b32 	%r77, %f40;
	shfl.sync.bfly.b32 	%r79|%p17, %r77, %r54, %r40, %r42;
	mov.b32 	%f41, %r79;
	add.f32 	%f42, %f40, %f41;
	// begin inline asm
	{  cvt.f32.f16 %f31, %rs1;}

	// end inline asm
	cvt.rn.f32.s32 	%f43, %r21;
	div.rn.f32 	%f44, %f42, %f43;
	add.f32 	%f45, %f44, %f31;
	rsqrt.approx.f32 	%f9, %f45;
	@%p1 bra 	$L__BB13_16;

	not.b32 	%r80, %r89;
	add.s32 	%r12, %r80, %r21;
	shr.u32 	%r81, %r12, 10;
	add.s32 	%r82, %r81, 1;
	and.b32  	%r88, %r82, 3;
	setp.eq.s32 	%p18, %r88, 0;
	@%p18 bra 	$L__BB13_13;

	cvt.s64.s32 	%rd32, %r89;
	add.s64 	%rd33, %rd32, %rd4;
	shl.b64 	%rd34, %rd33, 1;
	add.s64 	%rd44, %rd1, %rd34;
	add.s64 	%rd35, %rd32, %rd3;
	shl.b64 	%rd36, %rd35, 1;
	add.s64 	%rd43, %rd2, %rd36;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs8, %f9;}

	// end inline asm

$L__BB13_12:
	.pragma "nounroll";
	ld.global.u16 	%rs11, [%rd43];
	// begin inline asm
	{mul.f16 %rs9,%rs8,%rs11;
}
	// end inline asm
	st.global.u16 	[%rd44], %rs9;
	add.s32 	%r89, %r89, 1024;
	add.s64 	%rd44, %rd44, 2048;
	add.s64 	%rd43, %rd43, 2048;
	add.s32 	%r88, %r88, -1;
	setp.ne.s32 	%p19, %r88, 0;
	@%p19 bra 	$L__BB13_12;

$L__BB13_13:
	setp.lt.u32 	%p20, %r12, 3072;
	@%p20 bra 	$L__BB13_16;

	shl.b64 	%rd37, %rd4, 1;
	add.s64 	%rd46, %rd1, %rd37;
	shl.b64 	%rd38, %rd3, 1;
	add.s64 	%rd45, %rd2, %rd38;
	mul.wide.s32 	%rd19, %r89, 2;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs12, %f9;}

	// end inline asm

$L__BB13_15:
	add.s64 	%rd39, %rd45, %rd19;
	ld.global.u16 	%rs15, [%rd39];
	// begin inline asm
	{mul.f16 %rs13,%rs12,%rs15;
}
	// end inline asm
	add.s64 	%rd40, %rd46, %rd19;
	st.global.u16 	[%rd40], %rs13;
	ld.global.u16 	%rs19, [%rd39+2048];
	// begin inline asm
	{mul.f16 %rs17,%rs12,%rs19;
}
	// end inline asm
	st.global.u16 	[%rd40+2048], %rs17;
	ld.global.u16 	%rs23, [%rd39+4096];
	// begin inline asm
	{mul.f16 %rs21,%rs12,%rs23;
}
	// end inline asm
	st.global.u16 	[%rd40+4096], %rs21;
	ld.global.u16 	%rs27, [%rd39+6144];
	// begin inline asm
	{mul.f16 %rs25,%rs12,%rs27;
}
	// end inline asm
	st.global.u16 	[%rd40+6144], %rs25;
	add.s64 	%rd46, %rd46, 8192;
	add.s64 	%rd45, %rd45, 8192;
	add.s32 	%r89, %r89, 4096;
	setp.lt.s32 	%p21, %r89, %r21;
	@%p21 bra 	$L__BB13_15;

$L__BB13_16:
	ret;

}

